
lora_c_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000003ce  00800100  000027f6  0000288a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005a  008004ce  008004ce  00002c58  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002c58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002cb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  00002cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004e93  00000000  00000000  00002f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b79  00000000  00000000  00007e0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000037e7  00000000  00000000  00008988  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008f4  00000000  00000000  0000c170  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001095  00000000  00000000  0000ca64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000036f9  00000000  00000000  0000daf9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f0  00000000  00000000  000111f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 7d 0e 	jmp	0x1cfa	; 0x1cfa <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 5b 08 	jmp	0x10b6	; 0x10b6 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	14 e0       	ldi	r17, 0x04	; 4
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 ef       	ldi	r30, 0xF6	; 246
      7c:	f7 e2       	ldi	r31, 0x27	; 39
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 3c       	cpi	r26, 0xCE	; 206
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	25 e0       	ldi	r18, 0x05	; 5
      8c:	ae ec       	ldi	r26, 0xCE	; 206
      8e:	b4 e0       	ldi	r27, 0x04	; 4
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 32       	cpi	r26, 0x28	; 40
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <main>
      9e:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Receive>:
				packetReceived = true;
			}
			break;
		}
	}while(!packetReceived);
}
      a6:	e0 ec       	ldi	r30, 0xC0	; 192
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	88 23       	and	r24, r24
      ae:	ec f7       	brge	.-6      	; 0xaa <USART_Receive+0x4>
      b0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      b4:	90 e0       	ldi	r25, 0x00	; 0
      b6:	08 95       	ret

000000b8 <USART_Transmit>:
      b8:	8a 30       	cpi	r24, 0x0A	; 10
      ba:	41 f4       	brne	.+16     	; 0xcc <USART_Transmit+0x14>
      bc:	e0 ec       	ldi	r30, 0xC0	; 192
      be:	f0 e0       	ldi	r31, 0x00	; 0
      c0:	90 81       	ld	r25, Z
      c2:	95 ff       	sbrs	r25, 5
      c4:	fd cf       	rjmp	.-6      	; 0xc0 <USART_Transmit+0x8>
      c6:	9d e0       	ldi	r25, 0x0D	; 13
      c8:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      cc:	e0 ec       	ldi	r30, 0xC0	; 192
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	90 81       	ld	r25, Z
      d2:	95 ff       	sbrs	r25, 5
      d4:	fd cf       	rjmp	.-6      	; 0xd0 <USART_Transmit+0x18>
      d6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      da:	80 e0       	ldi	r24, 0x00	; 0
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	08 95       	ret

000000e0 <ErrorSet>:
      e0:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <er>
      e4:	88 23       	and	r24, r24
      e6:	61 f0       	breq	.+24     	; 0x100 <ErrorSet+0x20>
      e8:	1f 92       	push	r1
      ea:	8f 93       	push	r24
      ec:	83 e1       	ldi	r24, 0x13	; 19
      ee:	91 e0       	ldi	r25, 0x01	; 1
      f0:	9f 93       	push	r25
      f2:	8f 93       	push	r24
      f4:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
      f8:	0f 90       	pop	r0
      fa:	0f 90       	pop	r0
      fc:	0f 90       	pop	r0
      fe:	0f 90       	pop	r0
     100:	08 95       	ret

00000102 <ErrorSetMsg>:
     102:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <er>
     106:	88 23       	and	r24, r24
     108:	81 f0       	breq	.+32     	; 0x12a <ErrorSetMsg+0x28>
     10a:	7f 93       	push	r23
     10c:	6f 93       	push	r22
     10e:	1f 92       	push	r1
     110:	8f 93       	push	r24
     112:	8b e2       	ldi	r24, 0x2B	; 43
     114:	91 e0       	ldi	r25, 0x01	; 1
     116:	9f 93       	push	r25
     118:	8f 93       	push	r24
     11a:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
     11e:	0f 90       	pop	r0
     120:	0f 90       	pop	r0
     122:	0f 90       	pop	r0
     124:	0f 90       	pop	r0
     126:	0f 90       	pop	r0
     128:	0f 90       	pop	r0
     12a:	08 95       	ret

0000012c <SPIbegin>:
     12c:	e4 e6       	ldi	r30, 0x64	; 100
     12e:	f0 e0       	ldi	r31, 0x00	; 0
     130:	90 81       	ld	r25, Z
     132:	9b 7f       	andi	r25, 0xFB	; 251
     134:	90 83       	st	Z, r25
     136:	66 23       	and	r22, r22
     138:	11 f0       	breq	.+4      	; 0x13e <SPIbegin+0x12>
     13a:	90 e5       	ldi	r25, 0x50	; 80
     13c:	01 c0       	rjmp	.+2      	; 0x140 <SPIbegin+0x14>
     13e:	90 e7       	ldi	r25, 0x70	; 112
     140:	4c 70       	andi	r20, 0x0C	; 12
     142:	28 2f       	mov	r18, r24
     144:	23 70       	andi	r18, 0x03	; 3
     146:	42 2b       	or	r20, r18
     148:	49 2b       	or	r20, r25
     14a:	82 fb       	bst	r24, 2
     14c:	88 27       	eor	r24, r24
     14e:	80 f9       	bld	r24, 0
     150:	22 9a       	sbi	0x04, 2	; 4
     152:	25 9a       	sbi	0x04, 5	; 4
     154:	23 9a       	sbi	0x04, 3	; 4
     156:	24 98       	cbi	0x04, 4	; 4
     158:	2a 9a       	sbi	0x05, 2	; 5
     15a:	8d bd       	out	0x2d, r24	; 45
     15c:	4c bd       	out	0x2c, r20	; 44
     15e:	8d b5       	in	r24, 0x2d	; 45
     160:	1f 92       	push	r1
     162:	8f 93       	push	r24
     164:	89 e5       	ldi	r24, 0x59	; 89
     166:	91 e0       	ldi	r25, 0x01	; 1
     168:	9f 93       	push	r25
     16a:	8f 93       	push	r24
     16c:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
     170:	8c b5       	in	r24, 0x2c	; 44
     172:	1f 92       	push	r1
     174:	8f 93       	push	r24
     176:	82 e7       	ldi	r24, 0x72	; 114
     178:	91 e0       	ldi	r25, 0x01	; 1
     17a:	9f 93       	push	r25
     17c:	8f 93       	push	r24
     17e:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
     182:	8d b7       	in	r24, 0x3d	; 61
     184:	9e b7       	in	r25, 0x3e	; 62
     186:	08 96       	adiw	r24, 0x08	; 8
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	f8 94       	cli
     18c:	9e bf       	out	0x3e, r25	; 62
     18e:	0f be       	out	0x3f, r0	; 63
     190:	8d bf       	out	0x3d, r24	; 61
     192:	08 95       	ret

00000194 <getOpMode>:
     194:	f8 94       	cli
     196:	2a 98       	cbi	0x05, 2	; 5
     198:	81 e0       	ldi	r24, 0x01	; 1
     19a:	8e bd       	out	0x2e, r24	; 46
     19c:	00 00       	nop
     19e:	0d b4       	in	r0, 0x2d	; 45
     1a0:	07 fe       	sbrs	r0, 7
     1a2:	fd cf       	rjmp	.-6      	; 0x19e <getOpMode+0xa>
     1a4:	8d ed       	ldi	r24, 0xDD	; 221
     1a6:	8e bd       	out	0x2e, r24	; 46
     1a8:	00 00       	nop
     1aa:	0d b4       	in	r0, 0x2d	; 45
     1ac:	07 fe       	sbrs	r0, 7
     1ae:	fd cf       	rjmp	.-6      	; 0x1aa <getOpMode+0x16>
     1b0:	2a 9a       	sbi	0x05, 2	; 5
     1b2:	78 94       	sei
     1b4:	8e b5       	in	r24, 0x2e	; 46
     1b6:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <operationMode>
     1ba:	98 2f       	mov	r25, r24
     1bc:	99 1f       	adc	r25, r25
     1be:	99 27       	eor	r25, r25
     1c0:	99 1f       	adc	r25, r25
     1c2:	90 93 f9 04 	sts	0x04F9, r25	; 0x8004f9 <modem>
     1c6:	08 95       	ret

000001c8 <setLora>:
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	80 91 f9 04 	lds	r24, 0x04F9	; 0x8004f9 <modem>
     1d0:	81 11       	cpse	r24, r1
     1d2:	5a c0       	rjmp	.+180    	; 0x288 <setLora+0xc0>
     1d4:	c1 e8       	ldi	r28, 0x81	; 129
     1d6:	d0 e8       	ldi	r29, 0x80	; 128
     1d8:	2f ef       	ldi	r18, 0xFF	; 255
     1da:	81 ee       	ldi	r24, 0xE1	; 225
     1dc:	94 e0       	ldi	r25, 0x04	; 4
     1de:	21 50       	subi	r18, 0x01	; 1
     1e0:	80 40       	sbci	r24, 0x00	; 0
     1e2:	90 40       	sbci	r25, 0x00	; 0
     1e4:	e1 f7       	brne	.-8      	; 0x1de <setLora+0x16>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <setLora+0x20>
     1e8:	00 00       	nop
     1ea:	f8 94       	cli
     1ec:	2a 98       	cbi	0x05, 2	; 5
     1ee:	ce bd       	out	0x2e, r28	; 46
     1f0:	00 00       	nop
     1f2:	0d b4       	in	r0, 0x2d	; 45
     1f4:	07 fe       	sbrs	r0, 7
     1f6:	fd cf       	rjmp	.-6      	; 0x1f2 <setLora+0x2a>
     1f8:	1e bc       	out	0x2e, r1	; 46
     1fa:	00 00       	nop
     1fc:	0d b4       	in	r0, 0x2d	; 45
     1fe:	07 fe       	sbrs	r0, 7
     200:	fd cf       	rjmp	.-6      	; 0x1fc <setLora+0x34>
     202:	2a 9a       	sbi	0x05, 2	; 5
     204:	78 94       	sei
     206:	8e b5       	in	r24, 0x2e	; 46
     208:	2f ef       	ldi	r18, 0xFF	; 255
     20a:	80 e7       	ldi	r24, 0x70	; 112
     20c:	92 e0       	ldi	r25, 0x02	; 2
     20e:	21 50       	subi	r18, 0x01	; 1
     210:	80 40       	sbci	r24, 0x00	; 0
     212:	90 40       	sbci	r25, 0x00	; 0
     214:	e1 f7       	brne	.-8      	; 0x20e <setLora+0x46>
     216:	00 c0       	rjmp	.+0      	; 0x218 <setLora+0x50>
     218:	00 00       	nop
     21a:	f8 94       	cli
     21c:	2a 98       	cbi	0x05, 2	; 5
     21e:	ce bd       	out	0x2e, r28	; 46
     220:	00 00       	nop
     222:	0d b4       	in	r0, 0x2d	; 45
     224:	07 fe       	sbrs	r0, 7
     226:	fd cf       	rjmp	.-6      	; 0x222 <setLora+0x5a>
     228:	de bd       	out	0x2e, r29	; 46
     22a:	00 00       	nop
     22c:	0d b4       	in	r0, 0x2d	; 45
     22e:	07 fe       	sbrs	r0, 7
     230:	fd cf       	rjmp	.-6      	; 0x22c <setLora+0x64>
     232:	2a 9a       	sbi	0x05, 2	; 5
     234:	78 94       	sei
     236:	8e b5       	in	r24, 0x2e	; 46
     238:	2f ef       	ldi	r18, 0xFF	; 255
     23a:	80 e7       	ldi	r24, 0x70	; 112
     23c:	92 e0       	ldi	r25, 0x02	; 2
     23e:	21 50       	subi	r18, 0x01	; 1
     240:	80 40       	sbci	r24, 0x00	; 0
     242:	90 40       	sbci	r25, 0x00	; 0
     244:	e1 f7       	brne	.-8      	; 0x23e <setLora+0x76>
     246:	00 c0       	rjmp	.+0      	; 0x248 <setLora+0x80>
     248:	00 00       	nop
     24a:	f8 94       	cli
     24c:	2a 98       	cbi	0x05, 2	; 5
     24e:	ce bd       	out	0x2e, r28	; 46
     250:	00 00       	nop
     252:	0d b4       	in	r0, 0x2d	; 45
     254:	07 fe       	sbrs	r0, 7
     256:	fd cf       	rjmp	.-6      	; 0x252 <setLora+0x8a>
     258:	ce bd       	out	0x2e, r28	; 46
     25a:	00 00       	nop
     25c:	0d b4       	in	r0, 0x2d	; 45
     25e:	07 fe       	sbrs	r0, 7
     260:	fd cf       	rjmp	.-6      	; 0x25c <setLora+0x94>
     262:	2a 9a       	sbi	0x05, 2	; 5
     264:	78 94       	sei
     266:	8e b5       	in	r24, 0x2e	; 46
     268:	2f ef       	ldi	r18, 0xFF	; 255
     26a:	80 e7       	ldi	r24, 0x70	; 112
     26c:	92 e0       	ldi	r25, 0x02	; 2
     26e:	21 50       	subi	r18, 0x01	; 1
     270:	80 40       	sbci	r24, 0x00	; 0
     272:	90 40       	sbci	r25, 0x00	; 0
     274:	e1 f7       	brne	.-8      	; 0x26e <setLora+0xa6>
     276:	00 c0       	rjmp	.+0      	; 0x278 <setLora+0xb0>
     278:	00 00       	nop
     27a:	0e 94 ca 00 	call	0x194	; 0x194 <getOpMode>
     27e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <operationMode>
     282:	81 38       	cpi	r24, 0x81	; 129
     284:	09 f0       	breq	.+2      	; 0x288 <setLora+0xc0>
     286:	a8 cf       	rjmp	.-176    	; 0x1d8 <setLora+0x10>
     288:	0e 94 ca 00 	call	0x194	; 0x194 <getOpMode>
     28c:	81 38       	cpi	r24, 0x81	; 129
     28e:	29 f4       	brne	.+10     	; 0x29a <setLora+0xd2>
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	06 c0       	rjmp	.+12     	; 0x2a6 <setLora+0xde>
     29a:	6b e8       	ldi	r22, 0x8B	; 139
     29c:	71 e0       	ldi	r23, 0x01	; 1
     29e:	85 e0       	ldi	r24, 0x05	; 5
     2a0:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	df 91       	pop	r29
     2a8:	cf 91       	pop	r28
     2aa:	08 95       	ret

000002ac <setValidFIFO>:
     2ac:	0e 94 ca 00 	call	0x194	; 0x194 <getOpMode>
     2b0:	80 91 f9 04 	lds	r24, 0x04F9	; 0x8004f9 <modem>
     2b4:	81 11       	cpse	r24, r1
     2b6:	03 c0       	rjmp	.+6      	; 0x2be <setValidFIFO+0x12>
     2b8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <setLora>
     2bc:	08 95       	ret
     2be:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <operationMode>
     2c2:	81 38       	cpi	r24, 0x81	; 129
     2c4:	29 f4       	brne	.+10     	; 0x2d0 <setValidFIFO+0x24>
     2c6:	80 e0       	ldi	r24, 0x00	; 0
     2c8:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	08 95       	ret
     2d0:	80 38       	cpi	r24, 0x80	; 128
     2d2:	29 f5       	brne	.+74     	; 0x31e <setValidFIFO+0x72>
     2d4:	f8 94       	cli
     2d6:	2a 98       	cbi	0x05, 2	; 5
     2d8:	81 e8       	ldi	r24, 0x81	; 129
     2da:	8e bd       	out	0x2e, r24	; 46
     2dc:	00 00       	nop
     2de:	0d b4       	in	r0, 0x2d	; 45
     2e0:	07 fe       	sbrs	r0, 7
     2e2:	fd cf       	rjmp	.-6      	; 0x2de <setValidFIFO+0x32>
     2e4:	81 e8       	ldi	r24, 0x81	; 129
     2e6:	8e bd       	out	0x2e, r24	; 46
     2e8:	00 00       	nop
     2ea:	0d b4       	in	r0, 0x2d	; 45
     2ec:	07 fe       	sbrs	r0, 7
     2ee:	fd cf       	rjmp	.-6      	; 0x2ea <setValidFIFO+0x3e>
     2f0:	2a 9a       	sbi	0x05, 2	; 5
     2f2:	78 94       	sei
     2f4:	8e b5       	in	r24, 0x2e	; 46
     2f6:	0e 94 ca 00 	call	0x194	; 0x194 <getOpMode>
     2fa:	81 38       	cpi	r24, 0x81	; 129
     2fc:	39 f0       	breq	.+14     	; 0x30c <setValidFIFO+0x60>
     2fe:	69 ea       	ldi	r22, 0xA9	; 169
     300:	71 e0       	ldi	r23, 0x01	; 1
     302:	85 e0       	ldi	r24, 0x05	; 5
     304:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	08 95       	ret
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     312:	81 e0       	ldi	r24, 0x01	; 1
     314:	08 95       	ret
     316:	85 e3       	ldi	r24, 0x35	; 53
     318:	8a 95       	dec	r24
     31a:	f1 f7       	brne	.-4      	; 0x318 <setValidFIFO+0x6c>
     31c:	00 00       	nop
     31e:	0e 94 ca 00 	call	0x194	; 0x194 <getOpMode>
     322:	81 38       	cpi	r24, 0x81	; 129
     324:	c1 f7       	brne	.-16     	; 0x316 <setValidFIFO+0x6a>
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	08 95       	ret

0000032a <checkValidState>:
     32a:	0e 94 ca 00 	call	0x194	; 0x194 <getOpMode>
     32e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <operationMode>
     332:	80 58       	subi	r24, 0x80	; 128
     334:	82 30       	cpi	r24, 0x02	; 2
     336:	28 f4       	brcc	.+10     	; 0x342 <checkValidState+0x18>
     338:	80 e0       	ldi	r24, 0x00	; 0
     33a:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     33e:	81 e0       	ldi	r24, 0x01	; 1
     340:	08 95       	ret
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	08 95       	ret

00000346 <setValidState>:
     346:	cf 93       	push	r28
     348:	c8 2f       	mov	r28, r24
     34a:	0f c0       	rjmp	.+30     	; 0x36a <setValidState+0x24>
     34c:	8f e8       	ldi	r24, 0x8F	; 143
     34e:	91 e0       	ldi	r25, 0x01	; 1
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	f1 f7       	brne	.-4      	; 0x350 <setValidState+0xa>
     354:	00 c0       	rjmp	.+0      	; 0x356 <setValidState+0x10>
     356:	00 00       	nop
     358:	c1 11       	cpse	r28, r1
     35a:	06 c0       	rjmp	.+12     	; 0x368 <setValidState+0x22>
     35c:	6f eb       	ldi	r22, 0xBF	; 191
     35e:	71 e0       	ldi	r23, 0x01	; 1
     360:	80 e1       	ldi	r24, 0x10	; 16
     362:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
     366:	05 c0       	rjmp	.+10     	; 0x372 <setValidState+0x2c>
     368:	c1 50       	subi	r28, 0x01	; 1
     36a:	0e 94 95 01 	call	0x32a	; 0x32a <checkValidState>
     36e:	88 23       	and	r24, r24
     370:	69 f3       	breq	.-38     	; 0x34c <setValidState+0x6>
     372:	cf 91       	pop	r28
     374:	08 95       	ret

00000376 <setOpMode>:
     376:	cf 93       	push	r28
     378:	c8 2f       	mov	r28, r24
     37a:	82 e3       	ldi	r24, 0x32	; 50
     37c:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     380:	f8 94       	cli
     382:	2a 98       	cbi	0x05, 2	; 5
     384:	81 e8       	ldi	r24, 0x81	; 129
     386:	8e bd       	out	0x2e, r24	; 46
     388:	00 00       	nop
     38a:	0d b4       	in	r0, 0x2d	; 45
     38c:	07 fe       	sbrs	r0, 7
     38e:	fd cf       	rjmp	.-6      	; 0x38a <setOpMode+0x14>
     390:	ce bd       	out	0x2e, r28	; 46
     392:	00 00       	nop
     394:	0d b4       	in	r0, 0x2d	; 45
     396:	07 fe       	sbrs	r0, 7
     398:	fd cf       	rjmp	.-6      	; 0x394 <setOpMode+0x1e>
     39a:	2a 9a       	sbi	0x05, 2	; 5
     39c:	78 94       	sei
     39e:	8e b5       	in	r24, 0x2e	; 46
     3a0:	cf 91       	pop	r28
     3a2:	08 95       	ret

000003a4 <setFrequency>:
     3a4:	cf 92       	push	r12
     3a6:	df 92       	push	r13
     3a8:	ef 92       	push	r14
     3aa:	ff 92       	push	r15
     3ac:	6b 01       	movw	r12, r22
     3ae:	7c 01       	movw	r14, r24
     3b0:	82 e3       	ldi	r24, 0x32	; 50
     3b2:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     3b6:	c7 01       	movw	r24, r14
     3b8:	aa 27       	eor	r26, r26
     3ba:	bb 27       	eor	r27, r27
     3bc:	ee ee       	ldi	r30, 0xEE	; 238
     3be:	f4 e0       	ldi	r31, 0x04	; 4
     3c0:	80 83       	st	Z, r24
     3c2:	d1 82       	std	Z+1, r13	; 0x01
     3c4:	c2 82       	std	Z+2, r12	; 0x02
     3c6:	f8 94       	cli
     3c8:	2a 98       	cbi	0x05, 2	; 5
     3ca:	26 e8       	ldi	r18, 0x86	; 134
     3cc:	2e bd       	out	0x2e, r18	; 46
     3ce:	00 00       	nop
     3d0:	0d b4       	in	r0, 0x2d	; 45
     3d2:	07 fe       	sbrs	r0, 7
     3d4:	fd cf       	rjmp	.-6      	; 0x3d0 <setFrequency+0x2c>
     3d6:	8e bd       	out	0x2e, r24	; 46
     3d8:	00 00       	nop
     3da:	0d b4       	in	r0, 0x2d	; 45
     3dc:	07 fe       	sbrs	r0, 7
     3de:	fd cf       	rjmp	.-6      	; 0x3da <setFrequency+0x36>
     3e0:	2a 9a       	sbi	0x05, 2	; 5
     3e2:	78 94       	sei
     3e4:	8e b5       	in	r24, 0x2e	; 46
     3e6:	80 91 ef 04 	lds	r24, 0x04EF	; 0x8004ef <frequency+0x1>
     3ea:	f8 94       	cli
     3ec:	2a 98       	cbi	0x05, 2	; 5
     3ee:	97 e8       	ldi	r25, 0x87	; 135
     3f0:	9e bd       	out	0x2e, r25	; 46
     3f2:	00 00       	nop
     3f4:	0d b4       	in	r0, 0x2d	; 45
     3f6:	07 fe       	sbrs	r0, 7
     3f8:	fd cf       	rjmp	.-6      	; 0x3f4 <setFrequency+0x50>
     3fa:	8e bd       	out	0x2e, r24	; 46
     3fc:	00 00       	nop
     3fe:	0d b4       	in	r0, 0x2d	; 45
     400:	07 fe       	sbrs	r0, 7
     402:	fd cf       	rjmp	.-6      	; 0x3fe <setFrequency+0x5a>
     404:	2a 9a       	sbi	0x05, 2	; 5
     406:	78 94       	sei
     408:	8e b5       	in	r24, 0x2e	; 46
     40a:	80 91 f0 04 	lds	r24, 0x04F0	; 0x8004f0 <frequency+0x2>
     40e:	f8 94       	cli
     410:	2a 98       	cbi	0x05, 2	; 5
     412:	98 e8       	ldi	r25, 0x88	; 136
     414:	9e bd       	out	0x2e, r25	; 46
     416:	00 00       	nop
     418:	0d b4       	in	r0, 0x2d	; 45
     41a:	07 fe       	sbrs	r0, 7
     41c:	fd cf       	rjmp	.-6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     41e:	8e bd       	out	0x2e, r24	; 46
     420:	00 00       	nop
     422:	0d b4       	in	r0, 0x2d	; 45
     424:	07 fe       	sbrs	r0, 7
     426:	fd cf       	rjmp	.-6      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     428:	2a 9a       	sbi	0x05, 2	; 5
     42a:	78 94       	sei
     42c:	8e b5       	in	r24, 0x2e	; 46
     42e:	ff 90       	pop	r15
     430:	ef 90       	pop	r14
     432:	df 90       	pop	r13
     434:	cf 90       	pop	r12
     436:	08 95       	ret

00000438 <setPower>:
     438:	85 31       	cpi	r24, 0x15	; 21
     43a:	91 05       	cpc	r25, r1
     43c:	5c f0       	brlt	.+22     	; 0x454 <setPower+0x1c>
     43e:	ea ee       	ldi	r30, 0xEA	; 234
     440:	f4 e0       	ldi	r31, 0x04	; 4
     442:	84 e1       	ldi	r24, 0x14	; 20
     444:	81 83       	std	Z+1, r24	; 0x01
     446:	8f e0       	ldi	r24, 0x0F	; 15
     448:	82 83       	std	Z+2, r24	; 0x02
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	80 83       	st	Z, r24
     44e:	87 e8       	ldi	r24, 0x87	; 135
     450:	83 83       	std	Z+3, r24	; 0x03
     452:	35 c0       	rjmp	.+106    	; 0x4be <setPower+0x86>
     454:	9c 01       	movw	r18, r24
     456:	22 51       	subi	r18, 0x12	; 18
     458:	31 09       	sbc	r19, r1
     45a:	22 30       	cpi	r18, 0x02	; 2
     45c:	31 05       	cpc	r19, r1
     45e:	48 f4       	brcc	.+18     	; 0x472 <setPower+0x3a>
     460:	ea ee       	ldi	r30, 0xEA	; 234
     462:	f4 e0       	ldi	r31, 0x04	; 4
     464:	84 e8       	ldi	r24, 0x84	; 132
     466:	83 83       	std	Z+3, r24	; 0x03
     468:	8f e0       	ldi	r24, 0x0F	; 15
     46a:	81 83       	std	Z+1, r24	; 0x01
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	80 83       	st	Z, r24
     470:	26 c0       	rjmp	.+76     	; 0x4be <setPower+0x86>
     472:	9c 01       	movw	r18, r24
     474:	2f 50       	subi	r18, 0x0F	; 15
     476:	31 09       	sbc	r19, r1
     478:	23 30       	cpi	r18, 0x03	; 3
     47a:	31 05       	cpc	r19, r1
     47c:	50 f4       	brcc	.+20     	; 0x492 <setPower+0x5a>
     47e:	ea ee       	ldi	r30, 0xEA	; 234
     480:	f4 e0       	ldi	r31, 0x04	; 4
     482:	94 e8       	ldi	r25, 0x84	; 132
     484:	93 83       	std	Z+3, r25	; 0x03
     486:	81 83       	std	Z+1, r24	; 0x01
     488:	91 e0       	ldi	r25, 0x01	; 1
     48a:	90 83       	st	Z, r25
     48c:	82 50       	subi	r24, 0x02	; 2
     48e:	82 83       	std	Z+2, r24	; 0x02
     490:	16 c0       	rjmp	.+44     	; 0x4be <setPower+0x86>
     492:	9c 01       	movw	r18, r24
     494:	2f 5f       	subi	r18, 0xFF	; 255
     496:	3f 4f       	sbci	r19, 0xFF	; 255
     498:	2f 30       	cpi	r18, 0x0F	; 15
     49a:	31 05       	cpc	r19, r1
     49c:	48 f4       	brcc	.+18     	; 0x4b0 <setPower+0x78>
     49e:	ea ee       	ldi	r30, 0xEA	; 234
     4a0:	f4 e0       	ldi	r31, 0x04	; 4
     4a2:	94 e8       	ldi	r25, 0x84	; 132
     4a4:	93 83       	std	Z+3, r25	; 0x03
     4a6:	81 83       	std	Z+1, r24	; 0x01
     4a8:	10 82       	st	Z, r1
     4aa:	8f 5f       	subi	r24, 0xFF	; 255
     4ac:	82 83       	std	Z+2, r24	; 0x02
     4ae:	07 c0       	rjmp	.+14     	; 0x4be <setPower+0x86>
     4b0:	ea ee       	ldi	r30, 0xEA	; 234
     4b2:	f4 e0       	ldi	r31, 0x04	; 4
     4b4:	11 82       	std	Z+1, r1	; 0x01
     4b6:	84 e8       	ldi	r24, 0x84	; 132
     4b8:	83 83       	std	Z+3, r24	; 0x03
     4ba:	10 82       	st	Z, r1
     4bc:	12 82       	std	Z+2, r1	; 0x02
     4be:	ea ee       	ldi	r30, 0xEA	; 234
     4c0:	f4 e0       	ldi	r31, 0x04	; 4
     4c2:	80 81       	ld	r24, Z
     4c4:	20 e8       	ldi	r18, 0x80	; 128
     4c6:	82 9f       	mul	r24, r18
     4c8:	c0 01       	movw	r24, r0
     4ca:	11 24       	eor	r1, r1
     4cc:	92 81       	ldd	r25, Z+2	; 0x02
     4ce:	9f 70       	andi	r25, 0x0F	; 15
     4d0:	89 2b       	or	r24, r25
     4d2:	f8 94       	cli
     4d4:	2a 98       	cbi	0x05, 2	; 5
     4d6:	99 e8       	ldi	r25, 0x89	; 137
     4d8:	9e bd       	out	0x2e, r25	; 46
     4da:	00 00       	nop
     4dc:	0d b4       	in	r0, 0x2d	; 45
     4de:	07 fe       	sbrs	r0, 7
     4e0:	fd cf       	rjmp	.-6      	; 0x4dc <setPower+0xa4>
     4e2:	8e bd       	out	0x2e, r24	; 46
     4e4:	00 00       	nop
     4e6:	0d b4       	in	r0, 0x2d	; 45
     4e8:	07 fe       	sbrs	r0, 7
     4ea:	fd cf       	rjmp	.-6      	; 0x4e6 <setPower+0xae>
     4ec:	2a 9a       	sbi	0x05, 2	; 5
     4ee:	78 94       	sei
     4f0:	8e b5       	in	r24, 0x2e	; 46
     4f2:	80 91 ed 04 	lds	r24, 0x04ED	; 0x8004ed <paConfig+0x3>
     4f6:	f8 94       	cli
     4f8:	2a 98       	cbi	0x05, 2	; 5
     4fa:	9a ed       	ldi	r25, 0xDA	; 218
     4fc:	9e bd       	out	0x2e, r25	; 46
     4fe:	00 00       	nop
     500:	0d b4       	in	r0, 0x2d	; 45
     502:	07 fe       	sbrs	r0, 7
     504:	fd cf       	rjmp	.-6      	; 0x500 <setPower+0xc8>
     506:	8e bd       	out	0x2e, r24	; 46
     508:	00 00       	nop
     50a:	0d b4       	in	r0, 0x2d	; 45
     50c:	07 fe       	sbrs	r0, 7
     50e:	fd cf       	rjmp	.-6      	; 0x50a <setPower+0xd2>
     510:	2a 9a       	sbi	0x05, 2	; 5
     512:	78 94       	sei
     514:	8e b5       	in	r24, 0x2e	; 46
     516:	08 95       	ret

00000518 <setPARamp>:
     518:	cf 93       	push	r28
     51a:	20 e1       	ldi	r18, 0x10	; 16
     51c:	82 9f       	mul	r24, r18
     51e:	c0 01       	movw	r24, r0
     520:	11 24       	eor	r1, r1
     522:	c6 2f       	mov	r28, r22
     524:	c8 2b       	or	r28, r24
     526:	82 e3       	ldi	r24, 0x32	; 50
     528:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     52c:	f8 94       	cli
     52e:	2a 98       	cbi	0x05, 2	; 5
     530:	8a e8       	ldi	r24, 0x8A	; 138
     532:	8e bd       	out	0x2e, r24	; 46
     534:	00 00       	nop
     536:	0d b4       	in	r0, 0x2d	; 45
     538:	07 fe       	sbrs	r0, 7
     53a:	fd cf       	rjmp	.-6      	; 0x536 <setPARamp+0x1e>
     53c:	ce bd       	out	0x2e, r28	; 46
     53e:	00 00       	nop
     540:	0d b4       	in	r0, 0x2d	; 45
     542:	07 fe       	sbrs	r0, 7
     544:	fd cf       	rjmp	.-6      	; 0x540 <setPARamp+0x28>
     546:	2a 9a       	sbi	0x05, 2	; 5
     548:	78 94       	sei
     54a:	8e b5       	in	r24, 0x2e	; 46
     54c:	cf 91       	pop	r28
     54e:	08 95       	ret

00000550 <setLnaGain>:
     550:	cf 93       	push	r28
     552:	90 e2       	ldi	r25, 0x20	; 32
     554:	69 9f       	mul	r22, r25
     556:	b0 01       	movw	r22, r0
     558:	11 24       	eor	r1, r1
     55a:	c8 2f       	mov	r28, r24
     55c:	c6 2b       	or	r28, r22
     55e:	82 e3       	ldi	r24, 0x32	; 50
     560:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     564:	f8 94       	cli
     566:	2a 98       	cbi	0x05, 2	; 5
     568:	8c e8       	ldi	r24, 0x8C	; 140
     56a:	8e bd       	out	0x2e, r24	; 46
     56c:	00 00       	nop
     56e:	0d b4       	in	r0, 0x2d	; 45
     570:	07 fe       	sbrs	r0, 7
     572:	fd cf       	rjmp	.-6      	; 0x56e <setLnaGain+0x1e>
     574:	ce bd       	out	0x2e, r28	; 46
     576:	00 00       	nop
     578:	0d b4       	in	r0, 0x2d	; 45
     57a:	07 fe       	sbrs	r0, 7
     57c:	fd cf       	rjmp	.-6      	; 0x578 <setLnaGain+0x28>
     57e:	2a 9a       	sbi	0x05, 2	; 5
     580:	78 94       	sei
     582:	8e b5       	in	r24, 0x2e	; 46
     584:	cf 91       	pop	r28
     586:	08 95       	ret

00000588 <setModemConfig>:
     588:	1f 93       	push	r17
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	cd b7       	in	r28, 0x3d	; 61
     590:	de b7       	in	r29, 0x3e	; 62
     592:	28 97       	sbiw	r28, 0x08	; 8
     594:	0f b6       	in	r0, 0x3f	; 63
     596:	f8 94       	cli
     598:	de bf       	out	0x3e, r29	; 62
     59a:	0f be       	out	0x3f, r0	; 63
     59c:	cd bf       	out	0x3d, r28	; 61
     59e:	e2 2f       	mov	r30, r18
     5a0:	29 83       	std	Y+1, r18	; 0x01
     5a2:	3a 83       	std	Y+2, r19	; 0x02
     5a4:	14 2f       	mov	r17, r20
     5a6:	4b 83       	std	Y+3, r20	; 0x03
     5a8:	5c 83       	std	Y+4, r21	; 0x04
     5aa:	46 2f       	mov	r20, r22
     5ac:	6d 83       	std	Y+5, r22	; 0x05
     5ae:	7e 83       	std	Y+6, r23	; 0x06
     5b0:	8f 83       	std	Y+7, r24	; 0x07
     5b2:	98 87       	std	Y+8, r25	; 0x08
     5b4:	83 2f       	mov	r24, r19
     5b6:	88 0f       	add	r24, r24
     5b8:	88 0f       	add	r24, r24
     5ba:	88 0f       	add	r24, r24
     5bc:	90 e4       	ldi	r25, 0x40	; 64
     5be:	e9 9f       	mul	r30, r25
     5c0:	90 01       	movw	r18, r0
     5c2:	11 24       	eor	r1, r1
     5c4:	28 2b       	or	r18, r24
     5c6:	42 2b       	or	r20, r18
     5c8:	11 0f       	add	r17, r17
     5ca:	11 0f       	add	r17, r17
     5cc:	41 2b       	or	r20, r17
     5ce:	15 2f       	mov	r17, r21
     5d0:	11 0f       	add	r17, r17
     5d2:	14 2b       	or	r17, r20
     5d4:	82 e3       	ldi	r24, 0x32	; 50
     5d6:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     5da:	f8 94       	cli
     5dc:	2a 98       	cbi	0x05, 2	; 5
     5de:	8d e9       	ldi	r24, 0x9D	; 157
     5e0:	8e bd       	out	0x2e, r24	; 46
     5e2:	00 00       	nop
     5e4:	0d b4       	in	r0, 0x2d	; 45
     5e6:	07 fe       	sbrs	r0, 7
     5e8:	fd cf       	rjmp	.-6      	; 0x5e4 <setModemConfig+0x5c>
     5ea:	1e bd       	out	0x2e, r17	; 46
     5ec:	00 00       	nop
     5ee:	0d b4       	in	r0, 0x2d	; 45
     5f0:	07 fe       	sbrs	r0, 7
     5f2:	fd cf       	rjmp	.-6      	; 0x5ee <setModemConfig+0x66>
     5f4:	2a 9a       	sbi	0x05, 2	; 5
     5f6:	78 94       	sei
     5f8:	8e b5       	in	r24, 0x2e	; 46
     5fa:	45 e3       	ldi	r20, 0x35	; 53
     5fc:	4a 95       	dec	r20
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <setModemConfig+0x74>
     600:	00 00       	nop
     602:	f8 94       	cli
     604:	2a 98       	cbi	0x05, 2	; 5
     606:	8d e1       	ldi	r24, 0x1D	; 29
     608:	8e bd       	out	0x2e, r24	; 46
     60a:	00 00       	nop
     60c:	0d b4       	in	r0, 0x2d	; 45
     60e:	07 fe       	sbrs	r0, 7
     610:	fd cf       	rjmp	.-6      	; 0x60c <setModemConfig+0x84>
     612:	8d ed       	ldi	r24, 0xDD	; 221
     614:	8e bd       	out	0x2e, r24	; 46
     616:	00 00       	nop
     618:	0d b4       	in	r0, 0x2d	; 45
     61a:	07 fe       	sbrs	r0, 7
     61c:	fd cf       	rjmp	.-6      	; 0x618 <setModemConfig+0x90>
     61e:	2a 9a       	sbi	0x05, 2	; 5
     620:	78 94       	sei
     622:	2e b5       	in	r18, 0x2e	; 46
     624:	91 e0       	ldi	r25, 0x01	; 1
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	12 13       	cpse	r17, r18
     62a:	01 c0       	rjmp	.+2      	; 0x62e <setModemConfig+0xa6>
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	29 2f       	mov	r18, r25
     630:	38 2f       	mov	r19, r24
     632:	8e 81       	ldd	r24, Y+6	; 0x06
     634:	40 e1       	ldi	r20, 0x10	; 16
     636:	84 9f       	mul	r24, r20
     638:	c0 01       	movw	r24, r0
     63a:	11 24       	eor	r1, r1
     63c:	9f 81       	ldd	r25, Y+7	; 0x07
     63e:	99 0f       	add	r25, r25
     640:	99 0f       	add	r25, r25
     642:	99 0f       	add	r25, r25
     644:	89 2b       	or	r24, r25
     646:	98 85       	ldd	r25, Y+8	; 0x08
     648:	99 0f       	add	r25, r25
     64a:	99 0f       	add	r25, r25
     64c:	89 2b       	or	r24, r25
     64e:	98 2f       	mov	r25, r24
     650:	96 7f       	andi	r25, 0xF6	; 246
     652:	f8 94       	cli
     654:	2a 98       	cbi	0x05, 2	; 5
     656:	8e e1       	ldi	r24, 0x1E	; 30
     658:	8e bd       	out	0x2e, r24	; 46
     65a:	00 00       	nop
     65c:	0d b4       	in	r0, 0x2d	; 45
     65e:	07 fe       	sbrs	r0, 7
     660:	fd cf       	rjmp	.-6      	; 0x65c <setModemConfig+0xd4>
     662:	8d ed       	ldi	r24, 0xDD	; 221
     664:	8e bd       	out	0x2e, r24	; 46
     666:	00 00       	nop
     668:	0d b4       	in	r0, 0x2d	; 45
     66a:	07 fe       	sbrs	r0, 7
     66c:	fd cf       	rjmp	.-6      	; 0x668 <setModemConfig+0xe0>
     66e:	2a 9a       	sbi	0x05, 2	; 5
     670:	78 94       	sei
     672:	8e b5       	in	r24, 0x2e	; 46
     674:	83 70       	andi	r24, 0x03	; 3
     676:	89 2b       	or	r24, r25
     678:	f8 94       	cli
     67a:	2a 98       	cbi	0x05, 2	; 5
     67c:	9e e9       	ldi	r25, 0x9E	; 158
     67e:	9e bd       	out	0x2e, r25	; 46
     680:	00 00       	nop
     682:	0d b4       	in	r0, 0x2d	; 45
     684:	07 fe       	sbrs	r0, 7
     686:	fd cf       	rjmp	.-6      	; 0x682 <setModemConfig+0xfa>
     688:	8e bd       	out	0x2e, r24	; 46
     68a:	00 00       	nop
     68c:	0d b4       	in	r0, 0x2d	; 45
     68e:	07 fe       	sbrs	r0, 7
     690:	fd cf       	rjmp	.-6      	; 0x68c <setModemConfig+0x104>
     692:	2a 9a       	sbi	0x05, 2	; 5
     694:	78 94       	sei
     696:	9e b5       	in	r25, 0x2e	; 46
     698:	f8 94       	cli
     69a:	2a 98       	cbi	0x05, 2	; 5
     69c:	9e e1       	ldi	r25, 0x1E	; 30
     69e:	9e bd       	out	0x2e, r25	; 46
     6a0:	00 00       	nop
     6a2:	0d b4       	in	r0, 0x2d	; 45
     6a4:	07 fe       	sbrs	r0, 7
     6a6:	fd cf       	rjmp	.-6      	; 0x6a2 <setModemConfig+0x11a>
     6a8:	9d ed       	ldi	r25, 0xDD	; 221
     6aa:	9e bd       	out	0x2e, r25	; 46
     6ac:	00 00       	nop
     6ae:	0d b4       	in	r0, 0x2d	; 45
     6b0:	07 fe       	sbrs	r0, 7
     6b2:	fd cf       	rjmp	.-6      	; 0x6ae <setModemConfig+0x126>
     6b4:	2a 9a       	sbi	0x05, 2	; 5
     6b6:	78 94       	sei
     6b8:	9e b5       	in	r25, 0x2e	; 46
     6ba:	89 17       	cp	r24, r25
     6bc:	11 f0       	breq	.+4      	; 0x6c2 <setModemConfig+0x13a>
     6be:	2f 5f       	subi	r18, 0xFF	; 255
     6c0:	3f 4f       	sbci	r19, 0xFF	; 255
     6c2:	23 2b       	or	r18, r19
     6c4:	31 f0       	breq	.+12     	; 0x6d2 <setModemConfig+0x14a>
     6c6:	69 ed       	ldi	r22, 0xD9	; 217
     6c8:	71 e0       	ldi	r23, 0x01	; 1
     6ca:	8c e0       	ldi	r24, 0x0C	; 12
     6cc:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
     6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <setModemConfig+0x150>
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     6d8:	28 96       	adiw	r28, 0x08	; 8
     6da:	0f b6       	in	r0, 0x3f	; 63
     6dc:	f8 94       	cli
     6de:	de bf       	out	0x3e, r29	; 62
     6e0:	0f be       	out	0x3f, r0	; 63
     6e2:	cd bf       	out	0x3d, r28	; 61
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <setDetectionThreshold>:
     6ec:	cf 93       	push	r28
     6ee:	c8 2f       	mov	r28, r24
     6f0:	82 e3       	ldi	r24, 0x32	; 50
     6f2:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     6f6:	f8 94       	cli
     6f8:	2a 98       	cbi	0x05, 2	; 5
     6fa:	87 eb       	ldi	r24, 0xB7	; 183
     6fc:	8e bd       	out	0x2e, r24	; 46
     6fe:	00 00       	nop
     700:	0d b4       	in	r0, 0x2d	; 45
     702:	07 fe       	sbrs	r0, 7
     704:	fd cf       	rjmp	.-6      	; 0x700 <setDetectionThreshold+0x14>
     706:	ce bd       	out	0x2e, r28	; 46
     708:	00 00       	nop
     70a:	0d b4       	in	r0, 0x2d	; 45
     70c:	07 fe       	sbrs	r0, 7
     70e:	fd cf       	rjmp	.-6      	; 0x70a <setDetectionThreshold+0x1e>
     710:	2a 9a       	sbi	0x05, 2	; 5
     712:	78 94       	sei
     714:	8e b5       	in	r24, 0x2e	; 46
     716:	cf 91       	pop	r28
     718:	08 95       	ret

0000071a <setDetectionOptimize>:
     71a:	cf 93       	push	r28
     71c:	c8 2f       	mov	r28, r24
     71e:	82 e3       	ldi	r24, 0x32	; 50
     720:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     724:	f8 94       	cli
     726:	2a 98       	cbi	0x05, 2	; 5
     728:	81 eb       	ldi	r24, 0xB1	; 177
     72a:	8e bd       	out	0x2e, r24	; 46
     72c:	00 00       	nop
     72e:	0d b4       	in	r0, 0x2d	; 45
     730:	07 fe       	sbrs	r0, 7
     732:	fd cf       	rjmp	.-6      	; 0x72e <setDetectionOptimize+0x14>
     734:	ce bd       	out	0x2e, r28	; 46
     736:	00 00       	nop
     738:	0d b4       	in	r0, 0x2d	; 45
     73a:	07 fe       	sbrs	r0, 7
     73c:	fd cf       	rjmp	.-6      	; 0x738 <setDetectionOptimize+0x1e>
     73e:	2a 9a       	sbi	0x05, 2	; 5
     740:	78 94       	sei
     742:	8e b5       	in	r24, 0x2e	; 46
     744:	cf 91       	pop	r28
     746:	08 95       	ret

00000748 <setOcp>:
     748:	cf 93       	push	r28
     74a:	20 e2       	ldi	r18, 0x20	; 32
     74c:	82 9f       	mul	r24, r18
     74e:	c0 01       	movw	r24, r0
     750:	11 24       	eor	r1, r1
     752:	c6 2f       	mov	r28, r22
     754:	c8 2b       	or	r28, r24
     756:	82 e3       	ldi	r24, 0x32	; 50
     758:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     75c:	f8 94       	cli
     75e:	2a 98       	cbi	0x05, 2	; 5
     760:	8b e8       	ldi	r24, 0x8B	; 139
     762:	8e bd       	out	0x2e, r24	; 46
     764:	00 00       	nop
     766:	0d b4       	in	r0, 0x2d	; 45
     768:	07 fe       	sbrs	r0, 7
     76a:	fd cf       	rjmp	.-6      	; 0x766 <setOcp+0x1e>
     76c:	ce bd       	out	0x2e, r28	; 46
     76e:	00 00       	nop
     770:	0d b4       	in	r0, 0x2d	; 45
     772:	07 fe       	sbrs	r0, 7
     774:	fd cf       	rjmp	.-6      	; 0x770 <setOcp+0x28>
     776:	2a 9a       	sbi	0x05, 2	; 5
     778:	78 94       	sei
     77a:	8e b5       	in	r24, 0x2e	; 46
     77c:	cf 91       	pop	r28
     77e:	08 95       	ret

00000780 <sx1272init>:
     780:	83 ef       	ldi	r24, 0xF3	; 243
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     788:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <setLora>
     78c:	e1 ef       	ldi	r30, 0xF1	; 241
     78e:	f4 e0       	ldi	r31, 0x04	; 4
     790:	10 82       	st	Z, r1
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	39 2f       	mov	r19, r25
     796:	91 83       	std	Z+1, r25	; 0x01
     798:	12 82       	std	Z+2, r1	; 0x02
     79a:	59 2f       	mov	r21, r25
     79c:	93 83       	std	Z+3, r25	; 0x03
     79e:	87 e0       	ldi	r24, 0x07	; 7
     7a0:	78 2f       	mov	r23, r24
     7a2:	85 83       	std	Z+5, r24	; 0x05
     7a4:	16 82       	std	Z+6, r1	; 0x06
     7a6:	97 83       	std	Z+7, r25	; 0x07
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	40 e0       	ldi	r20, 0x00	; 0
     7ac:	60 91 f5 04 	lds	r22, 0x04F5	; 0x8004f5 <modemConfig+0x4>
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	0e 94 c4 02 	call	0x588	; 0x588 <setModemConfig>
     7b6:	60 ec       	ldi	r22, 0xC0	; 192
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	0e 94 a8 02 	call	0x550	; 0x550 <setLnaGain>
     7be:	60 e0       	ldi	r22, 0x00	; 0
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	89 ed       	ldi	r24, 0xD9	; 217
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <setFrequency>
     7ca:	8a e0       	ldi	r24, 0x0A	; 10
     7cc:	0e 94 76 03 	call	0x6ec	; 0x6ec <setDetectionThreshold>
     7d0:	83 e0       	ldi	r24, 0x03	; 3
     7d2:	0e 94 8d 03 	call	0x71a	; 0x71a <setDetectionOptimize>
     7d6:	69 e0       	ldi	r22, 0x09	; 9
     7d8:	81 e0       	ldi	r24, 0x01	; 1
     7da:	0e 94 8c 02 	call	0x518	; 0x518 <setPARamp>
     7de:	8f ef       	ldi	r24, 0xFF	; 255
     7e0:	9f ef       	ldi	r25, 0xFF	; 255
     7e2:	0e 94 1c 02 	call	0x438	; 0x438 <setPower>
     7e6:	6b e0       	ldi	r22, 0x0B	; 11
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	0e 94 a4 03 	call	0x748	; 0x748 <setOcp>
     7ee:	86 e1       	ldi	r24, 0x16	; 22
     7f0:	92 e0       	ldi	r25, 0x02	; 2
     7f2:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     7f6:	88 e2       	ldi	r24, 0x28	; 40
     7f8:	92 e0       	ldi	r25, 0x02	; 2
     7fa:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     7fe:	8b e3       	ldi	r24, 0x3B	; 59
     800:	92 e0       	ldi	r25, 0x02	; 2
     802:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     806:	8d e4       	ldi	r24, 0x4D	; 77
     808:	92 e0       	ldi	r25, 0x02	; 2
     80a:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     80e:	84 e6       	ldi	r24, 0x64	; 100
     810:	92 e0       	ldi	r25, 0x02	; 2
     812:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     816:	85 e7       	ldi	r24, 0x75	; 117
     818:	92 e0       	ldi	r25, 0x02	; 2
     81a:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     81e:	8a e8       	ldi	r24, 0x8A	; 138
     820:	92 e0       	ldi	r25, 0x02	; 2
     822:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     826:	83 ea       	ldi	r24, 0xA3	; 163
     828:	92 e0       	ldi	r25, 0x02	; 2
     82a:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     82e:	81 eb       	ldi	r24, 0xB1	; 177
     830:	92 e0       	ldi	r25, 0x02	; 2
     832:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     836:	86 ec       	ldi	r24, 0xC6	; 198
     838:	92 e0       	ldi	r25, 0x02	; 2
     83a:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     83e:	81 ee       	ldi	r24, 0xE1	; 225
     840:	92 e0       	ldi	r25, 0x02	; 2
     842:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     846:	8e ee       	ldi	r24, 0xEE	; 238
     848:	92 e0       	ldi	r25, 0x02	; 2
     84a:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
     84e:	08 95       	ret

00000850 <setMask>:
     850:	f8 94       	cli
     852:	2a 98       	cbi	0x05, 2	; 5
     854:	91 e1       	ldi	r25, 0x11	; 17
     856:	9e bd       	out	0x2e, r25	; 46
     858:	00 00       	nop
     85a:	0d b4       	in	r0, 0x2d	; 45
     85c:	07 fe       	sbrs	r0, 7
     85e:	fd cf       	rjmp	.-6      	; 0x85a <setMask+0xa>
     860:	9d ed       	ldi	r25, 0xDD	; 221
     862:	9e bd       	out	0x2e, r25	; 46
     864:	00 00       	nop
     866:	0d b4       	in	r0, 0x2d	; 45
     868:	07 fe       	sbrs	r0, 7
     86a:	fd cf       	rjmp	.-6      	; 0x866 <setMask+0x16>
     86c:	2a 9a       	sbi	0x05, 2	; 5
     86e:	78 94       	sei
     870:	9e b5       	in	r25, 0x2e	; 46
     872:	66 23       	and	r22, r22
     874:	59 f0       	breq	.+22     	; 0x88c <setMask+0x3c>
     876:	21 e0       	ldi	r18, 0x01	; 1
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	02 c0       	rjmp	.+4      	; 0x880 <setMask+0x30>
     87c:	22 0f       	add	r18, r18
     87e:	33 1f       	adc	r19, r19
     880:	8a 95       	dec	r24
     882:	e2 f7       	brpl	.-8      	; 0x87c <setMask+0x2c>
     884:	92 2b       	or	r25, r18
     886:	90 93 de 04 	sts	0x04DE, r25	; 0x8004de <irqFlagMask>
     88a:	0b c0       	rjmp	.+22     	; 0x8a2 <setMask+0x52>
     88c:	21 e0       	ldi	r18, 0x01	; 1
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	02 c0       	rjmp	.+4      	; 0x896 <setMask+0x46>
     892:	22 0f       	add	r18, r18
     894:	33 1f       	adc	r19, r19
     896:	8a 95       	dec	r24
     898:	e2 f7       	brpl	.-8      	; 0x892 <setMask+0x42>
     89a:	20 95       	com	r18
     89c:	92 23       	and	r25, r18
     89e:	90 93 de 04 	sts	0x04DE, r25	; 0x8004de <irqFlagMask>
     8a2:	82 e3       	ldi	r24, 0x32	; 50
     8a4:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     8a8:	80 91 de 04 	lds	r24, 0x04DE	; 0x8004de <irqFlagMask>
     8ac:	f8 94       	cli
     8ae:	2a 98       	cbi	0x05, 2	; 5
     8b0:	91 e9       	ldi	r25, 0x91	; 145
     8b2:	9e bd       	out	0x2e, r25	; 46
     8b4:	00 00       	nop
     8b6:	0d b4       	in	r0, 0x2d	; 45
     8b8:	07 fe       	sbrs	r0, 7
     8ba:	fd cf       	rjmp	.-6      	; 0x8b6 <setMask+0x66>
     8bc:	8e bd       	out	0x2e, r24	; 46
     8be:	00 00       	nop
     8c0:	0d b4       	in	r0, 0x2d	; 45
     8c2:	07 fe       	sbrs	r0, 7
     8c4:	fd cf       	rjmp	.-6      	; 0x8c0 <setMask+0x70>
     8c6:	2a 9a       	sbi	0x05, 2	; 5
     8c8:	78 94       	sei
     8ca:	8e b5       	in	r24, 0x2e	; 46
     8cc:	8f e8       	ldi	r24, 0x8F	; 143
     8ce:	91 e0       	ldi	r25, 0x01	; 1
     8d0:	01 97       	sbiw	r24, 0x01	; 1
     8d2:	f1 f7       	brne	.-4      	; 0x8d0 <setMask+0x80>
     8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <setMask+0x86>
     8d6:	00 00       	nop
     8d8:	f8 94       	cli
     8da:	2a 98       	cbi	0x05, 2	; 5
     8dc:	81 e1       	ldi	r24, 0x11	; 17
     8de:	8e bd       	out	0x2e, r24	; 46
     8e0:	00 00       	nop
     8e2:	0d b4       	in	r0, 0x2d	; 45
     8e4:	07 fe       	sbrs	r0, 7
     8e6:	fd cf       	rjmp	.-6      	; 0x8e2 <setMask+0x92>
     8e8:	8d ed       	ldi	r24, 0xDD	; 221
     8ea:	8e bd       	out	0x2e, r24	; 46
     8ec:	00 00       	nop
     8ee:	0d b4       	in	r0, 0x2d	; 45
     8f0:	07 fe       	sbrs	r0, 7
     8f2:	fd cf       	rjmp	.-6      	; 0x8ee <setMask+0x9e>
     8f4:	2a 9a       	sbi	0x05, 2	; 5
     8f6:	78 94       	sei
     8f8:	8e b5       	in	r24, 0x2e	; 46
     8fa:	90 91 de 04 	lds	r25, 0x04DE	; 0x8004de <irqFlagMask>
     8fe:	98 17       	cp	r25, r24
     900:	31 f0       	breq	.+12     	; 0x90e <__stack+0xf>
     902:	6b e0       	ldi	r22, 0x0B	; 11
     904:	73 e0       	ldi	r23, 0x03	; 3
     906:	83 e0       	ldi	r24, 0x03	; 3
     908:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
     90c:	08 95       	ret
     90e:	80 e0       	ldi	r24, 0x00	; 0
     910:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     914:	08 95       	ret

00000916 <maskAll>:
     916:	8f ef       	ldi	r24, 0xFF	; 255
     918:	80 93 de 04 	sts	0x04DE, r24	; 0x8004de <irqFlagMask>
     91c:	f8 94       	cli
     91e:	2a 98       	cbi	0x05, 2	; 5
     920:	81 e9       	ldi	r24, 0x91	; 145
     922:	8e bd       	out	0x2e, r24	; 46
     924:	00 00       	nop
     926:	0d b4       	in	r0, 0x2d	; 45
     928:	07 fe       	sbrs	r0, 7
     92a:	fd cf       	rjmp	.-6      	; 0x926 <maskAll+0x10>
     92c:	8f ef       	ldi	r24, 0xFF	; 255
     92e:	8e bd       	out	0x2e, r24	; 46
     930:	00 00       	nop
     932:	0d b4       	in	r0, 0x2d	; 45
     934:	07 fe       	sbrs	r0, 7
     936:	fd cf       	rjmp	.-6      	; 0x932 <maskAll+0x1c>
     938:	2a 9a       	sbi	0x05, 2	; 5
     93a:	78 94       	sei
     93c:	8e b5       	in	r24, 0x2e	; 46
     93e:	8f e8       	ldi	r24, 0x8F	; 143
     940:	91 e0       	ldi	r25, 0x01	; 1
     942:	01 97       	sbiw	r24, 0x01	; 1
     944:	f1 f7       	brne	.-4      	; 0x942 <maskAll+0x2c>
     946:	00 c0       	rjmp	.+0      	; 0x948 <maskAll+0x32>
     948:	00 00       	nop
     94a:	f8 94       	cli
     94c:	2a 98       	cbi	0x05, 2	; 5
     94e:	81 e1       	ldi	r24, 0x11	; 17
     950:	8e bd       	out	0x2e, r24	; 46
     952:	00 00       	nop
     954:	0d b4       	in	r0, 0x2d	; 45
     956:	07 fe       	sbrs	r0, 7
     958:	fd cf       	rjmp	.-6      	; 0x954 <maskAll+0x3e>
     95a:	8d ed       	ldi	r24, 0xDD	; 221
     95c:	8e bd       	out	0x2e, r24	; 46
     95e:	00 00       	nop
     960:	0d b4       	in	r0, 0x2d	; 45
     962:	07 fe       	sbrs	r0, 7
     964:	fd cf       	rjmp	.-6      	; 0x960 <maskAll+0x4a>
     966:	2a 9a       	sbi	0x05, 2	; 5
     968:	78 94       	sei
     96a:	8e b5       	in	r24, 0x2e	; 46
     96c:	90 91 de 04 	lds	r25, 0x04DE	; 0x8004de <irqFlagMask>
     970:	98 17       	cp	r25, r24
     972:	31 f0       	breq	.+12     	; 0x980 <maskAll+0x6a>
     974:	61 e4       	ldi	r22, 0x41	; 65
     976:	73 e0       	ldi	r23, 0x03	; 3
     978:	83 e0       	ldi	r24, 0x03	; 3
     97a:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
     97e:	08 95       	ret
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     986:	08 95       	ret

00000988 <getFlag>:
     988:	f8 94       	cli
     98a:	2a 98       	cbi	0x05, 2	; 5
     98c:	92 e1       	ldi	r25, 0x12	; 18
     98e:	9e bd       	out	0x2e, r25	; 46
     990:	00 00       	nop
     992:	0d b4       	in	r0, 0x2d	; 45
     994:	07 fe       	sbrs	r0, 7
     996:	fd cf       	rjmp	.-6      	; 0x992 <getFlag+0xa>
     998:	9d ed       	ldi	r25, 0xDD	; 221
     99a:	9e bd       	out	0x2e, r25	; 46
     99c:	00 00       	nop
     99e:	0d b4       	in	r0, 0x2d	; 45
     9a0:	07 fe       	sbrs	r0, 7
     9a2:	fd cf       	rjmp	.-6      	; 0x99e <getFlag+0x16>
     9a4:	2a 9a       	sbi	0x05, 2	; 5
     9a6:	78 94       	sei
     9a8:	2e b5       	in	r18, 0x2e	; 46
     9aa:	20 93 dd 04 	sts	0x04DD, r18	; 0x8004dd <irqFlags>
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	a9 01       	movw	r20, r18
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <getFlag+0x30>
     9b4:	55 95       	asr	r21
     9b6:	47 95       	ror	r20
     9b8:	8a 95       	dec	r24
     9ba:	e2 f7       	brpl	.-8      	; 0x9b4 <getFlag+0x2c>
     9bc:	ca 01       	movw	r24, r20
     9be:	81 70       	andi	r24, 0x01	; 1
     9c0:	08 95       	ret

000009c2 <clearFlag>:
     9c2:	21 e0       	ldi	r18, 0x01	; 1
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	08 2e       	mov	r0, r24
     9c8:	02 c0       	rjmp	.+4      	; 0x9ce <clearFlag+0xc>
     9ca:	22 0f       	add	r18, r18
     9cc:	33 1f       	adc	r19, r19
     9ce:	0a 94       	dec	r0
     9d0:	e2 f7       	brpl	.-8      	; 0x9ca <clearFlag+0x8>
     9d2:	f8 94       	cli
     9d4:	2a 98       	cbi	0x05, 2	; 5
     9d6:	92 e9       	ldi	r25, 0x92	; 146
     9d8:	9e bd       	out	0x2e, r25	; 46
     9da:	00 00       	nop
     9dc:	0d b4       	in	r0, 0x2d	; 45
     9de:	07 fe       	sbrs	r0, 7
     9e0:	fd cf       	rjmp	.-6      	; 0x9dc <clearFlag+0x1a>
     9e2:	2e bd       	out	0x2e, r18	; 46
     9e4:	00 00       	nop
     9e6:	0d b4       	in	r0, 0x2d	; 45
     9e8:	07 fe       	sbrs	r0, 7
     9ea:	fd cf       	rjmp	.-6      	; 0x9e6 <clearFlag+0x24>
     9ec:	2a 9a       	sbi	0x05, 2	; 5
     9ee:	78 94       	sei
     9f0:	9e b5       	in	r25, 0x2e	; 46
     9f2:	95 e3       	ldi	r25, 0x35	; 53
     9f4:	9a 95       	dec	r25
     9f6:	f1 f7       	brne	.-4      	; 0x9f4 <clearFlag+0x32>
     9f8:	00 00       	nop
     9fa:	f8 94       	cli
     9fc:	2a 98       	cbi	0x05, 2	; 5
     9fe:	92 e1       	ldi	r25, 0x12	; 18
     a00:	9e bd       	out	0x2e, r25	; 46
     a02:	00 00       	nop
     a04:	0d b4       	in	r0, 0x2d	; 45
     a06:	07 fe       	sbrs	r0, 7
     a08:	fd cf       	rjmp	.-6      	; 0xa04 <clearFlag+0x42>
     a0a:	9d ed       	ldi	r25, 0xDD	; 221
     a0c:	9e bd       	out	0x2e, r25	; 46
     a0e:	00 00       	nop
     a10:	0d b4       	in	r0, 0x2d	; 45
     a12:	07 fe       	sbrs	r0, 7
     a14:	fd cf       	rjmp	.-6      	; 0xa10 <clearFlag+0x4e>
     a16:	2a 9a       	sbi	0x05, 2	; 5
     a18:	78 94       	sei
     a1a:	2e b5       	in	r18, 0x2e	; 46
     a1c:	20 93 dd 04 	sts	0x04DD, r18	; 0x8004dd <irqFlags>
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	08 2e       	mov	r0, r24
     a24:	02 c0       	rjmp	.+4      	; 0xa2a <clearFlag+0x68>
     a26:	35 95       	asr	r19
     a28:	27 95       	ror	r18
     a2a:	0a 94       	dec	r0
     a2c:	e2 f7       	brpl	.-8      	; 0xa26 <clearFlag+0x64>
     a2e:	20 ff       	sbrs	r18, 0
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <clearFlag+0x78>
     a32:	82 5e       	subi	r24, 0xE2	; 226
     a34:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     a38:	08 95       	ret
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     a40:	08 95       	ret

00000a42 <clearAll>:
     a42:	f8 94       	cli
     a44:	2a 98       	cbi	0x05, 2	; 5
     a46:	82 e9       	ldi	r24, 0x92	; 146
     a48:	8e bd       	out	0x2e, r24	; 46
     a4a:	00 00       	nop
     a4c:	0d b4       	in	r0, 0x2d	; 45
     a4e:	07 fe       	sbrs	r0, 7
     a50:	fd cf       	rjmp	.-6      	; 0xa4c <clearAll+0xa>
     a52:	8f ef       	ldi	r24, 0xFF	; 255
     a54:	8e bd       	out	0x2e, r24	; 46
     a56:	00 00       	nop
     a58:	0d b4       	in	r0, 0x2d	; 45
     a5a:	07 fe       	sbrs	r0, 7
     a5c:	fd cf       	rjmp	.-6      	; 0xa58 <clearAll+0x16>
     a5e:	2a 9a       	sbi	0x05, 2	; 5
     a60:	78 94       	sei
     a62:	8e b5       	in	r24, 0x2e	; 46
     a64:	f8 94       	cli
     a66:	2a 98       	cbi	0x05, 2	; 5
     a68:	82 e1       	ldi	r24, 0x12	; 18
     a6a:	8e bd       	out	0x2e, r24	; 46
     a6c:	00 00       	nop
     a6e:	0d b4       	in	r0, 0x2d	; 45
     a70:	07 fe       	sbrs	r0, 7
     a72:	fd cf       	rjmp	.-6      	; 0xa6e <clearAll+0x2c>
     a74:	8d ed       	ldi	r24, 0xDD	; 221
     a76:	8e bd       	out	0x2e, r24	; 46
     a78:	00 00       	nop
     a7a:	0d b4       	in	r0, 0x2d	; 45
     a7c:	07 fe       	sbrs	r0, 7
     a7e:	fd cf       	rjmp	.-6      	; 0xa7a <clearAll+0x38>
     a80:	2a 9a       	sbi	0x05, 2	; 5
     a82:	78 94       	sei
     a84:	8e b5       	in	r24, 0x2e	; 46
     a86:	80 93 dd 04 	sts	0x04DD, r24	; 0x8004dd <irqFlags>
     a8a:	8f e8       	ldi	r24, 0x8F	; 143
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	f1 f7       	brne	.-4      	; 0xa8e <clearAll+0x4c>
     a92:	00 c0       	rjmp	.+0      	; 0xa94 <clearAll+0x52>
     a94:	00 00       	nop
     a96:	80 91 dd 04 	lds	r24, 0x04DD	; 0x8004dd <irqFlags>
     a9a:	88 23       	and	r24, r24
     a9c:	21 f0       	breq	.+8      	; 0xaa6 <clearAll+0x64>
     a9e:	83 e0       	ldi	r24, 0x03	; 3
     aa0:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     aa4:	08 95       	ret
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     aac:	08 95       	ret

00000aae <sync>:
     aae:	0e 94 56 01 	call	0x2ac	; 0x2ac <setValidFIFO>
     ab2:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     ab6:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     aba:	88 23       	and	r24, r24
     abc:	21 f0       	breq	.+8      	; 0xac6 <sync+0x18>
     abe:	85 e0       	ldi	r24, 0x05	; 5
     ac0:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     ac4:	08 95       	ret
     ac6:	f8 94       	cli
     ac8:	2a 98       	cbi	0x05, 2	; 5
     aca:	8d e0       	ldi	r24, 0x0D	; 13
     acc:	8e bd       	out	0x2e, r24	; 46
     ace:	00 00       	nop
     ad0:	0d b4       	in	r0, 0x2d	; 45
     ad2:	07 fe       	sbrs	r0, 7
     ad4:	fd cf       	rjmp	.-6      	; 0xad0 <sync+0x22>
     ad6:	8d ed       	ldi	r24, 0xDD	; 221
     ad8:	8e bd       	out	0x2e, r24	; 46
     ada:	00 00       	nop
     adc:	0d b4       	in	r0, 0x2d	; 45
     ade:	07 fe       	sbrs	r0, 7
     ae0:	fd cf       	rjmp	.-6      	; 0xadc <sync+0x2e>
     ae2:	2a 9a       	sbi	0x05, 2	; 5
     ae4:	78 94       	sei
     ae6:	8e b5       	in	r24, 0x2e	; 46
     ae8:	80 93 e9 04 	sts	0x04E9, r24	; 0x8004e9 <addrPtr>
     aec:	f8 94       	cli
     aee:	2a 98       	cbi	0x05, 2	; 5
     af0:	8e e0       	ldi	r24, 0x0E	; 14
     af2:	8e bd       	out	0x2e, r24	; 46
     af4:	00 00       	nop
     af6:	0d b4       	in	r0, 0x2d	; 45
     af8:	07 fe       	sbrs	r0, 7
     afa:	fd cf       	rjmp	.-6      	; 0xaf6 <sync+0x48>
     afc:	8d ed       	ldi	r24, 0xDD	; 221
     afe:	8e bd       	out	0x2e, r24	; 46
     b00:	00 00       	nop
     b02:	0d b4       	in	r0, 0x2d	; 45
     b04:	07 fe       	sbrs	r0, 7
     b06:	fd cf       	rjmp	.-6      	; 0xb02 <sync+0x54>
     b08:	2a 9a       	sbi	0x05, 2	; 5
     b0a:	78 94       	sei
     b0c:	8e b5       	in	r24, 0x2e	; 46
     b0e:	80 93 e8 04 	sts	0x04E8, r24	; 0x8004e8 <txBasePtr>
     b12:	f8 94       	cli
     b14:	2a 98       	cbi	0x05, 2	; 5
     b16:	8e e0       	ldi	r24, 0x0E	; 14
     b18:	8e bd       	out	0x2e, r24	; 46
     b1a:	00 00       	nop
     b1c:	0d b4       	in	r0, 0x2d	; 45
     b1e:	07 fe       	sbrs	r0, 7
     b20:	fd cf       	rjmp	.-6      	; 0xb1c <sync+0x6e>
     b22:	8d ed       	ldi	r24, 0xDD	; 221
     b24:	8e bd       	out	0x2e, r24	; 46
     b26:	00 00       	nop
     b28:	0d b4       	in	r0, 0x2d	; 45
     b2a:	07 fe       	sbrs	r0, 7
     b2c:	fd cf       	rjmp	.-6      	; 0xb28 <sync+0x7a>
     b2e:	2a 9a       	sbi	0x05, 2	; 5
     b30:	78 94       	sei
     b32:	8e b5       	in	r24, 0x2e	; 46
     b34:	80 93 e7 04 	sts	0x04E7, r24	; 0x8004e7 <rxBasePtr>
     b38:	f8 94       	cli
     b3a:	2a 98       	cbi	0x05, 2	; 5
     b3c:	80 e1       	ldi	r24, 0x10	; 16
     b3e:	8e bd       	out	0x2e, r24	; 46
     b40:	00 00       	nop
     b42:	0d b4       	in	r0, 0x2d	; 45
     b44:	07 fe       	sbrs	r0, 7
     b46:	fd cf       	rjmp	.-6      	; 0xb42 <sync+0x94>
     b48:	8d ed       	ldi	r24, 0xDD	; 221
     b4a:	8e bd       	out	0x2e, r24	; 46
     b4c:	00 00       	nop
     b4e:	0d b4       	in	r0, 0x2d	; 45
     b50:	07 fe       	sbrs	r0, 7
     b52:	fd cf       	rjmp	.-6      	; 0xb4e <sync+0xa0>
     b54:	2a 9a       	sbi	0x05, 2	; 5
     b56:	78 94       	sei
     b58:	8e b5       	in	r24, 0x2e	; 46
     b5a:	f8 94       	cli
     b5c:	2a 98       	cbi	0x05, 2	; 5
     b5e:	83 e1       	ldi	r24, 0x13	; 19
     b60:	8e bd       	out	0x2e, r24	; 46
     b62:	00 00       	nop
     b64:	0d b4       	in	r0, 0x2d	; 45
     b66:	07 fe       	sbrs	r0, 7
     b68:	fd cf       	rjmp	.-6      	; 0xb64 <sync+0xb6>
     b6a:	8d ed       	ldi	r24, 0xDD	; 221
     b6c:	8e bd       	out	0x2e, r24	; 46
     b6e:	00 00       	nop
     b70:	0d b4       	in	r0, 0x2d	; 45
     b72:	07 fe       	sbrs	r0, 7
     b74:	fd cf       	rjmp	.-6      	; 0xb70 <sync+0xc2>
     b76:	2a 9a       	sbi	0x05, 2	; 5
     b78:	78 94       	sei
     b7a:	8e b5       	in	r24, 0x2e	; 46
     b7c:	f8 94       	cli
     b7e:	2a 98       	cbi	0x05, 2	; 5
     b80:	85 e2       	ldi	r24, 0x25	; 37
     b82:	8e bd       	out	0x2e, r24	; 46
     b84:	00 00       	nop
     b86:	0d b4       	in	r0, 0x2d	; 45
     b88:	07 fe       	sbrs	r0, 7
     b8a:	fd cf       	rjmp	.-6      	; 0xb86 <sync+0xd8>
     b8c:	8d ed       	ldi	r24, 0xDD	; 221
     b8e:	8e bd       	out	0x2e, r24	; 46
     b90:	00 00       	nop
     b92:	0d b4       	in	r0, 0x2d	; 45
     b94:	07 fe       	sbrs	r0, 7
     b96:	fd cf       	rjmp	.-6      	; 0xb92 <sync+0xe4>
     b98:	2a 9a       	sbi	0x05, 2	; 5
     b9a:	78 94       	sei
     b9c:	8e b5       	in	r24, 0x2e	; 46
     b9e:	10 92 e6 04 	sts	0x04E6, r1	; 0x8004e6 <validHeaderCnt+0x1>
     ba2:	10 92 e5 04 	sts	0x04E5, r1	; 0x8004e5 <validHeaderCnt>
     ba6:	f8 94       	cli
     ba8:	2a 98       	cbi	0x05, 2	; 5
     baa:	85 e1       	ldi	r24, 0x15	; 21
     bac:	8e bd       	out	0x2e, r24	; 46
     bae:	00 00       	nop
     bb0:	0d b4       	in	r0, 0x2d	; 45
     bb2:	07 fe       	sbrs	r0, 7
     bb4:	fd cf       	rjmp	.-6      	; 0xbb0 <sync+0x102>
     bb6:	8d ed       	ldi	r24, 0xDD	; 221
     bb8:	8e bd       	out	0x2e, r24	; 46
     bba:	00 00       	nop
     bbc:	0d b4       	in	r0, 0x2d	; 45
     bbe:	07 fe       	sbrs	r0, 7
     bc0:	fd cf       	rjmp	.-6      	; 0xbbc <sync+0x10e>
     bc2:	2a 9a       	sbi	0x05, 2	; 5
     bc4:	78 94       	sei
     bc6:	2e b5       	in	r18, 0x2e	; 46
     bc8:	80 91 e5 04 	lds	r24, 0x04E5	; 0x8004e5 <validHeaderCnt>
     bcc:	90 91 e6 04 	lds	r25, 0x04E6	; 0x8004e6 <validHeaderCnt+0x1>
     bd0:	82 2b       	or	r24, r18
     bd2:	90 93 e6 04 	sts	0x04E6, r25	; 0x8004e6 <validHeaderCnt+0x1>
     bd6:	80 93 e5 04 	sts	0x04E5, r24	; 0x8004e5 <validHeaderCnt>
     bda:	f8 94       	cli
     bdc:	2a 98       	cbi	0x05, 2	; 5
     bde:	84 e1       	ldi	r24, 0x14	; 20
     be0:	8e bd       	out	0x2e, r24	; 46
     be2:	00 00       	nop
     be4:	0d b4       	in	r0, 0x2d	; 45
     be6:	07 fe       	sbrs	r0, 7
     be8:	fd cf       	rjmp	.-6      	; 0xbe4 <sync+0x136>
     bea:	8d ed       	ldi	r24, 0xDD	; 221
     bec:	8e bd       	out	0x2e, r24	; 46
     bee:	00 00       	nop
     bf0:	0d b4       	in	r0, 0x2d	; 45
     bf2:	07 fe       	sbrs	r0, 7
     bf4:	fd cf       	rjmp	.-6      	; 0xbf0 <sync+0x142>
     bf6:	2a 9a       	sbi	0x05, 2	; 5
     bf8:	78 94       	sei
     bfa:	2e b5       	in	r18, 0x2e	; 46
     bfc:	80 91 e5 04 	lds	r24, 0x04E5	; 0x8004e5 <validHeaderCnt>
     c00:	90 91 e6 04 	lds	r25, 0x04E6	; 0x8004e6 <validHeaderCnt+0x1>
     c04:	92 2b       	or	r25, r18
     c06:	90 93 e6 04 	sts	0x04E6, r25	; 0x8004e6 <validHeaderCnt+0x1>
     c0a:	80 93 e5 04 	sts	0x04E5, r24	; 0x8004e5 <validHeaderCnt>
     c0e:	10 92 e4 04 	sts	0x04E4, r1	; 0x8004e4 <validPacketCnt+0x1>
     c12:	10 92 e3 04 	sts	0x04E3, r1	; 0x8004e3 <validPacketCnt>
     c16:	f8 94       	cli
     c18:	2a 98       	cbi	0x05, 2	; 5
     c1a:	87 e1       	ldi	r24, 0x17	; 23
     c1c:	8e bd       	out	0x2e, r24	; 46
     c1e:	00 00       	nop
     c20:	0d b4       	in	r0, 0x2d	; 45
     c22:	07 fe       	sbrs	r0, 7
     c24:	fd cf       	rjmp	.-6      	; 0xc20 <sync+0x172>
     c26:	8d ed       	ldi	r24, 0xDD	; 221
     c28:	8e bd       	out	0x2e, r24	; 46
     c2a:	00 00       	nop
     c2c:	0d b4       	in	r0, 0x2d	; 45
     c2e:	07 fe       	sbrs	r0, 7
     c30:	fd cf       	rjmp	.-6      	; 0xc2c <sync+0x17e>
     c32:	2a 9a       	sbi	0x05, 2	; 5
     c34:	78 94       	sei
     c36:	2e b5       	in	r18, 0x2e	; 46
     c38:	80 91 e3 04 	lds	r24, 0x04E3	; 0x8004e3 <validPacketCnt>
     c3c:	90 91 e4 04 	lds	r25, 0x04E4	; 0x8004e4 <validPacketCnt+0x1>
     c40:	82 2b       	or	r24, r18
     c42:	90 93 e4 04 	sts	0x04E4, r25	; 0x8004e4 <validPacketCnt+0x1>
     c46:	80 93 e3 04 	sts	0x04E3, r24	; 0x8004e3 <validPacketCnt>
     c4a:	f8 94       	cli
     c4c:	2a 98       	cbi	0x05, 2	; 5
     c4e:	86 e1       	ldi	r24, 0x16	; 22
     c50:	8e bd       	out	0x2e, r24	; 46
     c52:	00 00       	nop
     c54:	0d b4       	in	r0, 0x2d	; 45
     c56:	07 fe       	sbrs	r0, 7
     c58:	fd cf       	rjmp	.-6      	; 0xc54 <sync+0x1a6>
     c5a:	8d ed       	ldi	r24, 0xDD	; 221
     c5c:	8e bd       	out	0x2e, r24	; 46
     c5e:	00 00       	nop
     c60:	0d b4       	in	r0, 0x2d	; 45
     c62:	07 fe       	sbrs	r0, 7
     c64:	fd cf       	rjmp	.-6      	; 0xc60 <sync+0x1b2>
     c66:	2a 9a       	sbi	0x05, 2	; 5
     c68:	78 94       	sei
     c6a:	2e b5       	in	r18, 0x2e	; 46
     c6c:	80 91 e3 04 	lds	r24, 0x04E3	; 0x8004e3 <validPacketCnt>
     c70:	90 91 e4 04 	lds	r25, 0x04E4	; 0x8004e4 <validPacketCnt+0x1>
     c74:	92 2b       	or	r25, r18
     c76:	90 93 e4 04 	sts	0x04E4, r25	; 0x8004e4 <validPacketCnt+0x1>
     c7a:	80 93 e3 04 	sts	0x04E3, r24	; 0x8004e3 <validPacketCnt>
     c7e:	10 92 e2 04 	sts	0x04E2, r1	; 0x8004e2 <rxSymbTimeout+0x1>
     c82:	10 92 e1 04 	sts	0x04E1, r1	; 0x8004e1 <rxSymbTimeout>
     c86:	f8 94       	cli
     c88:	2a 98       	cbi	0x05, 2	; 5
     c8a:	8e e1       	ldi	r24, 0x1E	; 30
     c8c:	8e bd       	out	0x2e, r24	; 46
     c8e:	00 00       	nop
     c90:	0d b4       	in	r0, 0x2d	; 45
     c92:	07 fe       	sbrs	r0, 7
     c94:	fd cf       	rjmp	.-6      	; 0xc90 <sync+0x1e2>
     c96:	8d ed       	ldi	r24, 0xDD	; 221
     c98:	8e bd       	out	0x2e, r24	; 46
     c9a:	00 00       	nop
     c9c:	0d b4       	in	r0, 0x2d	; 45
     c9e:	07 fe       	sbrs	r0, 7
     ca0:	fd cf       	rjmp	.-6      	; 0xc9c <sync+0x1ee>
     ca2:	2a 9a       	sbi	0x05, 2	; 5
     ca4:	78 94       	sei
     ca6:	8e b5       	in	r24, 0x2e	; 46
     ca8:	f8 94       	cli
     caa:	2a 98       	cbi	0x05, 2	; 5
     cac:	8f e1       	ldi	r24, 0x1F	; 31
     cae:	8e bd       	out	0x2e, r24	; 46
     cb0:	00 00       	nop
     cb2:	0d b4       	in	r0, 0x2d	; 45
     cb4:	07 fe       	sbrs	r0, 7
     cb6:	fd cf       	rjmp	.-6      	; 0xcb2 <sync+0x204>
     cb8:	8d ed       	ldi	r24, 0xDD	; 221
     cba:	8e bd       	out	0x2e, r24	; 46
     cbc:	00 00       	nop
     cbe:	0d b4       	in	r0, 0x2d	; 45
     cc0:	07 fe       	sbrs	r0, 7
     cc2:	fd cf       	rjmp	.-6      	; 0xcbe <sync+0x210>
     cc4:	2a 9a       	sbi	0x05, 2	; 5
     cc6:	78 94       	sei
     cc8:	2e b5       	in	r18, 0x2e	; 46
     cca:	80 91 e1 04 	lds	r24, 0x04E1	; 0x8004e1 <rxSymbTimeout>
     cce:	90 91 e2 04 	lds	r25, 0x04E2	; 0x8004e2 <rxSymbTimeout+0x1>
     cd2:	82 2b       	or	r24, r18
     cd4:	90 93 e2 04 	sts	0x04E2, r25	; 0x8004e2 <rxSymbTimeout+0x1>
     cd8:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <rxSymbTimeout>
     cdc:	8f ef       	ldi	r24, 0xFF	; 255
     cde:	9f ef       	ldi	r25, 0xFF	; 255
     ce0:	90 93 e0 04 	sts	0x04E0, r25	; 0x8004e0 <txSymbTimeout+0x1>
     ce4:	80 93 df 04 	sts	0x04DF, r24	; 0x8004df <txSymbTimeout>
     ce8:	f8 94       	cli
     cea:	2a 98       	cbi	0x05, 2	; 5
     cec:	82 e2       	ldi	r24, 0x22	; 34
     cee:	8e bd       	out	0x2e, r24	; 46
     cf0:	00 00       	nop
     cf2:	0d b4       	in	r0, 0x2d	; 45
     cf4:	07 fe       	sbrs	r0, 7
     cf6:	fd cf       	rjmp	.-6      	; 0xcf2 <sync+0x244>
     cf8:	8d ed       	ldi	r24, 0xDD	; 221
     cfa:	8e bd       	out	0x2e, r24	; 46
     cfc:	00 00       	nop
     cfe:	0d b4       	in	r0, 0x2d	; 45
     d00:	07 fe       	sbrs	r0, 7
     d02:	fd cf       	rjmp	.-6      	; 0xcfe <sync+0x250>
     d04:	2a 9a       	sbi	0x05, 2	; 5
     d06:	78 94       	sei
     d08:	8e b5       	in	r24, 0x2e	; 46
     d0a:	f8 94       	cli
     d0c:	2a 98       	cbi	0x05, 2	; 5
     d0e:	83 e2       	ldi	r24, 0x23	; 35
     d10:	8e bd       	out	0x2e, r24	; 46
     d12:	00 00       	nop
     d14:	0d b4       	in	r0, 0x2d	; 45
     d16:	07 fe       	sbrs	r0, 7
     d18:	fd cf       	rjmp	.-6      	; 0xd14 <sync+0x266>
     d1a:	8d ed       	ldi	r24, 0xDD	; 221
     d1c:	8e bd       	out	0x2e, r24	; 46
     d1e:	00 00       	nop
     d20:	0d b4       	in	r0, 0x2d	; 45
     d22:	07 fe       	sbrs	r0, 7
     d24:	fd cf       	rjmp	.-6      	; 0xd20 <sync+0x272>
     d26:	2a 9a       	sbi	0x05, 2	; 5
     d28:	78 94       	sei
     d2a:	8e b5       	in	r24, 0x2e	; 46
     d2c:	08 95       	ret

00000d2e <getFifoAddrPtr>:
     d2e:	cf 93       	push	r28
     d30:	82 e3       	ldi	r24, 0x32	; 50
     d32:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     d36:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     d3a:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     d3e:	88 23       	and	r24, r24
     d40:	29 f0       	breq	.+10     	; 0xd4c <getFifoAddrPtr+0x1e>
     d42:	85 e0       	ldi	r24, 0x05	; 5
     d44:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     d48:	c0 e0       	ldi	r28, 0x00	; 0
     d4a:	14 c0       	rjmp	.+40     	; 0xd74 <getFifoAddrPtr+0x46>
     d4c:	f8 94       	cli
     d4e:	2a 98       	cbi	0x05, 2	; 5
     d50:	8d e0       	ldi	r24, 0x0D	; 13
     d52:	8e bd       	out	0x2e, r24	; 46
     d54:	00 00       	nop
     d56:	0d b4       	in	r0, 0x2d	; 45
     d58:	07 fe       	sbrs	r0, 7
     d5a:	fd cf       	rjmp	.-6      	; 0xd56 <getFifoAddrPtr+0x28>
     d5c:	8d ed       	ldi	r24, 0xDD	; 221
     d5e:	8e bd       	out	0x2e, r24	; 46
     d60:	00 00       	nop
     d62:	0d b4       	in	r0, 0x2d	; 45
     d64:	07 fe       	sbrs	r0, 7
     d66:	fd cf       	rjmp	.-6      	; 0xd62 <getFifoAddrPtr+0x34>
     d68:	2a 9a       	sbi	0x05, 2	; 5
     d6a:	78 94       	sei
     d6c:	ce b5       	in	r28, 0x2e	; 46
     d6e:	80 e0       	ldi	r24, 0x00	; 0
     d70:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     d74:	8c 2f       	mov	r24, r28
     d76:	cf 91       	pop	r28
     d78:	08 95       	ret

00000d7a <setFifoAddrPtr>:
     d7a:	cf 93       	push	r28
     d7c:	c8 2f       	mov	r28, r24
     d7e:	82 e3       	ldi	r24, 0x32	; 50
     d80:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     d84:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     d88:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     d8c:	88 23       	and	r24, r24
     d8e:	21 f0       	breq	.+8      	; 0xd98 <setFifoAddrPtr+0x1e>
     d90:	85 e0       	ldi	r24, 0x05	; 5
     d92:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     d96:	2e c0       	rjmp	.+92     	; 0xdf4 <setFifoAddrPtr+0x7a>
     d98:	c0 93 e9 04 	sts	0x04E9, r28	; 0x8004e9 <addrPtr>
     d9c:	f8 94       	cli
     d9e:	2a 98       	cbi	0x05, 2	; 5
     da0:	8d e8       	ldi	r24, 0x8D	; 141
     da2:	8e bd       	out	0x2e, r24	; 46
     da4:	00 00       	nop
     da6:	0d b4       	in	r0, 0x2d	; 45
     da8:	07 fe       	sbrs	r0, 7
     daa:	fd cf       	rjmp	.-6      	; 0xda6 <setFifoAddrPtr+0x2c>
     dac:	ce bd       	out	0x2e, r28	; 46
     dae:	00 00       	nop
     db0:	0d b4       	in	r0, 0x2d	; 45
     db2:	07 fe       	sbrs	r0, 7
     db4:	fd cf       	rjmp	.-6      	; 0xdb0 <setFifoAddrPtr+0x36>
     db6:	2a 9a       	sbi	0x05, 2	; 5
     db8:	78 94       	sei
     dba:	8e b5       	in	r24, 0x2e	; 46
     dbc:	f8 94       	cli
     dbe:	2a 98       	cbi	0x05, 2	; 5
     dc0:	8d e0       	ldi	r24, 0x0D	; 13
     dc2:	8e bd       	out	0x2e, r24	; 46
     dc4:	00 00       	nop
     dc6:	0d b4       	in	r0, 0x2d	; 45
     dc8:	07 fe       	sbrs	r0, 7
     dca:	fd cf       	rjmp	.-6      	; 0xdc6 <setFifoAddrPtr+0x4c>
     dcc:	8d ed       	ldi	r24, 0xDD	; 221
     dce:	8e bd       	out	0x2e, r24	; 46
     dd0:	00 00       	nop
     dd2:	0d b4       	in	r0, 0x2d	; 45
     dd4:	07 fe       	sbrs	r0, 7
     dd6:	fd cf       	rjmp	.-6      	; 0xdd2 <setFifoAddrPtr+0x58>
     dd8:	2a 9a       	sbi	0x05, 2	; 5
     dda:	78 94       	sei
     ddc:	8e b5       	in	r24, 0x2e	; 46
     dde:	90 91 e9 04 	lds	r25, 0x04E9	; 0x8004e9 <addrPtr>
     de2:	98 17       	cp	r25, r24
     de4:	21 f0       	breq	.+8      	; 0xdee <setFifoAddrPtr+0x74>
     de6:	83 e0       	ldi	r24, 0x03	; 3
     de8:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     dec:	03 c0       	rjmp	.+6      	; 0xdf4 <setFifoAddrPtr+0x7a>
     dee:	80 e0       	ldi	r24, 0x00	; 0
     df0:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     df4:	cf 91       	pop	r28
     df6:	08 95       	ret

00000df8 <setFifoTxBaseAddr>:
     df8:	cf 93       	push	r28
     dfa:	c8 2f       	mov	r28, r24
     dfc:	82 e3       	ldi	r24, 0x32	; 50
     dfe:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     e02:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     e06:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     e0a:	88 23       	and	r24, r24
     e0c:	21 f0       	breq	.+8      	; 0xe16 <setFifoTxBaseAddr+0x1e>
     e0e:	85 e0       	ldi	r24, 0x05	; 5
     e10:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     e14:	2e c0       	rjmp	.+92     	; 0xe72 <setFifoTxBaseAddr+0x7a>
     e16:	c0 93 e8 04 	sts	0x04E8, r28	; 0x8004e8 <txBasePtr>
     e1a:	f8 94       	cli
     e1c:	2a 98       	cbi	0x05, 2	; 5
     e1e:	8e e8       	ldi	r24, 0x8E	; 142
     e20:	8e bd       	out	0x2e, r24	; 46
     e22:	00 00       	nop
     e24:	0d b4       	in	r0, 0x2d	; 45
     e26:	07 fe       	sbrs	r0, 7
     e28:	fd cf       	rjmp	.-6      	; 0xe24 <setFifoTxBaseAddr+0x2c>
     e2a:	ce bd       	out	0x2e, r28	; 46
     e2c:	00 00       	nop
     e2e:	0d b4       	in	r0, 0x2d	; 45
     e30:	07 fe       	sbrs	r0, 7
     e32:	fd cf       	rjmp	.-6      	; 0xe2e <setFifoTxBaseAddr+0x36>
     e34:	2a 9a       	sbi	0x05, 2	; 5
     e36:	78 94       	sei
     e38:	8e b5       	in	r24, 0x2e	; 46
     e3a:	f8 94       	cli
     e3c:	2a 98       	cbi	0x05, 2	; 5
     e3e:	8e e0       	ldi	r24, 0x0E	; 14
     e40:	8e bd       	out	0x2e, r24	; 46
     e42:	00 00       	nop
     e44:	0d b4       	in	r0, 0x2d	; 45
     e46:	07 fe       	sbrs	r0, 7
     e48:	fd cf       	rjmp	.-6      	; 0xe44 <setFifoTxBaseAddr+0x4c>
     e4a:	8d ed       	ldi	r24, 0xDD	; 221
     e4c:	8e bd       	out	0x2e, r24	; 46
     e4e:	00 00       	nop
     e50:	0d b4       	in	r0, 0x2d	; 45
     e52:	07 fe       	sbrs	r0, 7
     e54:	fd cf       	rjmp	.-6      	; 0xe50 <setFifoTxBaseAddr+0x58>
     e56:	2a 9a       	sbi	0x05, 2	; 5
     e58:	78 94       	sei
     e5a:	8e b5       	in	r24, 0x2e	; 46
     e5c:	90 91 e8 04 	lds	r25, 0x04E8	; 0x8004e8 <txBasePtr>
     e60:	98 17       	cp	r25, r24
     e62:	21 f0       	breq	.+8      	; 0xe6c <setFifoTxBaseAddr+0x74>
     e64:	83 e0       	ldi	r24, 0x03	; 3
     e66:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <setFifoTxBaseAddr+0x7a>
     e6c:	80 e0       	ldi	r24, 0x00	; 0
     e6e:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     e72:	cf 91       	pop	r28
     e74:	08 95       	ret

00000e76 <setFifoRxBaseAddr>:
     e76:	cf 93       	push	r28
     e78:	c8 2f       	mov	r28, r24
     e7a:	82 e3       	ldi	r24, 0x32	; 50
     e7c:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     e80:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     e84:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     e88:	88 23       	and	r24, r24
     e8a:	21 f0       	breq	.+8      	; 0xe94 <setFifoRxBaseAddr+0x1e>
     e8c:	85 e0       	ldi	r24, 0x05	; 5
     e8e:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     e92:	2e c0       	rjmp	.+92     	; 0xef0 <setFifoRxBaseAddr+0x7a>
     e94:	c0 93 e7 04 	sts	0x04E7, r28	; 0x8004e7 <rxBasePtr>
     e98:	f8 94       	cli
     e9a:	2a 98       	cbi	0x05, 2	; 5
     e9c:	8f e8       	ldi	r24, 0x8F	; 143
     e9e:	8e bd       	out	0x2e, r24	; 46
     ea0:	00 00       	nop
     ea2:	0d b4       	in	r0, 0x2d	; 45
     ea4:	07 fe       	sbrs	r0, 7
     ea6:	fd cf       	rjmp	.-6      	; 0xea2 <setFifoRxBaseAddr+0x2c>
     ea8:	ce bd       	out	0x2e, r28	; 46
     eaa:	00 00       	nop
     eac:	0d b4       	in	r0, 0x2d	; 45
     eae:	07 fe       	sbrs	r0, 7
     eb0:	fd cf       	rjmp	.-6      	; 0xeac <setFifoRxBaseAddr+0x36>
     eb2:	2a 9a       	sbi	0x05, 2	; 5
     eb4:	78 94       	sei
     eb6:	8e b5       	in	r24, 0x2e	; 46
     eb8:	f8 94       	cli
     eba:	2a 98       	cbi	0x05, 2	; 5
     ebc:	8f e0       	ldi	r24, 0x0F	; 15
     ebe:	8e bd       	out	0x2e, r24	; 46
     ec0:	00 00       	nop
     ec2:	0d b4       	in	r0, 0x2d	; 45
     ec4:	07 fe       	sbrs	r0, 7
     ec6:	fd cf       	rjmp	.-6      	; 0xec2 <setFifoRxBaseAddr+0x4c>
     ec8:	8d ed       	ldi	r24, 0xDD	; 221
     eca:	8e bd       	out	0x2e, r24	; 46
     ecc:	00 00       	nop
     ece:	0d b4       	in	r0, 0x2d	; 45
     ed0:	07 fe       	sbrs	r0, 7
     ed2:	fd cf       	rjmp	.-6      	; 0xece <setFifoRxBaseAddr+0x58>
     ed4:	2a 9a       	sbi	0x05, 2	; 5
     ed6:	78 94       	sei
     ed8:	8e b5       	in	r24, 0x2e	; 46
     eda:	90 91 e7 04 	lds	r25, 0x04E7	; 0x8004e7 <rxBasePtr>
     ede:	98 17       	cp	r25, r24
     ee0:	21 f0       	breq	.+8      	; 0xeea <setFifoRxBaseAddr+0x74>
     ee2:	83 e0       	ldi	r24, 0x03	; 3
     ee4:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     ee8:	03 c0       	rjmp	.+6      	; 0xef0 <setFifoRxBaseAddr+0x7a>
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     ef0:	cf 91       	pop	r28
     ef2:	08 95       	ret

00000ef4 <setSymbTimeout>:
     ef4:	cf 93       	push	r28
     ef6:	df 93       	push	r29
     ef8:	d8 2f       	mov	r29, r24
     efa:	c9 2f       	mov	r28, r25
     efc:	82 e3       	ldi	r24, 0x32	; 50
     efe:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     f02:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     f06:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     f0a:	88 23       	and	r24, r24
     f0c:	21 f0       	breq	.+8      	; 0xf16 <setSymbTimeout+0x22>
     f0e:	85 e0       	ldi	r24, 0x05	; 5
     f10:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     f14:	38 c0       	rjmp	.+112    	; 0xf86 <setSymbTimeout+0x92>
     f16:	9c 2f       	mov	r25, r28
     f18:	93 70       	andi	r25, 0x03	; 3
     f1a:	f8 94       	cli
     f1c:	2a 98       	cbi	0x05, 2	; 5
     f1e:	8e e1       	ldi	r24, 0x1E	; 30
     f20:	8e bd       	out	0x2e, r24	; 46
     f22:	00 00       	nop
     f24:	0d b4       	in	r0, 0x2d	; 45
     f26:	07 fe       	sbrs	r0, 7
     f28:	fd cf       	rjmp	.-6      	; 0xf24 <setSymbTimeout+0x30>
     f2a:	8d ed       	ldi	r24, 0xDD	; 221
     f2c:	8e bd       	out	0x2e, r24	; 46
     f2e:	00 00       	nop
     f30:	0d b4       	in	r0, 0x2d	; 45
     f32:	07 fe       	sbrs	r0, 7
     f34:	fd cf       	rjmp	.-6      	; 0xf30 <setSymbTimeout+0x3c>
     f36:	2a 9a       	sbi	0x05, 2	; 5
     f38:	78 94       	sei
     f3a:	8e b5       	in	r24, 0x2e	; 46
     f3c:	8c 7f       	andi	r24, 0xFC	; 252
     f3e:	98 2b       	or	r25, r24
     f40:	f8 94       	cli
     f42:	2a 98       	cbi	0x05, 2	; 5
     f44:	8e e9       	ldi	r24, 0x9E	; 158
     f46:	8e bd       	out	0x2e, r24	; 46
     f48:	00 00       	nop
     f4a:	0d b4       	in	r0, 0x2d	; 45
     f4c:	07 fe       	sbrs	r0, 7
     f4e:	fd cf       	rjmp	.-6      	; 0xf4a <setSymbTimeout+0x56>
     f50:	9e bd       	out	0x2e, r25	; 46
     f52:	00 00       	nop
     f54:	0d b4       	in	r0, 0x2d	; 45
     f56:	07 fe       	sbrs	r0, 7
     f58:	fd cf       	rjmp	.-6      	; 0xf54 <setSymbTimeout+0x60>
     f5a:	2a 9a       	sbi	0x05, 2	; 5
     f5c:	78 94       	sei
     f5e:	8e b5       	in	r24, 0x2e	; 46
     f60:	f8 94       	cli
     f62:	2a 98       	cbi	0x05, 2	; 5
     f64:	8f e9       	ldi	r24, 0x9F	; 159
     f66:	8e bd       	out	0x2e, r24	; 46
     f68:	00 00       	nop
     f6a:	0d b4       	in	r0, 0x2d	; 45
     f6c:	07 fe       	sbrs	r0, 7
     f6e:	fd cf       	rjmp	.-6      	; 0xf6a <setSymbTimeout+0x76>
     f70:	de bd       	out	0x2e, r29	; 46
     f72:	00 00       	nop
     f74:	0d b4       	in	r0, 0x2d	; 45
     f76:	07 fe       	sbrs	r0, 7
     f78:	fd cf       	rjmp	.-6      	; 0xf74 <setSymbTimeout+0x80>
     f7a:	2a 9a       	sbi	0x05, 2	; 5
     f7c:	78 94       	sei
     f7e:	8e b5       	in	r24, 0x2e	; 46
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     f86:	df 91       	pop	r29
     f88:	cf 91       	pop	r28
     f8a:	08 95       	ret

00000f8c <setPreambleLength>:
     f8c:	cf 93       	push	r28
     f8e:	df 93       	push	r29
     f90:	d8 2f       	mov	r29, r24
     f92:	c9 2f       	mov	r28, r25
     f94:	82 e3       	ldi	r24, 0x32	; 50
     f96:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
     f9a:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
     f9e:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
     fa2:	88 23       	and	r24, r24
     fa4:	21 f0       	breq	.+8      	; 0xfae <setPreambleLength+0x22>
     fa6:	8e e0       	ldi	r24, 0x0E	; 14
     fa8:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     fac:	23 c0       	rjmp	.+70     	; 0xff4 <setPreambleLength+0x68>
     fae:	f8 94       	cli
     fb0:	2a 98       	cbi	0x05, 2	; 5
     fb2:	81 ea       	ldi	r24, 0xA1	; 161
     fb4:	8e bd       	out	0x2e, r24	; 46
     fb6:	00 00       	nop
     fb8:	0d b4       	in	r0, 0x2d	; 45
     fba:	07 fe       	sbrs	r0, 7
     fbc:	fd cf       	rjmp	.-6      	; 0xfb8 <setPreambleLength+0x2c>
     fbe:	de bd       	out	0x2e, r29	; 46
     fc0:	00 00       	nop
     fc2:	0d b4       	in	r0, 0x2d	; 45
     fc4:	07 fe       	sbrs	r0, 7
     fc6:	fd cf       	rjmp	.-6      	; 0xfc2 <setPreambleLength+0x36>
     fc8:	2a 9a       	sbi	0x05, 2	; 5
     fca:	78 94       	sei
     fcc:	8e b5       	in	r24, 0x2e	; 46
     fce:	f8 94       	cli
     fd0:	2a 98       	cbi	0x05, 2	; 5
     fd2:	80 ea       	ldi	r24, 0xA0	; 160
     fd4:	8e bd       	out	0x2e, r24	; 46
     fd6:	00 00       	nop
     fd8:	0d b4       	in	r0, 0x2d	; 45
     fda:	07 fe       	sbrs	r0, 7
     fdc:	fd cf       	rjmp	.-6      	; 0xfd8 <setPreambleLength+0x4c>
     fde:	ce bd       	out	0x2e, r28	; 46
     fe0:	00 00       	nop
     fe2:	0d b4       	in	r0, 0x2d	; 45
     fe4:	07 fe       	sbrs	r0, 7
     fe6:	fd cf       	rjmp	.-6      	; 0xfe2 <setPreambleLength+0x56>
     fe8:	2a 9a       	sbi	0x05, 2	; 5
     fea:	78 94       	sei
     fec:	8e b5       	in	r24, 0x2e	; 46
     fee:	80 e0       	ldi	r24, 0x00	; 0
     ff0:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
     ff4:	df 91       	pop	r29
     ff6:	cf 91       	pop	r28
     ff8:	08 95       	ret

00000ffa <setPayloadLength>:
     ffa:	cf 93       	push	r28
     ffc:	c8 2f       	mov	r28, r24
     ffe:	0e 94 56 01 	call	0x2ac	; 0x2ac <setValidFIFO>
    1002:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
    1006:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
    100a:	88 23       	and	r24, r24
    100c:	21 f0       	breq	.+8      	; 0x1016 <setPayloadLength+0x1c>
    100e:	85 e0       	ldi	r24, 0x05	; 5
    1010:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    1014:	13 c0       	rjmp	.+38     	; 0x103c <setPayloadLength+0x42>
    1016:	f8 94       	cli
    1018:	2a 98       	cbi	0x05, 2	; 5
    101a:	82 ea       	ldi	r24, 0xA2	; 162
    101c:	8e bd       	out	0x2e, r24	; 46
    101e:	00 00       	nop
    1020:	0d b4       	in	r0, 0x2d	; 45
    1022:	07 fe       	sbrs	r0, 7
    1024:	fd cf       	rjmp	.-6      	; 0x1020 <setPayloadLength+0x26>
    1026:	ce bd       	out	0x2e, r28	; 46
    1028:	00 00       	nop
    102a:	0d b4       	in	r0, 0x2d	; 45
    102c:	07 fe       	sbrs	r0, 7
    102e:	fd cf       	rjmp	.-6      	; 0x102a <setPayloadLength+0x30>
    1030:	2a 9a       	sbi	0x05, 2	; 5
    1032:	78 94       	sei
    1034:	8e b5       	in	r24, 0x2e	; 46
    1036:	80 e0       	ldi	r24, 0x00	; 0
    1038:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    103c:	cf 91       	pop	r28
    103e:	08 95       	ret

00001040 <getPayloadMaxLength>:
    1040:	cf 93       	push	r28
    1042:	0e 94 56 01 	call	0x2ac	; 0x2ac <setValidFIFO>
    1046:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
    104a:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
    104e:	88 23       	and	r24, r24
    1050:	29 f0       	breq	.+10     	; 0x105c <getPayloadMaxLength+0x1c>
    1052:	85 e0       	ldi	r24, 0x05	; 5
    1054:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    1058:	c0 e0       	ldi	r28, 0x00	; 0
    105a:	14 c0       	rjmp	.+40     	; 0x1084 <getPayloadMaxLength+0x44>
    105c:	f8 94       	cli
    105e:	2a 98       	cbi	0x05, 2	; 5
    1060:	83 e2       	ldi	r24, 0x23	; 35
    1062:	8e bd       	out	0x2e, r24	; 46
    1064:	00 00       	nop
    1066:	0d b4       	in	r0, 0x2d	; 45
    1068:	07 fe       	sbrs	r0, 7
    106a:	fd cf       	rjmp	.-6      	; 0x1066 <getPayloadMaxLength+0x26>
    106c:	8d ed       	ldi	r24, 0xDD	; 221
    106e:	8e bd       	out	0x2e, r24	; 46
    1070:	00 00       	nop
    1072:	0d b4       	in	r0, 0x2d	; 45
    1074:	07 fe       	sbrs	r0, 7
    1076:	fd cf       	rjmp	.-6      	; 0x1072 <getPayloadMaxLength+0x32>
    1078:	2a 9a       	sbi	0x05, 2	; 5
    107a:	78 94       	sei
    107c:	ce b5       	in	r28, 0x2e	; 46
    107e:	80 e0       	ldi	r24, 0x00	; 0
    1080:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    1084:	8c 2f       	mov	r24, r28
    1086:	cf 91       	pop	r28
    1088:	08 95       	ret

0000108a <minutes>:
    108a:	f8 94       	cli
    108c:	60 91 11 05 	lds	r22, 0x0511	; 0x800511 <timer0_minutes>
    1090:	70 91 12 05 	lds	r23, 0x0512	; 0x800512 <timer0_minutes+0x1>
    1094:	80 91 13 05 	lds	r24, 0x0513	; 0x800513 <timer0_minutes+0x2>
    1098:	90 91 14 05 	lds	r25, 0x0514	; 0x800514 <timer0_minutes+0x3>
    109c:	78 94       	sei
    109e:	08 95       	ret

000010a0 <millis>:
    10a0:	f8 94       	cli
    10a2:	60 91 09 05 	lds	r22, 0x0509	; 0x800509 <timer0_millis>
    10a6:	70 91 0a 05 	lds	r23, 0x050A	; 0x80050a <timer0_millis+0x1>
    10aa:	80 91 0b 05 	lds	r24, 0x050B	; 0x80050b <timer0_millis+0x2>
    10ae:	90 91 0c 05 	lds	r25, 0x050C	; 0x80050c <timer0_millis+0x3>
    10b2:	78 94       	sei
    10b4:	08 95       	ret

000010b6 <__vector_14>:
    10b6:	1f 92       	push	r1
    10b8:	0f 92       	push	r0
    10ba:	0f b6       	in	r0, 0x3f	; 63
    10bc:	0f 92       	push	r0
    10be:	11 24       	eor	r1, r1
    10c0:	0f 93       	push	r16
    10c2:	1f 93       	push	r17
    10c4:	2f 93       	push	r18
    10c6:	3f 93       	push	r19
    10c8:	4f 93       	push	r20
    10ca:	5f 93       	push	r21
    10cc:	6f 93       	push	r22
    10ce:	7f 93       	push	r23
    10d0:	8f 93       	push	r24
    10d2:	9f 93       	push	r25
    10d4:	af 93       	push	r26
    10d6:	bf 93       	push	r27
    10d8:	ef 93       	push	r30
    10da:	ff 93       	push	r31
    10dc:	80 91 09 05 	lds	r24, 0x0509	; 0x800509 <timer0_millis>
    10e0:	90 91 0a 05 	lds	r25, 0x050A	; 0x80050a <timer0_millis+0x1>
    10e4:	a0 91 0b 05 	lds	r26, 0x050B	; 0x80050b <timer0_millis+0x2>
    10e8:	b0 91 0c 05 	lds	r27, 0x050C	; 0x80050c <timer0_millis+0x3>
    10ec:	01 96       	adiw	r24, 0x01	; 1
    10ee:	a1 1d       	adc	r26, r1
    10f0:	b1 1d       	adc	r27, r1
    10f2:	80 93 09 05 	sts	0x0509, r24	; 0x800509 <timer0_millis>
    10f6:	90 93 0a 05 	sts	0x050A, r25	; 0x80050a <timer0_millis+0x1>
    10fa:	a0 93 0b 05 	sts	0x050B, r26	; 0x80050b <timer0_millis+0x2>
    10fe:	b0 93 0c 05 	sts	0x050C, r27	; 0x80050c <timer0_millis+0x3>
    1102:	0e 94 50 08 	call	0x10a0	; 0x10a0 <millis>
    1106:	00 91 d9 04 	lds	r16, 0x04D9	; 0x8004d9 <temp>
    110a:	10 91 da 04 	lds	r17, 0x04DA	; 0x8004da <temp+0x1>
    110e:	20 91 db 04 	lds	r18, 0x04DB	; 0x8004db <temp+0x2>
    1112:	30 91 dc 04 	lds	r19, 0x04DC	; 0x8004dc <temp+0x3>
    1116:	dc 01       	movw	r26, r24
    1118:	cb 01       	movw	r24, r22
    111a:	80 1b       	sub	r24, r16
    111c:	91 0b       	sbc	r25, r17
    111e:	a2 0b       	sbc	r26, r18
    1120:	b3 0b       	sbc	r27, r19
    1122:	81 36       	cpi	r24, 0x61	; 97
    1124:	9a 4e       	sbci	r25, 0xEA	; 234
    1126:	a1 05       	cpc	r26, r1
    1128:	b1 05       	cpc	r27, r1
    112a:	e8 f0       	brcs	.+58     	; 0x1166 <__vector_14+0xb0>
    112c:	0e 94 50 08 	call	0x10a0	; 0x10a0 <millis>
    1130:	60 93 d9 04 	sts	0x04D9, r22	; 0x8004d9 <temp>
    1134:	70 93 da 04 	sts	0x04DA, r23	; 0x8004da <temp+0x1>
    1138:	80 93 db 04 	sts	0x04DB, r24	; 0x8004db <temp+0x2>
    113c:	90 93 dc 04 	sts	0x04DC, r25	; 0x8004dc <temp+0x3>
    1140:	80 91 11 05 	lds	r24, 0x0511	; 0x800511 <timer0_minutes>
    1144:	90 91 12 05 	lds	r25, 0x0512	; 0x800512 <timer0_minutes+0x1>
    1148:	a0 91 13 05 	lds	r26, 0x0513	; 0x800513 <timer0_minutes+0x2>
    114c:	b0 91 14 05 	lds	r27, 0x0514	; 0x800514 <timer0_minutes+0x3>
    1150:	01 96       	adiw	r24, 0x01	; 1
    1152:	a1 1d       	adc	r26, r1
    1154:	b1 1d       	adc	r27, r1
    1156:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <timer0_minutes>
    115a:	90 93 12 05 	sts	0x0512, r25	; 0x800512 <timer0_minutes+0x1>
    115e:	a0 93 13 05 	sts	0x0513, r26	; 0x800513 <timer0_minutes+0x2>
    1162:	b0 93 14 05 	sts	0x0514, r27	; 0x800514 <timer0_minutes+0x3>
    1166:	ff 91       	pop	r31
    1168:	ef 91       	pop	r30
    116a:	bf 91       	pop	r27
    116c:	af 91       	pop	r26
    116e:	9f 91       	pop	r25
    1170:	8f 91       	pop	r24
    1172:	7f 91       	pop	r23
    1174:	6f 91       	pop	r22
    1176:	5f 91       	pop	r21
    1178:	4f 91       	pop	r20
    117a:	3f 91       	pop	r19
    117c:	2f 91       	pop	r18
    117e:	1f 91       	pop	r17
    1180:	0f 91       	pop	r16
    1182:	0f 90       	pop	r0
    1184:	0f be       	out	0x3f, r0	; 63
    1186:	0f 90       	pop	r0
    1188:	1f 90       	pop	r1
    118a:	18 95       	reti

0000118c <millis_init>:
    118c:	e4 e6       	ldi	r30, 0x64	; 100
    118e:	f0 e0       	ldi	r31, 0x00	; 0
    1190:	80 81       	ld	r24, Z
    1192:	8f 7d       	andi	r24, 0xDF	; 223
    1194:	80 83       	st	Z, r24
    1196:	f8 94       	cli
    1198:	14 bc       	out	0x24, r1	; 36
    119a:	83 e0       	ldi	r24, 0x03	; 3
    119c:	85 bd       	out	0x25, r24	; 37
    119e:	16 bc       	out	0x26, r1	; 38
    11a0:	82 e0       	ldi	r24, 0x02	; 2
    11a2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
    11a6:	9a ef       	ldi	r25, 0xFA	; 250
    11a8:	97 bd       	out	0x27, r25	; 39
    11aa:	85 bb       	out	0x15, r24	; 21
    11ac:	10 92 d9 04 	sts	0x04D9, r1	; 0x8004d9 <temp>
    11b0:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <temp+0x1>
    11b4:	10 92 db 04 	sts	0x04DB, r1	; 0x8004db <temp+0x2>
    11b8:	10 92 dc 04 	sts	0x04DC, r1	; 0x8004dc <temp+0x3>
    11bc:	78 94       	sei
    11be:	08 95       	ret

000011c0 <txInit>:
    11c0:	4f 92       	push	r4
    11c2:	5f 92       	push	r5
    11c4:	6f 92       	push	r6
    11c6:	7f 92       	push	r7
    11c8:	8f 92       	push	r8
    11ca:	9f 92       	push	r9
    11cc:	af 92       	push	r10
    11ce:	bf 92       	push	r11
    11d0:	cf 92       	push	r12
    11d2:	ef 92       	push	r14
    11d4:	ff 92       	push	r15
    11d6:	0f 93       	push	r16
    11d8:	1f 93       	push	r17
    11da:	cf 93       	push	r28
    11dc:	df 93       	push	r29
    11de:	cd b7       	in	r28, 0x3d	; 61
    11e0:	de b7       	in	r29, 0x3e	; 62
    11e2:	28 97       	sbiw	r28, 0x08	; 8
    11e4:	0f b6       	in	r0, 0x3f	; 63
    11e6:	f8 94       	cli
    11e8:	de bf       	out	0x3e, r29	; 62
    11ea:	0f be       	out	0x3f, r0	; 63
    11ec:	cd bf       	out	0x3d, r28	; 61
    11ee:	29 83       	std	Y+1, r18	; 0x01
    11f0:	3a 83       	std	Y+2, r19	; 0x02
    11f2:	4b 83       	std	Y+3, r20	; 0x03
    11f4:	5c 83       	std	Y+4, r21	; 0x04
    11f6:	8f 83       	std	Y+7, r24	; 0x07
    11f8:	98 87       	std	Y+8, r25	; 0x08
    11fa:	27 01       	movw	r4, r14
    11fc:	38 01       	movw	r6, r16
    11fe:	17 2f       	mov	r17, r23
    1200:	02 2f       	mov	r16, r18
    1202:	82 e3       	ldi	r24, 0x32	; 50
    1204:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
    1208:	1d 30       	cpi	r17, 0x0D	; 13
    120a:	08 f0       	brcs	.+2      	; 0x120e <txInit+0x4e>
    120c:	4d c0       	rjmp	.+154    	; 0x12a8 <txInit+0xe8>
    120e:	16 30       	cpi	r17, 0x06	; 6
    1210:	08 f4       	brcc	.+2      	; 0x1214 <txInit+0x54>
    1212:	4d c0       	rjmp	.+154    	; 0x12ae <txInit+0xee>
    1214:	01 11       	cpse	r16, r1
    1216:	05 c0       	rjmp	.+10     	; 0x1222 <txInit+0x62>
    1218:	85 ef       	ldi	r24, 0xF5	; 245
    121a:	81 0f       	add	r24, r17
    121c:	82 30       	cpi	r24, 0x02	; 2
    121e:	68 f4       	brcc	.+26     	; 0x123a <txInit+0x7a>
    1220:	08 c0       	rjmp	.+16     	; 0x1232 <txInit+0x72>
    1222:	01 30       	cpi	r16, 0x01	; 1
    1224:	51 f4       	brne	.+20     	; 0x123a <txInit+0x7a>
    1226:	1c 30       	cpi	r17, 0x0C	; 12
    1228:	41 f4       	brne	.+16     	; 0x123a <txInit+0x7a>
    122a:	03 c0       	rjmp	.+6      	; 0x1232 <txInit+0x72>
    122c:	1c e0       	ldi	r17, 0x0C	; 12
    122e:	01 c0       	rjmp	.+2      	; 0x1232 <txInit+0x72>
    1230:	1c e0       	ldi	r17, 0x0C	; 12
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	8d 83       	std	Y+5, r24	; 0x05
    1236:	02 c0       	rjmp	.+4      	; 0x123c <txInit+0x7c>
    1238:	16 e0       	ldi	r17, 0x06	; 6
    123a:	1d 82       	std	Y+5, r1	; 0x05
    123c:	29 81       	ldd	r18, Y+1	; 0x01
    123e:	3a 81       	ldd	r19, Y+2	; 0x02
    1240:	4b 81       	ldd	r20, Y+3	; 0x03
    1242:	5c 81       	ldd	r21, Y+4	; 0x04
    1244:	6d 81       	ldd	r22, Y+5	; 0x05
    1246:	71 2f       	mov	r23, r17
    1248:	8f 81       	ldd	r24, Y+7	; 0x07
    124a:	98 85       	ldd	r25, Y+8	; 0x08
    124c:	0e 94 c4 02 	call	0x588	; 0x588 <setModemConfig>
    1250:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
    1254:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
    1258:	88 23       	and	r24, r24
    125a:	21 f0       	breq	.+8      	; 0x1264 <txInit+0xa4>
    125c:	8f e0       	ldi	r24, 0x0F	; 15
    125e:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    1262:	2e c0       	rjmp	.+92     	; 0x12c0 <txInit+0x100>
    1264:	c3 01       	movw	r24, r6
    1266:	b2 01       	movw	r22, r4
    1268:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <setFrequency>
    126c:	8c 2d       	mov	r24, r12
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	0e 94 1c 02 	call	0x438	; 0x438 <setPower>
    1274:	c5 01       	movw	r24, r10
    1276:	0e 94 c6 07 	call	0xf8c	; 0xf8c <setPreambleLength>
    127a:	90 92 e0 04 	sts	0x04E0, r9	; 0x8004e0 <txSymbTimeout+0x1>
    127e:	80 92 df 04 	sts	0x04DF, r8	; 0x8004df <txSymbTimeout>
    1282:	16 30       	cpi	r17, 0x06	; 6
    1284:	39 f4       	brne	.+14     	; 0x1294 <txInit+0xd4>
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	0e 94 8d 03 	call	0x71a	; 0x71a <setDetectionOptimize>
    128c:	8c e0       	ldi	r24, 0x0C	; 12
    128e:	0e 94 76 03 	call	0x6ec	; 0x6ec <setDetectionThreshold>
    1292:	06 c0       	rjmp	.+12     	; 0x12a0 <txInit+0xe0>
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	0e 94 8d 03 	call	0x71a	; 0x71a <setDetectionOptimize>
    129a:	8a e0       	ldi	r24, 0x0A	; 10
    129c:	0e 94 76 03 	call	0x6ec	; 0x6ec <setDetectionThreshold>
    12a0:	80 e0       	ldi	r24, 0x00	; 0
    12a2:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    12a6:	0c c0       	rjmp	.+24     	; 0x12c0 <txInit+0x100>
    12a8:	01 11       	cpse	r16, r1
    12aa:	05 c0       	rjmp	.+10     	; 0x12b6 <txInit+0xf6>
    12ac:	bf cf       	rjmp	.-130    	; 0x122c <txInit+0x6c>
    12ae:	00 23       	and	r16, r16
    12b0:	19 f2       	breq	.-122    	; 0x1238 <txInit+0x78>
    12b2:	16 e0       	ldi	r17, 0x06	; 6
    12b4:	b6 cf       	rjmp	.-148    	; 0x1222 <txInit+0x62>
    12b6:	01 30       	cpi	r16, 0x01	; 1
    12b8:	09 f4       	brne	.+2      	; 0x12bc <txInit+0xfc>
    12ba:	ba cf       	rjmp	.-140    	; 0x1230 <txInit+0x70>
    12bc:	1c e0       	ldi	r17, 0x0C	; 12
    12be:	bd cf       	rjmp	.-134    	; 0x123a <txInit+0x7a>
    12c0:	28 96       	adiw	r28, 0x08	; 8
    12c2:	0f b6       	in	r0, 0x3f	; 63
    12c4:	f8 94       	cli
    12c6:	de bf       	out	0x3e, r29	; 62
    12c8:	0f be       	out	0x3f, r0	; 63
    12ca:	cd bf       	out	0x3d, r28	; 61
    12cc:	df 91       	pop	r29
    12ce:	cf 91       	pop	r28
    12d0:	1f 91       	pop	r17
    12d2:	0f 91       	pop	r16
    12d4:	ff 90       	pop	r15
    12d6:	ef 90       	pop	r14
    12d8:	cf 90       	pop	r12
    12da:	bf 90       	pop	r11
    12dc:	af 90       	pop	r10
    12de:	9f 90       	pop	r9
    12e0:	8f 90       	pop	r8
    12e2:	7f 90       	pop	r7
    12e4:	6f 90       	pop	r6
    12e6:	5f 90       	pop	r5
    12e8:	4f 90       	pop	r4
    12ea:	08 95       	ret

000012ec <rxInit>:
    12ec:	ef 92       	push	r14
    12ee:	ff 92       	push	r15
    12f0:	0f 93       	push	r16
    12f2:	1f 93       	push	r17
    12f4:	cf 93       	push	r28
    12f6:	df 93       	push	r29
    12f8:	cd b7       	in	r28, 0x3d	; 61
    12fa:	de b7       	in	r29, 0x3e	; 62
    12fc:	28 97       	sbiw	r28, 0x08	; 8
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	29 83       	std	Y+1, r18	; 0x01
    130a:	3a 83       	std	Y+2, r19	; 0x02
    130c:	4b 83       	std	Y+3, r20	; 0x03
    130e:	5c 83       	std	Y+4, r21	; 0x04
    1310:	8f 83       	std	Y+7, r24	; 0x07
    1312:	98 87       	std	Y+8, r25	; 0x08
    1314:	7d 30       	cpi	r23, 0x0D	; 13
    1316:	98 f5       	brcc	.+102    	; 0x137e <rxInit+0x92>
    1318:	76 30       	cpi	r23, 0x06	; 6
    131a:	a0 f1       	brcs	.+104    	; 0x1384 <rxInit+0x98>
    131c:	21 11       	cpse	r18, r1
    131e:	05 c0       	rjmp	.+10     	; 0x132a <rxInit+0x3e>
    1320:	85 ef       	ldi	r24, 0xF5	; 245
    1322:	87 0f       	add	r24, r23
    1324:	82 30       	cpi	r24, 0x02	; 2
    1326:	68 f4       	brcc	.+26     	; 0x1342 <rxInit+0x56>
    1328:	08 c0       	rjmp	.+16     	; 0x133a <rxInit+0x4e>
    132a:	21 30       	cpi	r18, 0x01	; 1
    132c:	51 f4       	brne	.+20     	; 0x1342 <rxInit+0x56>
    132e:	7c 30       	cpi	r23, 0x0C	; 12
    1330:	41 f4       	brne	.+16     	; 0x1342 <rxInit+0x56>
    1332:	03 c0       	rjmp	.+6      	; 0x133a <rxInit+0x4e>
    1334:	7c e0       	ldi	r23, 0x0C	; 12
    1336:	01 c0       	rjmp	.+2      	; 0x133a <rxInit+0x4e>
    1338:	7c e0       	ldi	r23, 0x0C	; 12
    133a:	81 e0       	ldi	r24, 0x01	; 1
    133c:	8d 83       	std	Y+5, r24	; 0x05
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <rxInit+0x58>
    1340:	76 e0       	ldi	r23, 0x06	; 6
    1342:	1d 82       	std	Y+5, r1	; 0x05
    1344:	29 81       	ldd	r18, Y+1	; 0x01
    1346:	3a 81       	ldd	r19, Y+2	; 0x02
    1348:	4b 81       	ldd	r20, Y+3	; 0x03
    134a:	5c 81       	ldd	r21, Y+4	; 0x04
    134c:	6d 81       	ldd	r22, Y+5	; 0x05
    134e:	8f 81       	ldd	r24, Y+7	; 0x07
    1350:	98 85       	ldd	r25, Y+8	; 0x08
    1352:	0e 94 c4 02 	call	0x588	; 0x588 <setModemConfig>
    1356:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
    135a:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
    135e:	88 23       	and	r24, r24
    1360:	21 f0       	breq	.+8      	; 0x136a <rxInit+0x7e>
    1362:	8f e0       	ldi	r24, 0x0F	; 15
    1364:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    1368:	15 c0       	rjmp	.+42     	; 0x1394 <rxInit+0xa8>
    136a:	c8 01       	movw	r24, r16
    136c:	0e 94 c6 07 	call	0xf8c	; 0xf8c <setPreambleLength>
    1370:	c7 01       	movw	r24, r14
    1372:	0e 94 7a 07 	call	0xef4	; 0xef4 <setSymbTimeout>
    1376:	80 e0       	ldi	r24, 0x00	; 0
    1378:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    137c:	0b c0       	rjmp	.+22     	; 0x1394 <rxInit+0xa8>
    137e:	21 11       	cpse	r18, r1
    1380:	05 c0       	rjmp	.+10     	; 0x138c <rxInit+0xa0>
    1382:	d8 cf       	rjmp	.-80     	; 0x1334 <rxInit+0x48>
    1384:	22 23       	and	r18, r18
    1386:	e1 f2       	breq	.-72     	; 0x1340 <rxInit+0x54>
    1388:	76 e0       	ldi	r23, 0x06	; 6
    138a:	cf cf       	rjmp	.-98     	; 0x132a <rxInit+0x3e>
    138c:	21 30       	cpi	r18, 0x01	; 1
    138e:	a1 f2       	breq	.-88     	; 0x1338 <rxInit+0x4c>
    1390:	7c e0       	ldi	r23, 0x0C	; 12
    1392:	d7 cf       	rjmp	.-82     	; 0x1342 <rxInit+0x56>
    1394:	28 96       	adiw	r28, 0x08	; 8
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	f8 94       	cli
    139a:	de bf       	out	0x3e, r29	; 62
    139c:	0f be       	out	0x3f, r0	; 63
    139e:	cd bf       	out	0x3d, r28	; 61
    13a0:	df 91       	pop	r29
    13a2:	cf 91       	pop	r28
    13a4:	1f 91       	pop	r17
    13a6:	0f 91       	pop	r16
    13a8:	ff 90       	pop	r15
    13aa:	ef 90       	pop	r14
    13ac:	08 95       	ret

000013ae <Tx>:
    13ae:	0e 94 21 05 	call	0xa42	; 0xa42 <clearAll>
    13b2:	0e 94 8b 04 	call	0x916	; 0x916 <maskAll>
    13b6:	60 e0       	ldi	r22, 0x00	; 0
    13b8:	83 e0       	ldi	r24, 0x03	; 3
    13ba:	0e 94 28 04 	call	0x850	; 0x850 <setMask>
    13be:	f8 94       	cli
    13c0:	2a 98       	cbi	0x05, 2	; 5
    13c2:	80 ec       	ldi	r24, 0xC0	; 192
    13c4:	8e bd       	out	0x2e, r24	; 46
    13c6:	00 00       	nop
    13c8:	0d b4       	in	r0, 0x2d	; 45
    13ca:	07 fe       	sbrs	r0, 7
    13cc:	fd cf       	rjmp	.-6      	; 0x13c8 <Tx+0x1a>
    13ce:	80 e4       	ldi	r24, 0x40	; 64
    13d0:	8e bd       	out	0x2e, r24	; 46
    13d2:	00 00       	nop
    13d4:	0d b4       	in	r0, 0x2d	; 45
    13d6:	07 fe       	sbrs	r0, 7
    13d8:	fd cf       	rjmp	.-6      	; 0x13d4 <Tx+0x26>
    13da:	2a 9a       	sbi	0x05, 2	; 5
    13dc:	78 94       	sei
    13de:	8e b5       	in	r24, 0x2e	; 46
    13e0:	83 e8       	ldi	r24, 0x83	; 131
    13e2:	0e 94 bb 01 	call	0x376	; 0x376 <setOpMode>
    13e6:	01 c0       	rjmp	.+2      	; 0x13ea <Tx+0x3c>
    13e8:	00 00       	nop
    13ea:	83 e0       	ldi	r24, 0x03	; 3
    13ec:	0e 94 c4 04 	call	0x988	; 0x988 <getFlag>
    13f0:	88 23       	and	r24, r24
    13f2:	d1 f3       	breq	.-12     	; 0x13e8 <Tx+0x3a>
    13f4:	83 e0       	ldi	r24, 0x03	; 3
    13f6:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    13fa:	08 95       	ret

000013fc <send>:
    13fc:	1f 93       	push	r17
    13fe:	cf 93       	push	r28
    1400:	df 93       	push	r29
    1402:	ec 01       	movw	r28, r24
    1404:	82 e3       	ldi	r24, 0x32	; 50
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	0e 94 95 01 	call	0x32a	; 0x32a <checkValidState>
    140c:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
    1410:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
    1414:	88 23       	and	r24, r24
    1416:	21 f0       	breq	.+8      	; 0x1420 <send+0x24>
    1418:	85 e0       	ldi	r24, 0x05	; 5
    141a:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    141e:	a0 c0       	rjmp	.+320    	; 0x1560 <send+0x164>
    1420:	1d 81       	ldd	r17, Y+5	; 0x05
    1422:	1a 5f       	subi	r17, 0xFA	; 250
    1424:	0e 94 20 08 	call	0x1040	; 0x1040 <getPayloadMaxLength>
    1428:	81 17       	cp	r24, r17
    142a:	28 f4       	brcc	.+10     	; 0x1436 <send+0x3a>
    142c:	66 e5       	ldi	r22, 0x56	; 86
    142e:	73 e0       	ldi	r23, 0x03	; 3
    1430:	86 e0       	ldi	r24, 0x06	; 6
    1432:	0e 94 81 00 	call	0x102	; 0x102 <ErrorSetMsg>
    1436:	81 2f       	mov	r24, r17
    1438:	0e 94 fd 07 	call	0xffa	; 0xffa <setPayloadLength>
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <setFifoTxBaseAddr>
    1442:	80 e0       	ldi	r24, 0x00	; 0
    1444:	0e 94 bd 06 	call	0xd7a	; 0xd7a <setFifoAddrPtr>
    1448:	0e 94 56 01 	call	0x2ac	; 0x2ac <setValidFIFO>
    144c:	88 81       	ld	r24, Y
    144e:	f8 94       	cli
    1450:	2a 98       	cbi	0x05, 2	; 5
    1452:	90 e8       	ldi	r25, 0x80	; 128
    1454:	9e bd       	out	0x2e, r25	; 46
    1456:	00 00       	nop
    1458:	0d b4       	in	r0, 0x2d	; 45
    145a:	07 fe       	sbrs	r0, 7
    145c:	fd cf       	rjmp	.-6      	; 0x1458 <send+0x5c>
    145e:	8e bd       	out	0x2e, r24	; 46
    1460:	00 00       	nop
    1462:	0d b4       	in	r0, 0x2d	; 45
    1464:	07 fe       	sbrs	r0, 7
    1466:	fd cf       	rjmp	.-6      	; 0x1462 <send+0x66>
    1468:	2a 9a       	sbi	0x05, 2	; 5
    146a:	78 94       	sei
    146c:	8e b5       	in	r24, 0x2e	; 46
    146e:	8a 81       	ldd	r24, Y+2	; 0x02
    1470:	f8 94       	cli
    1472:	2a 98       	cbi	0x05, 2	; 5
    1474:	90 e8       	ldi	r25, 0x80	; 128
    1476:	9e bd       	out	0x2e, r25	; 46
    1478:	00 00       	nop
    147a:	0d b4       	in	r0, 0x2d	; 45
    147c:	07 fe       	sbrs	r0, 7
    147e:	fd cf       	rjmp	.-6      	; 0x147a <send+0x7e>
    1480:	8e bd       	out	0x2e, r24	; 46
    1482:	00 00       	nop
    1484:	0d b4       	in	r0, 0x2d	; 45
    1486:	07 fe       	sbrs	r0, 7
    1488:	fd cf       	rjmp	.-6      	; 0x1484 <send+0x88>
    148a:	2a 9a       	sbi	0x05, 2	; 5
    148c:	78 94       	sei
    148e:	8e b5       	in	r24, 0x2e	; 46
    1490:	89 81       	ldd	r24, Y+1	; 0x01
    1492:	f8 94       	cli
    1494:	2a 98       	cbi	0x05, 2	; 5
    1496:	90 e8       	ldi	r25, 0x80	; 128
    1498:	9e bd       	out	0x2e, r25	; 46
    149a:	00 00       	nop
    149c:	0d b4       	in	r0, 0x2d	; 45
    149e:	07 fe       	sbrs	r0, 7
    14a0:	fd cf       	rjmp	.-6      	; 0x149c <send+0xa0>
    14a2:	8e bd       	out	0x2e, r24	; 46
    14a4:	00 00       	nop
    14a6:	0d b4       	in	r0, 0x2d	; 45
    14a8:	07 fe       	sbrs	r0, 7
    14aa:	fd cf       	rjmp	.-6      	; 0x14a6 <send+0xaa>
    14ac:	2a 9a       	sbi	0x05, 2	; 5
    14ae:	78 94       	sei
    14b0:	8e b5       	in	r24, 0x2e	; 46
    14b2:	8b 81       	ldd	r24, Y+3	; 0x03
    14b4:	f8 94       	cli
    14b6:	2a 98       	cbi	0x05, 2	; 5
    14b8:	90 e8       	ldi	r25, 0x80	; 128
    14ba:	9e bd       	out	0x2e, r25	; 46
    14bc:	00 00       	nop
    14be:	0d b4       	in	r0, 0x2d	; 45
    14c0:	07 fe       	sbrs	r0, 7
    14c2:	fd cf       	rjmp	.-6      	; 0x14be <send+0xc2>
    14c4:	8e bd       	out	0x2e, r24	; 46
    14c6:	00 00       	nop
    14c8:	0d b4       	in	r0, 0x2d	; 45
    14ca:	07 fe       	sbrs	r0, 7
    14cc:	fd cf       	rjmp	.-6      	; 0x14c8 <send+0xcc>
    14ce:	2a 9a       	sbi	0x05, 2	; 5
    14d0:	78 94       	sei
    14d2:	8e b5       	in	r24, 0x2e	; 46
    14d4:	8d 81       	ldd	r24, Y+5	; 0x05
    14d6:	f8 94       	cli
    14d8:	2a 98       	cbi	0x05, 2	; 5
    14da:	90 e8       	ldi	r25, 0x80	; 128
    14dc:	9e bd       	out	0x2e, r25	; 46
    14de:	00 00       	nop
    14e0:	0d b4       	in	r0, 0x2d	; 45
    14e2:	07 fe       	sbrs	r0, 7
    14e4:	fd cf       	rjmp	.-6      	; 0x14e0 <send+0xe4>
    14e6:	8e bd       	out	0x2e, r24	; 46
    14e8:	00 00       	nop
    14ea:	0d b4       	in	r0, 0x2d	; 45
    14ec:	07 fe       	sbrs	r0, 7
    14ee:	fd cf       	rjmp	.-6      	; 0x14ea <send+0xee>
    14f0:	2a 9a       	sbi	0x05, 2	; 5
    14f2:	78 94       	sei
    14f4:	8e b5       	in	r24, 0x2e	; 46
    14f6:	8c 81       	ldd	r24, Y+4	; 0x04
    14f8:	f8 94       	cli
    14fa:	2a 98       	cbi	0x05, 2	; 5
    14fc:	90 e8       	ldi	r25, 0x80	; 128
    14fe:	9e bd       	out	0x2e, r25	; 46
    1500:	00 00       	nop
    1502:	0d b4       	in	r0, 0x2d	; 45
    1504:	07 fe       	sbrs	r0, 7
    1506:	fd cf       	rjmp	.-6      	; 0x1502 <send+0x106>
    1508:	8e bd       	out	0x2e, r24	; 46
    150a:	00 00       	nop
    150c:	0d b4       	in	r0, 0x2d	; 45
    150e:	07 fe       	sbrs	r0, 7
    1510:	fd cf       	rjmp	.-6      	; 0x150c <send+0x110>
    1512:	2a 9a       	sbi	0x05, 2	; 5
    1514:	78 94       	sei
    1516:	8e b5       	in	r24, 0x2e	; 46
    1518:	8d 81       	ldd	r24, Y+5	; 0x05
    151a:	2e 81       	ldd	r18, Y+6	; 0x06
    151c:	3f 81       	ldd	r19, Y+7	; 0x07
    151e:	f8 94       	cli
    1520:	90 e8       	ldi	r25, 0x80	; 128
    1522:	9e bd       	out	0x2e, r25	; 46
    1524:	2a 98       	cbi	0x05, 2	; 5
    1526:	0d b4       	in	r0, 0x2d	; 45
    1528:	07 fe       	sbrs	r0, 7
    152a:	fd cf       	rjmp	.-6      	; 0x1526 <send+0x12a>
    152c:	88 23       	and	r24, r24
    152e:	71 f0       	breq	.+28     	; 0x154c <send+0x150>
    1530:	f9 01       	movw	r30, r18
    1532:	81 50       	subi	r24, 0x01	; 1
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	01 96       	adiw	r24, 0x01	; 1
    1538:	28 0f       	add	r18, r24
    153a:	39 1f       	adc	r19, r25
    153c:	81 91       	ld	r24, Z+
    153e:	8e bd       	out	0x2e, r24	; 46
    1540:	0d b4       	in	r0, 0x2d	; 45
    1542:	07 fe       	sbrs	r0, 7
    1544:	fd cf       	rjmp	.-6      	; 0x1540 <send+0x144>
    1546:	e2 17       	cp	r30, r18
    1548:	f3 07       	cpc	r31, r19
    154a:	c1 f7       	brne	.-16     	; 0x153c <send+0x140>
    154c:	78 94       	sei
    154e:	2a 9a       	sbi	0x05, 2	; 5
    1550:	60 91 df 04 	lds	r22, 0x04DF	; 0x8004df <txSymbTimeout>
    1554:	70 91 e0 04 	lds	r23, 0x04E0	; 0x8004e0 <txSymbTimeout+0x1>
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	0e 94 d7 09 	call	0x13ae	; 0x13ae <Tx>
    1560:	df 91       	pop	r29
    1562:	cf 91       	pop	r28
    1564:	1f 91       	pop	r17
    1566:	08 95       	ret

00001568 <Rx>:
    1568:	cf 93       	push	r28
    156a:	df 93       	push	r29
    156c:	ec 01       	movw	r28, r24
    156e:	82 e3       	ldi	r24, 0x32	; 50
    1570:	0e 94 a3 01 	call	0x346	; 0x346 <setValidState>
    1574:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <er>
    1578:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <er>
    157c:	88 23       	and	r24, r24
    157e:	21 f0       	breq	.+8      	; 0x1588 <Rx+0x20>
    1580:	85 e0       	ldi	r24, 0x05	; 5
    1582:	0e 94 70 00 	call	0xe0	; 0xe0 <ErrorSet>
    1586:	49 c0       	rjmp	.+146    	; 0x161a <Rx+0xb2>
    1588:	0e 94 21 05 	call	0xa42	; 0xa42 <clearAll>
    158c:	0e 94 8b 04 	call	0x916	; 0x916 <maskAll>
    1590:	60 e0       	ldi	r22, 0x00	; 0
    1592:	87 e0       	ldi	r24, 0x07	; 7
    1594:	0e 94 28 04 	call	0x850	; 0x850 <setMask>
    1598:	60 e0       	ldi	r22, 0x00	; 0
    159a:	86 e0       	ldi	r24, 0x06	; 6
    159c:	0e 94 28 04 	call	0x850	; 0x850 <setMask>
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	85 e0       	ldi	r24, 0x05	; 5
    15a4:	0e 94 28 04 	call	0x850	; 0x850 <setMask>
    15a8:	60 e0       	ldi	r22, 0x00	; 0
    15aa:	84 e0       	ldi	r24, 0x04	; 4
    15ac:	0e 94 28 04 	call	0x850	; 0x850 <setMask>
    15b0:	f8 94       	cli
    15b2:	2a 98       	cbi	0x05, 2	; 5
    15b4:	80 ec       	ldi	r24, 0xC0	; 192
    15b6:	8e bd       	out	0x2e, r24	; 46
    15b8:	00 00       	nop
    15ba:	0d b4       	in	r0, 0x2d	; 45
    15bc:	07 fe       	sbrs	r0, 7
    15be:	fd cf       	rjmp	.-6      	; 0x15ba <Rx+0x52>
    15c0:	80 e4       	ldi	r24, 0x40	; 64
    15c2:	8e bd       	out	0x2e, r24	; 46
    15c4:	00 00       	nop
    15c6:	0d b4       	in	r0, 0x2d	; 45
    15c8:	07 fe       	sbrs	r0, 7
    15ca:	fd cf       	rjmp	.-6      	; 0x15c6 <Rx+0x5e>
    15cc:	2a 9a       	sbi	0x05, 2	; 5
    15ce:	78 94       	sei
    15d0:	8e b5       	in	r24, 0x2e	; 46
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	0e 94 bd 06 	call	0xd7a	; 0xd7a <setFifoAddrPtr>
    15d8:	0e 94 97 06 	call	0xd2e	; 0xd2e <getFifoAddrPtr>
    15dc:	81 11       	cpse	r24, r1
    15de:	f9 cf       	rjmp	.-14     	; 0x15d2 <Rx+0x6a>
    15e0:	80 e0       	ldi	r24, 0x00	; 0
    15e2:	0e 94 3b 07 	call	0xe76	; 0xe76 <setFifoRxBaseAddr>
    15e6:	0e 94 97 06 	call	0xd2e	; 0xd2e <getFifoAddrPtr>
    15ea:	81 11       	cpse	r24, r1
    15ec:	f9 cf       	rjmp	.-14     	; 0x15e0 <Rx+0x78>
    15ee:	ce 01       	movw	r24, r28
    15f0:	0e 94 7a 07 	call	0xef4	; 0xef4 <setSymbTimeout>
    15f4:	85 e0       	ldi	r24, 0x05	; 5
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <udtState+0x1>
    15fc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <udtState>
    1600:	0e 94 50 08 	call	0x10a0	; 0x10a0 <millis>
    1604:	60 93 0d 05 	sts	0x050D, r22	; 0x80050d <min>
    1608:	70 93 0e 05 	sts	0x050E, r23	; 0x80050e <min+0x1>
    160c:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <min+0x2>
    1610:	90 93 10 05 	sts	0x0510, r25	; 0x800510 <min+0x3>
    1614:	86 e8       	ldi	r24, 0x86	; 134
    1616:	0e 94 bb 01 	call	0x376	; 0x376 <setOpMode>
    161a:	df 91       	pop	r29
    161c:	cf 91       	pop	r28
    161e:	08 95       	ret

00001620 <receive>:
    1620:	8f 92       	push	r8
    1622:	9f 92       	push	r9
    1624:	af 92       	push	r10
    1626:	bf 92       	push	r11
    1628:	cf 92       	push	r12
    162a:	df 92       	push	r13
    162c:	ef 92       	push	r14
    162e:	ff 92       	push	r15
    1630:	cf 93       	push	r28
    1632:	6c 01       	movw	r12, r24
    1634:	0e 94 b4 0a 	call	0x1568	; 0x1568 <Rx>
    1638:	0e 94 50 08 	call	0x10a0	; 0x10a0 <millis>
    163c:	4b 01       	movw	r8, r22
    163e:	5c 01       	movw	r10, r24
    1640:	e1 2c       	mov	r14, r1
    1642:	f1 2c       	mov	r15, r1
    1644:	86 e0       	ldi	r24, 0x06	; 6
    1646:	0e 94 c4 04 	call	0x988	; 0x988 <getFlag>
    164a:	81 11       	cpse	r24, r1
    164c:	0d c0       	rjmp	.+26     	; 0x1668 <receive+0x48>
    164e:	0e 94 50 08 	call	0x10a0	; 0x10a0 <millis>
    1652:	dc 01       	movw	r26, r24
    1654:	cb 01       	movw	r24, r22
    1656:	88 19       	sub	r24, r8
    1658:	99 09       	sbc	r25, r9
    165a:	aa 09       	sbc	r26, r10
    165c:	bb 09       	sbc	r27, r11
    165e:	8c 15       	cp	r24, r12
    1660:	9d 05       	cpc	r25, r13
    1662:	ae 05       	cpc	r26, r14
    1664:	bf 05       	cpc	r27, r15
    1666:	70 f3       	brcs	.-36     	; 0x1644 <receive+0x24>
    1668:	87 e0       	ldi	r24, 0x07	; 7
    166a:	0e 94 c4 04 	call	0x988	; 0x988 <getFlag>
    166e:	f8 2e       	mov	r15, r24
    1670:	88 23       	and	r24, r24
    1672:	59 f0       	breq	.+22     	; 0x168a <receive+0x6a>
    1674:	87 e0       	ldi	r24, 0x07	; 7
    1676:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    167a:	82 e0       	ldi	r24, 0x02	; 2
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <udtState+0x1>
    1682:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <udtState>
    1686:	c0 e0       	ldi	r28, 0x00	; 0
    1688:	04 c1       	rjmp	.+520    	; 0x1892 <receive+0x272>
    168a:	86 e0       	ldi	r24, 0x06	; 6
    168c:	0e 94 c4 04 	call	0x988	; 0x988 <getFlag>
    1690:	c8 2f       	mov	r28, r24
    1692:	88 23       	and	r24, r24
    1694:	09 f4       	brne	.+2      	; 0x1698 <receive+0x78>
    1696:	fd c0       	rjmp	.+506    	; 0x1892 <receive+0x272>
    1698:	80 91 f4 04 	lds	r24, 0x04F4	; 0x8004f4 <modemConfig+0x3>
    169c:	88 23       	and	r24, r24
    169e:	29 f1       	breq	.+74     	; 0x16ea <receive+0xca>
    16a0:	84 e0       	ldi	r24, 0x04	; 4
    16a2:	0e 94 c4 04 	call	0x988	; 0x988 <getFlag>
    16a6:	c8 2f       	mov	r28, r24
    16a8:	81 11       	cpse	r24, r1
    16aa:	0b c0       	rjmp	.+22     	; 0x16c2 <receive+0xa2>
    16ac:	81 e0       	ldi	r24, 0x01	; 1
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <udtState+0x1>
    16b4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <udtState>
    16b8:	81 e8       	ldi	r24, 0x81	; 129
    16ba:	93 e0       	ldi	r25, 0x03	; 3
    16bc:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
    16c0:	e8 c0       	rjmp	.+464    	; 0x1892 <receive+0x272>
    16c2:	85 e0       	ldi	r24, 0x05	; 5
    16c4:	0e 94 c4 04 	call	0x988	; 0x988 <getFlag>
    16c8:	88 23       	and	r24, r24
    16ca:	79 f0       	breq	.+30     	; 0x16ea <receive+0xca>
    16cc:	85 e0       	ldi	r24, 0x05	; 5
    16ce:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <udtState+0x1>
    16da:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <udtState>
    16de:	81 e8       	ldi	r24, 0x81	; 129
    16e0:	93 e0       	ldi	r25, 0x03	; 3
    16e2:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
    16e6:	cf 2d       	mov	r28, r15
    16e8:	d4 c0       	rjmp	.+424    	; 0x1892 <receive+0x272>
    16ea:	80 91 d7 04 	lds	r24, 0x04D7	; 0x8004d7 <receivedPacket+0x6>
    16ee:	90 91 d8 04 	lds	r25, 0x04D8	; 0x8004d8 <receivedPacket+0x7>
    16f2:	00 97       	sbiw	r24, 0x00	; 0
    16f4:	11 f0       	breq	.+4      	; 0x16fa <receive+0xda>
    16f6:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <free>
    16fa:	f8 94       	cli
    16fc:	2a 98       	cbi	0x05, 2	; 5
    16fe:	83 e1       	ldi	r24, 0x13	; 19
    1700:	8e bd       	out	0x2e, r24	; 46
    1702:	00 00       	nop
    1704:	0d b4       	in	r0, 0x2d	; 45
    1706:	07 fe       	sbrs	r0, 7
    1708:	fd cf       	rjmp	.-6      	; 0x1704 <receive+0xe4>
    170a:	8d ed       	ldi	r24, 0xDD	; 221
    170c:	8e bd       	out	0x2e, r24	; 46
    170e:	00 00       	nop
    1710:	0d b4       	in	r0, 0x2d	; 45
    1712:	07 fe       	sbrs	r0, 7
    1714:	fd cf       	rjmp	.-6      	; 0x1710 <receive+0xf0>
    1716:	2a 9a       	sbi	0x05, 2	; 5
    1718:	78 94       	sei
    171a:	2e b5       	in	r18, 0x2e	; 46
    171c:	f8 94       	cli
    171e:	2a 98       	cbi	0x05, 2	; 5
    1720:	1e bc       	out	0x2e, r1	; 46
    1722:	00 00       	nop
    1724:	0d b4       	in	r0, 0x2d	; 45
    1726:	07 fe       	sbrs	r0, 7
    1728:	fd cf       	rjmp	.-6      	; 0x1724 <receive+0x104>
    172a:	8d ed       	ldi	r24, 0xDD	; 221
    172c:	8e bd       	out	0x2e, r24	; 46
    172e:	00 00       	nop
    1730:	0d b4       	in	r0, 0x2d	; 45
    1732:	07 fe       	sbrs	r0, 7
    1734:	fd cf       	rjmp	.-6      	; 0x1730 <receive+0x110>
    1736:	2a 9a       	sbi	0x05, 2	; 5
    1738:	78 94       	sei
    173a:	8e b5       	in	r24, 0x2e	; 46
    173c:	80 93 d1 04 	sts	0x04D1, r24	; 0x8004d1 <receivedPacket>
    1740:	f8 94       	cli
    1742:	2a 98       	cbi	0x05, 2	; 5
    1744:	1e bc       	out	0x2e, r1	; 46
    1746:	00 00       	nop
    1748:	0d b4       	in	r0, 0x2d	; 45
    174a:	07 fe       	sbrs	r0, 7
    174c:	fd cf       	rjmp	.-6      	; 0x1748 <receive+0x128>
    174e:	8d ed       	ldi	r24, 0xDD	; 221
    1750:	8e bd       	out	0x2e, r24	; 46
    1752:	00 00       	nop
    1754:	0d b4       	in	r0, 0x2d	; 45
    1756:	07 fe       	sbrs	r0, 7
    1758:	fd cf       	rjmp	.-6      	; 0x1754 <receive+0x134>
    175a:	2a 9a       	sbi	0x05, 2	; 5
    175c:	78 94       	sei
    175e:	8e b5       	in	r24, 0x2e	; 46
    1760:	80 93 d3 04 	sts	0x04D3, r24	; 0x8004d3 <receivedPacket+0x2>
    1764:	f8 94       	cli
    1766:	2a 98       	cbi	0x05, 2	; 5
    1768:	1e bc       	out	0x2e, r1	; 46
    176a:	00 00       	nop
    176c:	0d b4       	in	r0, 0x2d	; 45
    176e:	07 fe       	sbrs	r0, 7
    1770:	fd cf       	rjmp	.-6      	; 0x176c <receive+0x14c>
    1772:	8d ed       	ldi	r24, 0xDD	; 221
    1774:	8e bd       	out	0x2e, r24	; 46
    1776:	00 00       	nop
    1778:	0d b4       	in	r0, 0x2d	; 45
    177a:	07 fe       	sbrs	r0, 7
    177c:	fd cf       	rjmp	.-6      	; 0x1778 <receive+0x158>
    177e:	2a 9a       	sbi	0x05, 2	; 5
    1780:	78 94       	sei
    1782:	8e b5       	in	r24, 0x2e	; 46
    1784:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <receivedPacket+0x1>
    1788:	f8 94       	cli
    178a:	2a 98       	cbi	0x05, 2	; 5
    178c:	1e bc       	out	0x2e, r1	; 46
    178e:	00 00       	nop
    1790:	0d b4       	in	r0, 0x2d	; 45
    1792:	07 fe       	sbrs	r0, 7
    1794:	fd cf       	rjmp	.-6      	; 0x1790 <receive+0x170>
    1796:	8d ed       	ldi	r24, 0xDD	; 221
    1798:	8e bd       	out	0x2e, r24	; 46
    179a:	00 00       	nop
    179c:	0d b4       	in	r0, 0x2d	; 45
    179e:	07 fe       	sbrs	r0, 7
    17a0:	fd cf       	rjmp	.-6      	; 0x179c <receive+0x17c>
    17a2:	2a 9a       	sbi	0x05, 2	; 5
    17a4:	78 94       	sei
    17a6:	8e b5       	in	r24, 0x2e	; 46
    17a8:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <receivedPacket+0x3>
    17ac:	f8 94       	cli
    17ae:	2a 98       	cbi	0x05, 2	; 5
    17b0:	1e bc       	out	0x2e, r1	; 46
    17b2:	00 00       	nop
    17b4:	0d b4       	in	r0, 0x2d	; 45
    17b6:	07 fe       	sbrs	r0, 7
    17b8:	fd cf       	rjmp	.-6      	; 0x17b4 <receive+0x194>
    17ba:	8d ed       	ldi	r24, 0xDD	; 221
    17bc:	8e bd       	out	0x2e, r24	; 46
    17be:	00 00       	nop
    17c0:	0d b4       	in	r0, 0x2d	; 45
    17c2:	07 fe       	sbrs	r0, 7
    17c4:	fd cf       	rjmp	.-6      	; 0x17c0 <receive+0x1a0>
    17c6:	2a 9a       	sbi	0x05, 2	; 5
    17c8:	78 94       	sei
    17ca:	8e b5       	in	r24, 0x2e	; 46
    17cc:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <receivedPacket+0x5>
    17d0:	f8 94       	cli
    17d2:	2a 98       	cbi	0x05, 2	; 5
    17d4:	1e bc       	out	0x2e, r1	; 46
    17d6:	00 00       	nop
    17d8:	0d b4       	in	r0, 0x2d	; 45
    17da:	07 fe       	sbrs	r0, 7
    17dc:	fd cf       	rjmp	.-6      	; 0x17d8 <receive+0x1b8>
    17de:	8d ed       	ldi	r24, 0xDD	; 221
    17e0:	8e bd       	out	0x2e, r24	; 46
    17e2:	00 00       	nop
    17e4:	0d b4       	in	r0, 0x2d	; 45
    17e6:	07 fe       	sbrs	r0, 7
    17e8:	fd cf       	rjmp	.-6      	; 0x17e4 <receive+0x1c4>
    17ea:	2a 9a       	sbi	0x05, 2	; 5
    17ec:	78 94       	sei
    17ee:	8e b5       	in	r24, 0x2e	; 46
    17f0:	e1 ed       	ldi	r30, 0xD1	; 209
    17f2:	f4 e0       	ldi	r31, 0x04	; 4
    17f4:	84 83       	std	Z+4, r24	; 0x04
    17f6:	c5 81       	ldd	r28, Z+5	; 0x05
    17f8:	8c 2f       	mov	r24, r28
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	ac 01       	movw	r20, r24
    1800:	4a 5f       	subi	r20, 0xFA	; 250
    1802:	5f 4f       	sbci	r21, 0xFF	; 255
    1804:	24 17       	cp	r18, r20
    1806:	35 07       	cpc	r19, r21
    1808:	b1 f0       	breq	.+44     	; 0x1836 <receive+0x216>
    180a:	88 e9       	ldi	r24, 0x98	; 152
    180c:	93 e0       	ldi	r25, 0x03	; 3
    180e:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
    1812:	86 e0       	ldi	r24, 0x06	; 6
    1814:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    1818:	84 e0       	ldi	r24, 0x04	; 4
    181a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    181e:	81 e0       	ldi	r24, 0x01	; 1
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <udtState+0x1>
    1826:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <udtState>
    182a:	10 92 d8 04 	sts	0x04D8, r1	; 0x8004d8 <receivedPacket+0x7>
    182e:	10 92 d7 04 	sts	0x04D7, r1	; 0x8004d7 <receivedPacket+0x6>
    1832:	cf 2d       	mov	r28, r15
    1834:	2e c0       	rjmp	.+92     	; 0x1892 <receive+0x272>
    1836:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <malloc>
    183a:	ac 01       	movw	r20, r24
    183c:	f8 94       	cli
    183e:	1e bc       	out	0x2e, r1	; 46
    1840:	2a 98       	cbi	0x05, 2	; 5
    1842:	00 00       	nop
    1844:	0d b4       	in	r0, 0x2d	; 45
    1846:	07 fe       	sbrs	r0, 7
    1848:	fd cf       	rjmp	.-6      	; 0x1844 <receive+0x224>
    184a:	cc 23       	and	r28, r28
    184c:	89 f0       	breq	.+34     	; 0x1870 <receive+0x250>
    184e:	fa 01       	movw	r30, r20
    1850:	c1 50       	subi	r28, 0x01	; 1
    1852:	2c 2f       	mov	r18, r28
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	2f 5f       	subi	r18, 0xFF	; 255
    1858:	3f 4f       	sbci	r19, 0xFF	; 255
    185a:	24 0f       	add	r18, r20
    185c:	35 1f       	adc	r19, r21
    185e:	1e bc       	out	0x2e, r1	; 46
    1860:	0d b4       	in	r0, 0x2d	; 45
    1862:	07 fe       	sbrs	r0, 7
    1864:	fd cf       	rjmp	.-6      	; 0x1860 <receive+0x240>
    1866:	9e b5       	in	r25, 0x2e	; 46
    1868:	91 93       	st	Z+, r25
    186a:	e2 17       	cp	r30, r18
    186c:	f3 07       	cpc	r31, r19
    186e:	b9 f7       	brne	.-18     	; 0x185e <receive+0x23e>
    1870:	78 94       	sei
    1872:	2a 9a       	sbi	0x05, 2	; 5
    1874:	50 93 d8 04 	sts	0x04D8, r21	; 0x8004d8 <receivedPacket+0x7>
    1878:	40 93 d7 04 	sts	0x04D7, r20	; 0x8004d7 <receivedPacket+0x6>
    187c:	86 e0       	ldi	r24, 0x06	; 6
    187e:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    1882:	84 e0       	ldi	r24, 0x04	; 4
    1884:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <clearFlag>
    1888:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <udtState+0x1>
    188c:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <udtState>
    1890:	c1 e0       	ldi	r28, 0x01	; 1
    1892:	8c 2f       	mov	r24, r28
    1894:	cf 91       	pop	r28
    1896:	ff 90       	pop	r15
    1898:	ef 90       	pop	r14
    189a:	df 90       	pop	r13
    189c:	cf 90       	pop	r12
    189e:	bf 90       	pop	r11
    18a0:	af 90       	pop	r10
    18a2:	9f 90       	pop	r9
    18a4:	8f 90       	pop	r8
    18a6:	08 95       	ret

000018a8 <KEY_REQUEST_PACKET>:
    18a8:	cf 93       	push	r28
    18aa:	df 93       	push	r29
    18ac:	d8 2f       	mov	r29, r24
    18ae:	c6 2f       	mov	r28, r22
    18b0:	88 e0       	ldi	r24, 0x08	; 8
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <malloc>
    18b8:	fc 01       	movw	r30, r24
    18ba:	80 ed       	ldi	r24, 0xD0	; 208
    18bc:	82 83       	std	Z+2, r24	; 0x02
    18be:	d0 83       	st	Z, r29
    18c0:	80 ea       	ldi	r24, 0xA0	; 160
    18c2:	81 83       	std	Z+1, r24	; 0x01
    18c4:	15 82       	std	Z+5, r1	; 0x05
    18c6:	17 82       	std	Z+7, r1	; 0x07
    18c8:	16 82       	std	Z+6, r1	; 0x06
    18ca:	85 e4       	ldi	r24, 0x45	; 69
    18cc:	83 83       	std	Z+3, r24	; 0x03
    18ce:	c4 83       	std	Z+4, r28	; 0x04
    18d0:	cf 01       	movw	r24, r30
    18d2:	df 91       	pop	r29
    18d4:	cf 91       	pop	r28
    18d6:	08 95       	ret

000018d8 <KEY_ACCEPT_PACKET>:
    18d8:	ef 92       	push	r14
    18da:	ff 92       	push	r15
    18dc:	1f 93       	push	r17
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	c8 2f       	mov	r28, r24
    18e4:	16 2f       	mov	r17, r22
    18e6:	7a 01       	movw	r14, r20
    18e8:	d2 2f       	mov	r29, r18
    18ea:	88 e0       	ldi	r24, 0x08	; 8
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <malloc>
    18f2:	fc 01       	movw	r30, r24
    18f4:	82 ed       	ldi	r24, 0xD2	; 210
    18f6:	82 83       	std	Z+2, r24	; 0x02
    18f8:	80 ea       	ldi	r24, 0xA0	; 160
    18fa:	81 83       	std	Z+1, r24	; 0x01
    18fc:	f7 82       	std	Z+7, r15	; 0x07
    18fe:	e6 82       	std	Z+6, r14	; 0x06
    1900:	14 83       	std	Z+4, r17	; 0x04
    1902:	d5 83       	std	Z+5, r29	; 0x05
    1904:	c0 83       	st	Z, r28
    1906:	85 e4       	ldi	r24, 0x45	; 69
    1908:	83 83       	std	Z+3, r24	; 0x03
    190a:	cf 01       	movw	r24, r30
    190c:	df 91       	pop	r29
    190e:	cf 91       	pop	r28
    1910:	1f 91       	pop	r17
    1912:	ff 90       	pop	r15
    1914:	ef 90       	pop	r14
    1916:	08 95       	ret

00001918 <keypad_init>:
    1918:	57 9a       	sbi	0x0a, 7	; 10
    191a:	56 9a       	sbi	0x0a, 6	; 10
    191c:	55 9a       	sbi	0x0a, 5	; 10
    191e:	54 9a       	sbi	0x0a, 4	; 10
    1920:	38 98       	cbi	0x07, 0	; 7
    1922:	39 98       	cbi	0x07, 1	; 7
    1924:	3a 98       	cbi	0x07, 2	; 7
    1926:	8b b1       	in	r24, 0x0b	; 11
    1928:	8f 70       	andi	r24, 0x0F	; 15
    192a:	8b b9       	out	0x0b, r24	; 11
    192c:	88 b1       	in	r24, 0x08	; 8
    192e:	87 60       	ori	r24, 0x07	; 7
    1930:	88 b9       	out	0x08, r24	; 8
    1932:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    1936:	87 e0       	ldi	r24, 0x07	; 7
    1938:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
    193c:	08 95       	ret

0000193e <getChar>:
    193e:	5f 92       	push	r5
    1940:	6f 92       	push	r6
    1942:	7f 92       	push	r7
    1944:	8f 92       	push	r8
    1946:	9f 92       	push	r9
    1948:	af 92       	push	r10
    194a:	bf 92       	push	r11
    194c:	cf 92       	push	r12
    194e:	df 92       	push	r13
    1950:	ef 92       	push	r14
    1952:	ff 92       	push	r15
    1954:	0f 93       	push	r16
    1956:	1f 93       	push	r17
    1958:	cf 93       	push	r28
    195a:	df 93       	push	r29
    195c:	8b b1       	in	r24, 0x0b	; 11
    195e:	80 6f       	ori	r24, 0xF0	; 240
    1960:	8b b9       	out	0x0b, r24	; 11
    1962:	00 00       	nop
    1964:	44 e0       	ldi	r20, 0x04	; 4
    1966:	50 e0       	ldi	r21, 0x00	; 0
    1968:	61 2c       	mov	r6, r1
    196a:	71 2c       	mov	r7, r1
    196c:	c0 e0       	ldi	r28, 0x00	; 0
    196e:	d0 e0       	ldi	r29, 0x00	; 0
    1970:	60 e0       	ldi	r22, 0x00	; 0
    1972:	70 e0       	ldi	r23, 0x00	; 0
    1974:	e0 e0       	ldi	r30, 0x00	; 0
    1976:	f0 e0       	ldi	r31, 0x00	; 0
    1978:	81 2c       	mov	r8, r1
    197a:	91 2c       	mov	r9, r1
    197c:	54 01       	movw	r10, r8
    197e:	83 94       	inc	r8
    1980:	01 e0       	ldi	r16, 0x01	; 1
    1982:	51 2c       	mov	r5, r1
    1984:	8b b1       	in	r24, 0x0b	; 11
    1986:	75 01       	movw	r14, r10
    1988:	64 01       	movw	r12, r8
    198a:	04 2e       	mov	r0, r20
    198c:	04 c0       	rjmp	.+8      	; 0x1996 <getChar+0x58>
    198e:	cc 0c       	add	r12, r12
    1990:	dd 1c       	adc	r13, r13
    1992:	ee 1c       	adc	r14, r14
    1994:	ff 1c       	adc	r15, r15
    1996:	0a 94       	dec	r0
    1998:	d2 f7       	brpl	.-12     	; 0x198e <getChar+0x50>
    199a:	9c 2d       	mov	r25, r12
    199c:	90 95       	com	r25
    199e:	89 23       	and	r24, r25
    19a0:	8b b9       	out	0x0b, r24	; 11
    19a2:	00 00       	nop
    19a4:	20 e0       	ldi	r18, 0x00	; 0
    19a6:	30 e0       	ldi	r19, 0x00	; 0
    19a8:	da 01       	movw	r26, r20
    19aa:	14 97       	sbiw	r26, 0x04	; 4
    19ac:	86 b1       	in	r24, 0x06	; 6
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	02 2e       	mov	r0, r18
    19b2:	02 c0       	rjmp	.+4      	; 0x19b8 <getChar+0x7a>
    19b4:	95 95       	asr	r25
    19b6:	87 95       	ror	r24
    19b8:	0a 94       	dec	r0
    19ba:	e2 f7       	brpl	.-8      	; 0x19b4 <getChar+0x76>
    19bc:	80 fd       	sbrc	r24, 0
    19be:	1f c0       	rjmp	.+62     	; 0x19fe <getChar+0xc0>
    19c0:	1f ef       	ldi	r17, 0xFF	; 255
    19c2:	89 ef       	ldi	r24, 0xF9	; 249
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	11 50       	subi	r17, 0x01	; 1
    19c8:	80 40       	sbci	r24, 0x00	; 0
    19ca:	90 40       	sbci	r25, 0x00	; 0
    19cc:	e1 f7       	brne	.-8      	; 0x19c6 <getChar+0x88>
    19ce:	00 c0       	rjmp	.+0      	; 0x19d0 <getChar+0x92>
    19d0:	00 00       	nop
    19d2:	86 b1       	in	r24, 0x06	; 6
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	02 2e       	mov	r0, r18
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <getChar+0xa0>
    19da:	95 95       	asr	r25
    19dc:	87 95       	ror	r24
    19de:	0a 94       	dec	r0
    19e0:	e2 f7       	brpl	.-8      	; 0x19da <getChar+0x9c>
    19e2:	80 fd       	sbrc	r24, 0
    19e4:	07 c0       	rjmp	.+14     	; 0x19f4 <getChar+0xb6>
    19e6:	30 97       	sbiw	r30, 0x00	; 0
    19e8:	41 f4       	brne	.+16     	; 0x19fa <getChar+0xbc>
    19ea:	ed 01       	movw	r28, r26
    19ec:	39 01       	movw	r6, r18
    19ee:	e0 2f       	mov	r30, r16
    19f0:	f5 2d       	mov	r31, r5
    19f2:	05 c0       	rjmp	.+10     	; 0x19fe <getChar+0xc0>
    19f4:	60 2f       	mov	r22, r16
    19f6:	75 2d       	mov	r23, r5
    19f8:	02 c0       	rjmp	.+4      	; 0x19fe <getChar+0xc0>
    19fa:	60 2f       	mov	r22, r16
    19fc:	75 2d       	mov	r23, r5
    19fe:	2f 5f       	subi	r18, 0xFF	; 255
    1a00:	3f 4f       	sbci	r19, 0xFF	; 255
    1a02:	23 30       	cpi	r18, 0x03	; 3
    1a04:	31 05       	cpc	r19, r1
    1a06:	91 f6       	brne	.-92     	; 0x19ac <getChar+0x6e>
    1a08:	8b b1       	in	r24, 0x0b	; 11
    1a0a:	c8 2a       	or	r12, r24
    1a0c:	cb b8       	out	0x0b, r12	; 11
    1a0e:	00 00       	nop
    1a10:	4f 5f       	subi	r20, 0xFF	; 255
    1a12:	5f 4f       	sbci	r21, 0xFF	; 255
    1a14:	48 30       	cpi	r20, 0x08	; 8
    1a16:	51 05       	cpc	r21, r1
    1a18:	09 f0       	breq	.+2      	; 0x1a1c <getChar+0xde>
    1a1a:	b4 cf       	rjmp	.-152    	; 0x1984 <getChar+0x46>
    1a1c:	8b b1       	in	r24, 0x0b	; 11
    1a1e:	8f 70       	andi	r24, 0x0F	; 15
    1a20:	8b b9       	out	0x0b, r24	; 11
    1a22:	00 00       	nop
    1a24:	81 e0       	ldi	r24, 0x01	; 1
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	67 2b       	or	r22, r23
    1a2a:	11 f0       	breq	.+4      	; 0x1a30 <getChar+0xf2>
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	e8 23       	and	r30, r24
    1a32:	f9 23       	and	r31, r25
    1a34:	ef 2b       	or	r30, r31
    1a36:	59 f0       	breq	.+22     	; 0x1a4e <getChar+0x110>
    1a38:	ce 01       	movw	r24, r28
    1a3a:	88 0f       	add	r24, r24
    1a3c:	99 1f       	adc	r25, r25
    1a3e:	c8 0f       	add	r28, r24
    1a40:	d9 1f       	adc	r29, r25
    1a42:	ce 53       	subi	r28, 0x3E	; 62
    1a44:	db 4f       	sbci	r29, 0xFB	; 251
    1a46:	c6 0d       	add	r28, r6
    1a48:	d7 1d       	adc	r29, r7
    1a4a:	88 81       	ld	r24, Y
    1a4c:	01 c0       	rjmp	.+2      	; 0x1a50 <getChar+0x112>
    1a4e:	80 e0       	ldi	r24, 0x00	; 0
    1a50:	df 91       	pop	r29
    1a52:	cf 91       	pop	r28
    1a54:	1f 91       	pop	r17
    1a56:	0f 91       	pop	r16
    1a58:	ff 90       	pop	r15
    1a5a:	ef 90       	pop	r14
    1a5c:	df 90       	pop	r13
    1a5e:	cf 90       	pop	r12
    1a60:	bf 90       	pop	r11
    1a62:	af 90       	pop	r10
    1a64:	9f 90       	pop	r9
    1a66:	8f 90       	pop	r8
    1a68:	7f 90       	pop	r7
    1a6a:	6f 90       	pop	r6
    1a6c:	5f 90       	pop	r5
    1a6e:	08 95       	ret

00001a70 <getReliableChar>:
    1a70:	cf 93       	push	r28
    1a72:	0e 94 9f 0c 	call	0x193e	; 0x193e <getChar>
    1a76:	c8 2f       	mov	r28, r24
    1a78:	88 23       	and	r24, r24
    1a7a:	d9 f3       	breq	.-10     	; 0x1a72 <getReliableChar+0x2>
    1a7c:	0e 94 9f 0c 	call	0x193e	; 0x193e <getChar>
    1a80:	c8 17       	cp	r28, r24
    1a82:	e1 f3       	breq	.-8      	; 0x1a7c <getReliableChar+0xc>
    1a84:	5b 9a       	sbi	0x0b, 3	; 11
    1a86:	2f e7       	ldi	r18, 0x7F	; 127
    1a88:	89 ea       	ldi	r24, 0xA9	; 169
    1a8a:	93 e0       	ldi	r25, 0x03	; 3
    1a8c:	21 50       	subi	r18, 0x01	; 1
    1a8e:	80 40       	sbci	r24, 0x00	; 0
    1a90:	90 40       	sbci	r25, 0x00	; 0
    1a92:	e1 f7       	brne	.-8      	; 0x1a8c <getReliableChar+0x1c>
    1a94:	00 c0       	rjmp	.+0      	; 0x1a96 <getReliableChar+0x26>
    1a96:	00 00       	nop
    1a98:	5b 98       	cbi	0x0b, 3	; 11
    1a9a:	8c 2f       	mov	r24, r28
    1a9c:	cf 91       	pop	r28
    1a9e:	08 95       	ret

00001aa0 <updateKey>:

void updateKey() {
    1aa0:	ef 92       	push	r14
    1aa2:	ff 92       	push	r15
    1aa4:	0f 93       	push	r16
    1aa6:	1f 93       	push	r17
    1aa8:	cf 93       	push	r28
    1aaa:	df 93       	push	r29
	
	
	Packet *pack = KEY_REQUEST_PACKET(destination,sequence);
    1aac:	60 91 ce 04 	lds	r22, 0x04CE	; 0x8004ce <__data_end>
    1ab0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <destination>
    1ab4:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <KEY_REQUEST_PACKET>
    1ab8:	ec 01       	movw	r28, r24
	printf("Packet Key Request sent.\n");
    1aba:	84 ec       	ldi	r24, 0xC4	; 196
    1abc:	93 e0       	ldi	r25, 0x03	; 3
    1abe:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
	send(pack);
    1ac2:	ce 01       	movw	r24, r28
    1ac4:	0e 94 fe 09 	call	0x13fc	; 0x13fc <send>
	_NOP();
    1ac8:	00 00       	nop
				printf("Packet Key Request sent.\n");
				send(pack);
			}
			break;
			case UDT_RX_PACKET_RECEIVED:{
				if (receivedPacket.ack == PACKET_DATA_ACK && receivedPacket.seq == pack->seq){
    1aca:	01 ed       	ldi	r16, 0xD1	; 209
    1acc:	14 e0       	ldi	r17, 0x04	; 4
	_NOP();
	
	bool ackReceived = false;
	do {
		
		receive(1023);
    1ace:	8f ef       	ldi	r24, 0xFF	; 255
    1ad0:	93 e0       	ldi	r25, 0x03	; 3
    1ad2:	0e 94 10 0b 	call	0x1620	; 0x1620 <receive>
		
		switch(udtState){
    1ad6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <udtState>
    1ada:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <udtState+0x1>
    1ade:	81 30       	cpi	r24, 0x01	; 1
    1ae0:	91 05       	cpc	r25, r1
    1ae2:	31 f0       	breq	.+12     	; 0x1af0 <updateKey+0x50>
    1ae4:	82 30       	cpi	r24, 0x02	; 2
    1ae6:	91 05       	cpc	r25, r1
    1ae8:	59 f0       	breq	.+22     	; 0x1b00 <updateKey+0x60>
    1aea:	89 2b       	or	r24, r25
    1aec:	81 f7       	brne	.-32     	; 0x1ace <updateKey+0x2e>
    1aee:	10 c0       	rjmp	.+32     	; 0x1b10 <updateKey+0x70>
			case UDT_RX_PACKET_CORRUPT:
				printf("Packet Key Request sent.\n");
    1af0:	84 ec       	ldi	r24, 0xC4	; 196
    1af2:	93 e0       	ldi	r25, 0x03	; 3
    1af4:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
				send(pack);
    1af8:	ce 01       	movw	r24, r28
    1afa:	0e 94 fe 09 	call	0x13fc	; 0x13fc <send>
			
			break;
    1afe:	e7 cf       	rjmp	.-50     	; 0x1ace <updateKey+0x2e>
			case UDT_RX_TIMEOUT: {
				printf("Packet Key Request sent.\n");
    1b00:	84 ec       	ldi	r24, 0xC4	; 196
    1b02:	93 e0       	ldi	r25, 0x03	; 3
    1b04:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
				send(pack);
    1b08:	ce 01       	movw	r24, r28
    1b0a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <send>
			}
			break;
    1b0e:	df cf       	rjmp	.-66     	; 0x1ace <updateKey+0x2e>
			case UDT_RX_PACKET_RECEIVED:{
				if (receivedPacket.ack == PACKET_DATA_ACK && receivedPacket.seq == pack->seq){
    1b10:	d8 01       	movw	r26, r16
    1b12:	11 96       	adiw	r26, 0x01	; 1
    1b14:	8c 91       	ld	r24, X
    1b16:	11 97       	sbiw	r26, 0x01	; 1
    1b18:	8b 3a       	cpi	r24, 0xAB	; 171
    1b1a:	c9 f6       	brne	.-78     	; 0x1ace <updateKey+0x2e>
    1b1c:	14 96       	adiw	r26, 0x04	; 4
    1b1e:	9c 91       	ld	r25, X
    1b20:	14 97       	sbiw	r26, 0x04	; 4
    1b22:	8c 81       	ldd	r24, Y+4	; 0x04
    1b24:	98 13       	cpse	r25, r24
    1b26:	d3 cf       	rjmp	.-90     	; 0x1ace <updateKey+0x2e>
					
					if(receivedPacket.type == PACKET_KEY){
    1b28:	12 96       	adiw	r26, 0x02	; 2
    1b2a:	8c 91       	ld	r24, X
    1b2c:	81 3d       	cpi	r24, 0xD1	; 209
    1b2e:	79 f6       	brne	.-98     	; 0x1ace <updateKey+0x2e>
						printf("Key received : ");
    1b30:	8d ed       	ldi	r24, 0xDD	; 221
    1b32:	93 e0       	ldi	r25, 0x03	; 3
    1b34:	9f 93       	push	r25
    1b36:	8f 93       	push	r24
    1b38:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
						len = receivedPacket.length;
    1b3c:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <receivedPacket+0x5>
    1b40:	80 93 1d 05 	sts	0x051D, r24	; 0x80051d <len>
						for (int i = 0; i < receivedPacket.length; i++){
    1b44:	0f 90       	pop	r0
    1b46:	0f 90       	pop	r0
    1b48:	88 23       	and	r24, r24
    1b4a:	01 f1       	breq	.+64     	; 0x1b8c <updateKey+0xec>
    1b4c:	0f 2e       	mov	r0, r31
    1b4e:	fb e0       	ldi	r31, 0x0B	; 11
    1b50:	ef 2e       	mov	r14, r31
    1b52:	f1 e0       	ldi	r31, 0x01	; 1
    1b54:	ff 2e       	mov	r15, r31
    1b56:	f0 2d       	mov	r31, r0
    1b58:	c0 e0       	ldi	r28, 0x00	; 0
    1b5a:	d0 e0       	ldi	r29, 0x00	; 0
							key[i] = (char)receivedPacket.data[i];
    1b5c:	01 ed       	ldi	r16, 0xD1	; 209
    1b5e:	14 e0       	ldi	r17, 0x04	; 4
    1b60:	d8 01       	movw	r26, r16
    1b62:	16 96       	adiw	r26, 0x06	; 6
    1b64:	ed 91       	ld	r30, X+
    1b66:	fc 91       	ld	r31, X
    1b68:	17 97       	sbiw	r26, 0x07	; 7
    1b6a:	ec 0f       	add	r30, r28
    1b6c:	fd 1f       	adc	r31, r29
    1b6e:	80 81       	ld	r24, Z
    1b70:	f7 01       	movw	r30, r14
    1b72:	81 93       	st	Z+, r24
    1b74:	7f 01       	movw	r14, r30
							printf("%c",key[i]);
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <putchar>
				if (receivedPacket.ack == PACKET_DATA_ACK && receivedPacket.seq == pack->seq){
					
					if(receivedPacket.type == PACKET_KEY){
						printf("Key received : ");
						len = receivedPacket.length;
						for (int i = 0; i < receivedPacket.length; i++){
    1b7c:	21 96       	adiw	r28, 0x01	; 1
    1b7e:	d8 01       	movw	r26, r16
    1b80:	15 96       	adiw	r26, 0x05	; 5
    1b82:	8c 91       	ld	r24, X
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	c8 17       	cp	r28, r24
    1b88:	d9 07       	cpc	r29, r25
    1b8a:	54 f3       	brlt	.-44     	; 0x1b60 <updateKey+0xc0>
							key[i] = (char)receivedPacket.data[i];
							printf("%c",key[i]);
						}
						printf("\n");
    1b8c:	8a e0       	ldi	r24, 0x0A	; 10
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <putchar>
				}
			}
		}
	}while(!ackReceived);
	
	sequence++;
    1b94:	60 91 ce 04 	lds	r22, 0x04CE	; 0x8004ce <__data_end>
    1b98:	6f 5f       	subi	r22, 0xFF	; 255
    1b9a:	60 93 ce 04 	sts	0x04CE, r22	; 0x8004ce <__data_end>
	
	pack = KEY_ACCEPT_PACKET(destination,sequence,(uint8_t*) key, len);
    1b9e:	20 91 1d 05 	lds	r18, 0x051D	; 0x80051d <len>
    1ba2:	4b e0       	ldi	r20, 0x0B	; 11
    1ba4:	51 e0       	ldi	r21, 0x01	; 1
    1ba6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <destination>
    1baa:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <KEY_ACCEPT_PACKET>
    1bae:	ec 01       	movw	r28, r24
	
	printf("Key accept packet sent.\n");
    1bb0:	8d ee       	ldi	r24, 0xED	; 237
    1bb2:	93 e0       	ldi	r25, 0x03	; 3
    1bb4:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
	send(pack);
    1bb8:	ce 01       	movw	r24, r28
    1bba:	0e 94 fe 09 	call	0x13fc	; 0x13fc <send>
	_NOP();
    1bbe:	00 00       	nop
				printf("Key accept packet sent.\n");
				send(pack);
			}
			break;
			case UDT_RX_PACKET_RECEIVED:{
				if (receivedPacket.type == PACKET_ACK && receivedPacket.seq == pack->seq){
    1bc0:	01 ed       	ldi	r16, 0xD1	; 209
    1bc2:	14 e0       	ldi	r17, 0x04	; 4
	_NOP();
	
	ackReceived = false;
	do {
		
		receive(1023);
    1bc4:	8f ef       	ldi	r24, 0xFF	; 255
    1bc6:	93 e0       	ldi	r25, 0x03	; 3
    1bc8:	0e 94 10 0b 	call	0x1620	; 0x1620 <receive>
		
		switch(udtState){
    1bcc:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <udtState>
    1bd0:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <udtState+0x1>
    1bd4:	81 30       	cpi	r24, 0x01	; 1
    1bd6:	91 05       	cpc	r25, r1
    1bd8:	31 f0       	breq	.+12     	; 0x1be6 <updateKey+0x146>
    1bda:	82 30       	cpi	r24, 0x02	; 2
    1bdc:	91 05       	cpc	r25, r1
    1bde:	59 f0       	breq	.+22     	; 0x1bf6 <updateKey+0x156>
    1be0:	89 2b       	or	r24, r25
    1be2:	81 f7       	brne	.-32     	; 0x1bc4 <updateKey+0x124>
    1be4:	10 c0       	rjmp	.+32     	; 0x1c06 <updateKey+0x166>
			case UDT_RX_PACKET_CORRUPT:
			printf("Key accept packet sent.\n");
    1be6:	8d ee       	ldi	r24, 0xED	; 237
    1be8:	93 e0       	ldi	r25, 0x03	; 3
    1bea:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
			send(pack);
    1bee:	ce 01       	movw	r24, r28
    1bf0:	0e 94 fe 09 	call	0x13fc	; 0x13fc <send>
			
			break;
    1bf4:	e7 cf       	rjmp	.-50     	; 0x1bc4 <updateKey+0x124>
			case UDT_RX_TIMEOUT: {
				printf("Key accept packet sent.\n");
    1bf6:	8d ee       	ldi	r24, 0xED	; 237
    1bf8:	93 e0       	ldi	r25, 0x03	; 3
    1bfa:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
				send(pack);
    1bfe:	ce 01       	movw	r24, r28
    1c00:	0e 94 fe 09 	call	0x13fc	; 0x13fc <send>
			}
			break;
    1c04:	df cf       	rjmp	.-66     	; 0x1bc4 <updateKey+0x124>
			case UDT_RX_PACKET_RECEIVED:{
				if (receivedPacket.type == PACKET_ACK && receivedPacket.seq == pack->seq){
    1c06:	f8 01       	movw	r30, r16
    1c08:	82 81       	ldd	r24, Z+2	; 0x02
    1c0a:	80 3b       	cpi	r24, 0xB0	; 176
    1c0c:	d9 f6       	brne	.-74     	; 0x1bc4 <updateKey+0x124>
    1c0e:	94 81       	ldd	r25, Z+4	; 0x04
    1c10:	8c 81       	ldd	r24, Y+4	; 0x04
    1c12:	98 13       	cpse	r25, r24
    1c14:	d7 cf       	rjmp	.-82     	; 0x1bc4 <updateKey+0x124>
					printf("Packet Accept ACK received.\n");
    1c16:	85 e0       	ldi	r24, 0x05	; 5
    1c18:	94 e0       	ldi	r25, 0x04	; 4
    1c1a:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
				}
			}
		}
	}while(!ackReceived);
	
}
    1c1e:	df 91       	pop	r29
    1c20:	cf 91       	pop	r28
    1c22:	1f 91       	pop	r17
    1c24:	0f 91       	pop	r16
    1c26:	ff 90       	pop	r15
    1c28:	ef 90       	pop	r14
    1c2a:	08 95       	ret

00001c2c <authenticate>:
void authenticate() {
    1c2c:	ef 92       	push	r14
    1c2e:	ff 92       	push	r15
    1c30:	1f 93       	push	r17
    1c32:	cf 93       	push	r28
    1c34:	df 93       	push	r29
    1c36:	00 d0       	rcall	.+0      	; 0x1c38 <authenticate+0xc>
    1c38:	00 d0       	rcall	.+0      	; 0x1c3a <authenticate+0xe>
    1c3a:	cd b7       	in	r28, 0x3d	; 61
    1c3c:	de b7       	in	r29, 0x3e	; 62
	
	printf("\nEnter the pass code : ");
    1c3e:	81 e2       	ldi	r24, 0x21	; 33
    1c40:	94 e0       	ldi	r25, 0x04	; 4
    1c42:	9f 93       	push	r25
    1c44:	8f 93       	push	r24
    1c46:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
	int i = 0;
	char a[4]="0000";
    1c4a:	80 e3       	ldi	r24, 0x30	; 48
    1c4c:	90 e3       	ldi	r25, 0x30	; 48
    1c4e:	9a 83       	std	Y+2, r25	; 0x02
    1c50:	89 83       	std	Y+1, r24	; 0x01
    1c52:	9c 83       	std	Y+4, r25	; 0x04
    1c54:	8b 83       	std	Y+3, r24	; 0x03
    1c56:	0f 90       	pop	r0
    1c58:	0f 90       	pop	r0
	char temp;
	uint8_t flag = 1;
	for (i = 0; i>=0&&i<=4;)
    1c5a:	e1 2c       	mov	r14, r1
    1c5c:	f1 2c       	mov	r15, r1
	{
		
		temp=getReliableChar();
    1c5e:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <getReliableChar>
    1c62:	18 2f       	mov	r17, r24
		if(temp!='R' && temp!='E')
    1c64:	82 35       	cpi	r24, 0x52	; 82
    1c66:	81 f0       	breq	.+32     	; 0x1c88 <authenticate+0x5c>
    1c68:	85 34       	cpi	r24, 0x45	; 69
    1c6a:	c9 f0       	breq	.+50     	; 0x1c9e <authenticate+0x72>
		{
			printf("%c",temp);
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <putchar>
			a[i]=temp;
    1c72:	e1 e0       	ldi	r30, 0x01	; 1
    1c74:	f0 e0       	ldi	r31, 0x00	; 0
    1c76:	ec 0f       	add	r30, r28
    1c78:	fd 1f       	adc	r31, r29
    1c7a:	ee 0d       	add	r30, r14
    1c7c:	ff 1d       	adc	r31, r15
    1c7e:	10 83       	st	Z, r17
			i++;
    1c80:	8f ef       	ldi	r24, 0xFF	; 255
    1c82:	e8 1a       	sub	r14, r24
    1c84:	f8 0a       	sbc	r15, r24
    1c86:	07 c0       	rjmp	.+14     	; 0x1c96 <authenticate+0x6a>
		}
		else if(temp=='R')
		
		{
			i--;
    1c88:	81 e0       	ldi	r24, 0x01	; 1
    1c8a:	e8 1a       	sub	r14, r24
    1c8c:	f1 08       	sbc	r15, r1
			printf("\b");
    1c8e:	88 e0       	ldi	r24, 0x08	; 8
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <putchar>
	printf("\nEnter the pass code : ");
	int i = 0;
	char a[4]="0000";
	char temp;
	uint8_t flag = 1;
	for (i = 0; i>=0&&i<=4;)
    1c96:	85 e0       	ldi	r24, 0x05	; 5
    1c98:	e8 16       	cp	r14, r24
    1c9a:	f1 04       	cpc	r15, r1
    1c9c:	00 f3       	brcs	.-64     	; 0x1c5e <authenticate+0x32>
    1c9e:	fe 01       	movw	r30, r28
    1ca0:	31 96       	adiw	r30, 0x01	; 1
    1ca2:	ab e0       	ldi	r26, 0x0B	; 11
    1ca4:	b1 e0       	ldi	r27, 0x01	; 1
    1ca6:	ae 01       	movw	r20, r28
    1ca8:	4b 5f       	subi	r20, 0xFB	; 251
    1caa:	5f 4f       	sbci	r21, 0xFF	; 255
	
	printf("\nEnter the pass code : ");
	int i = 0;
	char a[4]="0000";
	char temp;
	uint8_t flag = 1;
    1cac:	21 e0       	ldi	r18, 0x01	; 1
			break;
		}
	}
	for(i=0;i<4;i++)
	{
		if(a[i]==key[i])
    1cae:	91 91       	ld	r25, Z+
    1cb0:	8d 91       	ld	r24, X+
    1cb2:	98 13       	cpse	r25, r24
    1cb4:	02 c0       	rjmp	.+4      	; 0x1cba <authenticate+0x8e>
		{
			flag&=1;
    1cb6:	21 70       	andi	r18, 0x01	; 1
    1cb8:	01 c0       	rjmp	.+2      	; 0x1cbc <authenticate+0x90>
		}
		else
		{
			flag&=0;
    1cba:	20 e0       	ldi	r18, 0x00	; 0
		else if(temp=='E')
		{
			break;
		}
	}
	for(i=0;i<4;i++)
    1cbc:	e4 17       	cp	r30, r20
    1cbe:	f5 07       	cpc	r31, r21
    1cc0:	b1 f7       	brne	.-20     	; 0x1cae <authenticate+0x82>
		{
			flag&=0;
		}
	}
	
	if (flag){
    1cc2:	22 23       	and	r18, r18
    1cc4:	49 f0       	breq	.+18     	; 0x1cd8 <authenticate+0xac>
		printf("\nkey is correct.\n");
    1cc6:	89 e3       	ldi	r24, 0x39	; 57
    1cc8:	94 e0       	ldi	r25, 0x04	; 4
    1cca:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
		authenticated = true;
    1cce:	81 e0       	ldi	r24, 0x01	; 1
    1cd0:	80 93 d0 04 	sts	0x04D0, r24	; 0x8004d0 <authenticated>
		bitSet(PORTC,4);
    1cd4:	44 9a       	sbi	0x08, 4	; 8
    1cd6:	07 c0       	rjmp	.+14     	; 0x1ce6 <authenticate+0xba>
		
		
	}
	
	else {
		printf("\nIncorrect key.\n");
    1cd8:	8a e4       	ldi	r24, 0x4A	; 74
    1cda:	94 e0       	ldi	r25, 0x04	; 4
    1cdc:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
		authenticated = false;
    1ce0:	10 92 d0 04 	sts	0x04D0, r1	; 0x8004d0 <authenticated>
		bitSet(PORTC,5);
    1ce4:	45 9a       	sbi	0x08, 5	; 8
	}
	
}
    1ce6:	0f 90       	pop	r0
    1ce8:	0f 90       	pop	r0
    1cea:	0f 90       	pop	r0
    1cec:	0f 90       	pop	r0
    1cee:	df 91       	pop	r29
    1cf0:	cf 91       	pop	r28
    1cf2:	1f 91       	pop	r17
    1cf4:	ff 90       	pop	r15
    1cf6:	ef 90       	pop	r14
    1cf8:	08 95       	ret

00001cfa <__vector_4>:


unsigned long keyTimeout = 10;


ISR(PCINT1_vect){
    1cfa:	1f 92       	push	r1
    1cfc:	0f 92       	push	r0
    1cfe:	0f b6       	in	r0, 0x3f	; 63
    1d00:	0f 92       	push	r0
    1d02:	11 24       	eor	r1, r1
    1d04:	2f 93       	push	r18
    1d06:	3f 93       	push	r19
    1d08:	4f 93       	push	r20
    1d0a:	5f 93       	push	r21
    1d0c:	6f 93       	push	r22
    1d0e:	7f 93       	push	r23
    1d10:	8f 93       	push	r24
    1d12:	9f 93       	push	r25
    1d14:	af 93       	push	r26
    1d16:	bf 93       	push	r27
    1d18:	cf 93       	push	r28
    1d1a:	ef 93       	push	r30
    1d1c:	ff 93       	push	r31
	uint8_t sreg = SREG;
    1d1e:	cf b7       	in	r28, 0x3f	; 63
	authenticate();
    1d20:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <authenticate>
	SREG = sreg;
    1d24:	cf bf       	out	0x3f, r28	; 63
	PCIFR = 0x02;
    1d26:	82 e0       	ldi	r24, 0x02	; 2
    1d28:	8b bb       	out	0x1b, r24	; 27
	return;
}
    1d2a:	ff 91       	pop	r31
    1d2c:	ef 91       	pop	r30
    1d2e:	cf 91       	pop	r28
    1d30:	bf 91       	pop	r27
    1d32:	af 91       	pop	r26
    1d34:	9f 91       	pop	r25
    1d36:	8f 91       	pop	r24
    1d38:	7f 91       	pop	r23
    1d3a:	6f 91       	pop	r22
    1d3c:	5f 91       	pop	r21
    1d3e:	4f 91       	pop	r20
    1d40:	3f 91       	pop	r19
    1d42:	2f 91       	pop	r18
    1d44:	0f 90       	pop	r0
    1d46:	0f be       	out	0x3f, r0	; 63
    1d48:	0f 90       	pop	r0
    1d4a:	1f 90       	pop	r1
    1d4c:	18 95       	reti

00001d4e <main>:
static FILE mystdout;

void USART_Init(unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
    1d4e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
    1d52:	87 e6       	ldi	r24, 0x67	; 103
    1d54:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	// Enable transmitter and receiver
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    1d58:	88 e1       	ldi	r24, 0x18	; 24
    1d5a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
    1d5e:	8e e0       	ldi	r24, 0x0E	; 14
    1d60:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	fdev_setup_stream(&mystdout, USART_Transmit, USART_Receive, _FDEV_SETUP_RW);
    1d64:	ea ef       	ldi	r30, 0xFA	; 250
    1d66:	f4 e0       	ldi	r31, 0x04	; 4
    1d68:	8c e5       	ldi	r24, 0x5C	; 92
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	91 87       	std	Z+9, r25	; 0x09
    1d6e:	80 87       	std	Z+8, r24	; 0x08
    1d70:	83 e5       	ldi	r24, 0x53	; 83
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	93 87       	std	Z+11, r25	; 0x0b
    1d76:	82 87       	std	Z+10, r24	; 0x0a
    1d78:	83 e0       	ldi	r24, 0x03	; 3
    1d7a:	83 83       	std	Z+3, r24	; 0x03
    1d7c:	15 86       	std	Z+13, r1	; 0x0d
    1d7e:	14 86       	std	Z+12, r1	; 0x0c
	stdout = &mystdout;
    1d80:	a2 e2       	ldi	r26, 0x22	; 34
    1d82:	b5 e0       	ldi	r27, 0x05	; 5
    1d84:	13 96       	adiw	r26, 0x03	; 3
    1d86:	fc 93       	st	X, r31
    1d88:	ee 93       	st	-X, r30
    1d8a:	12 97       	sbiw	r26, 0x02	; 2
	stdin = &mystdout;
    1d8c:	ed 93       	st	X+, r30
    1d8e:	fc 93       	st	X, r31
int main(void)
{
	
	
	USART_Init(MYUBRR);
	SPIbegin(SPI_CLOCK_DIV4,MSBFIRST,SPI_MODE0);
    1d90:	40 e0       	ldi	r20, 0x00	; 0
    1d92:	61 e0       	ldi	r22, 0x01	; 1
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	0e 94 96 00 	call	0x12c	; 0x12c <SPIbegin>
	millis_init();
    1d9a:	0e 94 c6 08 	call	0x118c	; 0x118c <millis_init>
	receivedPacket.data = 0;
    1d9e:	10 92 d8 04 	sts	0x04D8, r1	; 0x8004d8 <receivedPacket+0x7>
    1da2:	10 92 d7 04 	sts	0x04D7, r1	; 0x8004d7 <receivedPacket+0x6>
	unsigned long min = minutes();
    1da6:	0e 94 45 08 	call	0x108a	; 0x108a <minutes>
    1daa:	2b 01       	movw	r4, r22
    1dac:	3c 01       	movw	r6, r24
	keyTimedout = true;
    1dae:	81 e0       	ldi	r24, 0x01	; 1
    1db0:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <keyTimedout>
inline uint8_t readRegister(uint8_t address){
	
	cli();
	bitClear(address,7);
	bitClear(SPI_PORT,SS);
	SPDR = address;
    1db4:	0f 2e       	mov	r0, r31
    1db6:	f2 e4       	ldi	r31, 0x42	; 66
    1db8:	ff 2e       	mov	r15, r31
    1dba:	f0 2d       	mov	r31, r0
	_NOP();
	while(!(SPSR & _BV(SPIF)));
	SPDR = 0xDD;
    1dbc:	0d ed       	ldi	r16, 0xDD	; 221
	uint8_t version = 0x00;
	do {
		version = readRegister(REG_VERSION);
		printf("Lora's version is %02x\n",version);
    1dbe:	ca e5       	ldi	r28, 0x5A	; 90
    1dc0:	d4 e0       	ldi	r29, 0x04	; 4
	
}

inline uint8_t readRegister(uint8_t address){
	
	cli();
    1dc2:	f8 94       	cli
	bitClear(address,7);
	bitClear(SPI_PORT,SS);
    1dc4:	2a 98       	cbi	0x05, 2	; 5
	SPDR = address;
    1dc6:	fe bc       	out	0x2e, r15	; 46
	_NOP();
    1dc8:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1dca:	0d b4       	in	r0, 0x2d	; 45
    1dcc:	07 fe       	sbrs	r0, 7
    1dce:	fd cf       	rjmp	.-6      	; 0x1dca <main+0x7c>
	SPDR = 0xDD;
    1dd0:	0e bd       	out	0x2e, r16	; 46
	_NOP();
    1dd2:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1dd4:	0d b4       	in	r0, 0x2d	; 45
    1dd6:	07 fe       	sbrs	r0, 7
    1dd8:	fd cf       	rjmp	.-6      	; 0x1dd4 <main+0x86>
	bitSet(SPI_PORT,SS);
    1dda:	2a 9a       	sbi	0x05, 2	; 5
	
	sei();
    1ddc:	78 94       	sei
	
	return SPDR;
    1dde:	1e b5       	in	r17, 0x2e	; 46
    1de0:	1f 92       	push	r1
    1de2:	1f 93       	push	r17
    1de4:	df 93       	push	r29
    1de6:	cf 93       	push	r28
    1de8:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1dec:	9f ef       	ldi	r25, 0xFF	; 255
    1dee:	21 ee       	ldi	r18, 0xE1	; 225
    1df0:	84 e0       	ldi	r24, 0x04	; 4
    1df2:	91 50       	subi	r25, 0x01	; 1
    1df4:	20 40       	sbci	r18, 0x00	; 0
    1df6:	80 40       	sbci	r24, 0x00	; 0
    1df8:	e1 f7       	brne	.-8      	; 0x1df2 <main+0xa4>
    1dfa:	00 c0       	rjmp	.+0      	; 0x1dfc <main+0xae>
    1dfc:	00 00       	nop
		_delay_ms(100);
	}while(version != 0x22);
    1dfe:	0f 90       	pop	r0
    1e00:	0f 90       	pop	r0
    1e02:	0f 90       	pop	r0
    1e04:	0f 90       	pop	r0
    1e06:	12 32       	cpi	r17, 0x22	; 34
    1e08:	e1 f6       	brne	.-72     	; 0x1dc2 <main+0x74>
	sx1272init();
    1e0a:	0e 94 c0 03 	call	0x780	; 0x780 <sx1272init>
	sync();
    1e0e:	0e 94 57 05 	call	0xaae	; 0xaae <sync>
	txInit(modemConfig,CH_17_868,5,400,500);
    1e12:	0f 2e       	mov	r0, r31
    1e14:	f4 ef       	ldi	r31, 0xF4	; 244
    1e16:	8f 2e       	mov	r8, r31
    1e18:	99 24       	eor	r9, r9
    1e1a:	93 94       	inc	r9
    1e1c:	f0 2d       	mov	r31, r0
    1e1e:	0f 2e       	mov	r0, r31
    1e20:	f0 e9       	ldi	r31, 0x90	; 144
    1e22:	af 2e       	mov	r10, r31
    1e24:	bb 24       	eor	r11, r11
    1e26:	b3 94       	inc	r11
    1e28:	f0 2d       	mov	r31, r0
    1e2a:	0f 2e       	mov	r0, r31
    1e2c:	f5 e0       	ldi	r31, 0x05	; 5
    1e2e:	cf 2e       	mov	r12, r31
    1e30:	f0 2d       	mov	r31, r0
    1e32:	e1 2c       	mov	r14, r1
    1e34:	f1 2c       	mov	r15, r1
    1e36:	09 ed       	ldi	r16, 0xD9	; 217
    1e38:	10 e0       	ldi	r17, 0x00	; 0
    1e3a:	20 91 f1 04 	lds	r18, 0x04F1	; 0x8004f1 <modemConfig>
    1e3e:	30 91 f2 04 	lds	r19, 0x04F2	; 0x8004f2 <modemConfig+0x1>
    1e42:	40 91 f3 04 	lds	r20, 0x04F3	; 0x8004f3 <modemConfig+0x2>
    1e46:	50 91 f4 04 	lds	r21, 0x04F4	; 0x8004f4 <modemConfig+0x3>
    1e4a:	60 91 f5 04 	lds	r22, 0x04F5	; 0x8004f5 <modemConfig+0x4>
    1e4e:	70 91 f6 04 	lds	r23, 0x04F6	; 0x8004f6 <modemConfig+0x5>
    1e52:	80 91 f7 04 	lds	r24, 0x04F7	; 0x8004f7 <modemConfig+0x6>
    1e56:	90 91 f8 04 	lds	r25, 0x04F8	; 0x8004f8 <modemConfig+0x7>
    1e5a:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <txInit>
	rxInit(modemConfig,400,500);
    1e5e:	0f 2e       	mov	r0, r31
    1e60:	f4 ef       	ldi	r31, 0xF4	; 244
    1e62:	ef 2e       	mov	r14, r31
    1e64:	ff 24       	eor	r15, r15
    1e66:	f3 94       	inc	r15
    1e68:	f0 2d       	mov	r31, r0
    1e6a:	00 e9       	ldi	r16, 0x90	; 144
    1e6c:	11 e0       	ldi	r17, 0x01	; 1
    1e6e:	20 91 f1 04 	lds	r18, 0x04F1	; 0x8004f1 <modemConfig>
    1e72:	30 91 f2 04 	lds	r19, 0x04F2	; 0x8004f2 <modemConfig+0x1>
    1e76:	40 91 f3 04 	lds	r20, 0x04F3	; 0x8004f3 <modemConfig+0x2>
    1e7a:	50 91 f4 04 	lds	r21, 0x04F4	; 0x8004f4 <modemConfig+0x3>
    1e7e:	60 91 f5 04 	lds	r22, 0x04F5	; 0x8004f5 <modemConfig+0x4>
    1e82:	70 91 f6 04 	lds	r23, 0x04F6	; 0x8004f6 <modemConfig+0x5>
    1e86:	80 91 f7 04 	lds	r24, 0x04F7	; 0x8004f7 <modemConfig+0x6>
    1e8a:	90 91 f8 04 	lds	r25, 0x04F8	; 0x8004f8 <modemConfig+0x7>
    1e8e:	0e 94 76 09 	call	0x12ec	; 0x12ec <rxInit>
	
	setLnaGain(LNA_BOOST,LNA_MAX_GAIN);
    1e92:	63 e2       	ldi	r22, 0x23	; 35
    1e94:	83 e0       	ldi	r24, 0x03	; 3
    1e96:	0e 94 a8 02 	call	0x550	; 0x550 <setLnaGain>
	printf("LNA BOOST : ON, LNA GAIN : MAX\n");
    1e9a:	82 e7       	ldi	r24, 0x72	; 114
    1e9c:	94 e0       	ldi	r25, 0x04	; 4
    1e9e:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
	setPower(13);
    1ea2:	8d e0       	ldi	r24, 0x0D	; 13
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	0e 94 1c 02 	call	0x438	; 0x438 <setPower>
	printf("Power : 13dB\n");
    1eaa:	81 e9       	ldi	r24, 0x91	; 145
    1eac:	94 e0       	ldi	r25, 0x04	; 4
    1eae:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
	
	keypad_init();
    1eb2:	0e 94 8c 0c 	call	0x1918	; 0x1918 <keypad_init>
	PCICR = 0x00;
    1eb6:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	sei();
    1eba:	78 94       	sei
	
	bitSet(DDRC,3);
    1ebc:	3b 9a       	sbi	0x07, 3	; 7
	bitSet(DDRC,4);
    1ebe:	3c 9a       	sbi	0x07, 4	; 7
	bitSet(DDRC,5);
    1ec0:	3d 9a       	sbi	0x07, 5	; 7
	bitSet(DDRD,2);
    1ec2:	52 9a       	sbi	0x0a, 2	; 10
	bitSet(DDRD,3);
    1ec4:	53 9a       	sbi	0x0a, 3	; 10
    {
		
		
		
		if (minutes() - min > keyTimeout){
			keyTimedout = true;
    1ec6:	11 e0       	ldi	r17, 0x01	; 1
		
		bitClear(PORTC,4);
		bitClear(PORTC,5);
		bitSet(PORTC,3);	
		_delay_ms(20);
		PCICR = 0x02;
    1ec8:	c8 e6       	ldi	r28, 0x68	; 104
    1eca:	d0 e0       	ldi	r29, 0x00	; 0
    1ecc:	02 e0       	ldi	r16, 0x02	; 2
	while (1) 
    {
		
		
		
		if (minutes() - min > keyTimeout){
    1ece:	0e 94 45 08 	call	0x108a	; 0x108a <minutes>
    1ed2:	dc 01       	movw	r26, r24
    1ed4:	cb 01       	movw	r24, r22
    1ed6:	84 19       	sub	r24, r4
    1ed8:	95 09       	sbc	r25, r5
    1eda:	a6 09       	sbc	r26, r6
    1edc:	b7 09       	sbc	r27, r7
    1ede:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <keyTimeout>
    1ee2:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <keyTimeout+0x1>
    1ee6:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <keyTimeout+0x2>
    1eea:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <keyTimeout+0x3>
    1eee:	c8 16       	cp	r12, r24
    1ef0:	d9 06       	cpc	r13, r25
    1ef2:	ea 06       	cpc	r14, r26
    1ef4:	fb 06       	cpc	r15, r27
    1ef6:	30 f4       	brcc	.+12     	; 0x1f04 <main+0x1b6>
			keyTimedout = true;
    1ef8:	10 93 0f 01 	sts	0x010F, r17	; 0x80010f <keyTimedout>
			min = minutes();
    1efc:	0e 94 45 08 	call	0x108a	; 0x108a <minutes>
    1f00:	2b 01       	movw	r4, r22
    1f02:	3c 01       	movw	r6, r24
		}
		
		if (keyTimedout || authenticated){
    1f04:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <keyTimedout>
    1f08:	81 11       	cpse	r24, r1
    1f0a:	05 c0       	rjmp	.+10     	; 0x1f16 <main+0x1c8>
    1f0c:	80 91 d0 04 	lds	r24, 0x04D0	; 0x8004d0 <authenticated>
    1f10:	81 11       	cpse	r24, r1
    1f12:	05 c0       	rjmp	.+10     	; 0x1f1e <main+0x1d0>
    1f14:	1f c0       	rjmp	.+62     	; 0x1f54 <main+0x206>
			
			if (authenticated){
    1f16:	80 91 d0 04 	lds	r24, 0x04D0	; 0x8004d0 <authenticated>
    1f1a:	88 23       	and	r24, r24
    1f1c:	59 f0       	breq	.+22     	; 0x1f34 <main+0x1e6>
				bitSet(PORTD,2);
    1f1e:	5a 9a       	sbi	0x0b, 2	; 11
    1f20:	9f ef       	ldi	r25, 0xFF	; 255
    1f22:	23 ed       	ldi	r18, 0xD3	; 211
    1f24:	80 e3       	ldi	r24, 0x30	; 48
    1f26:	91 50       	subi	r25, 0x01	; 1
    1f28:	20 40       	sbci	r18, 0x00	; 0
    1f2a:	80 40       	sbci	r24, 0x00	; 0
    1f2c:	e1 f7       	brne	.-8      	; 0x1f26 <main+0x1d8>
    1f2e:	00 c0       	rjmp	.+0      	; 0x1f30 <main+0x1e2>
    1f30:	00 00       	nop
				_delay_ms(1000);
				bitClear(PORTD,2);
    1f32:	5a 98       	cbi	0x0b, 2	; 11
			}
			
			printf("Updating key\n");
    1f34:	8e e9       	ldi	r24, 0x9E	; 158
    1f36:	94 e0       	ldi	r25, 0x04	; 4
    1f38:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
			updateKey();
    1f3c:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <updateKey>
			printf("Ready to authenticate.\n");
    1f40:	8b ea       	ldi	r24, 0xAB	; 171
    1f42:	94 e0       	ldi	r25, 0x04	; 4
    1f44:	0e 94 01 11 	call	0x2202	; 0x2202 <puts>
			
			firstKeyUpdate = true;
    1f48:	10 93 cf 04 	sts	0x04CF, r17	; 0x8004cf <firstKeyUpdate>
			keyTimedout = false;
    1f4c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <keyTimedout>
			authenticated = false;
    1f50:	10 92 d0 04 	sts	0x04D0, r1	; 0x8004d0 <authenticated>
			
		}
		
		bitClear(PORTC,4);
    1f54:	44 98       	cbi	0x08, 4	; 8
		bitClear(PORTC,5);
    1f56:	45 98       	cbi	0x08, 5	; 8
		bitSet(PORTC,3);	
    1f58:	43 9a       	sbi	0x08, 3	; 8
    1f5a:	9f ef       	ldi	r25, 0xFF	; 255
    1f5c:	29 ef       	ldi	r18, 0xF9	; 249
    1f5e:	80 e0       	ldi	r24, 0x00	; 0
    1f60:	91 50       	subi	r25, 0x01	; 1
    1f62:	20 40       	sbci	r18, 0x00	; 0
    1f64:	80 40       	sbci	r24, 0x00	; 0
    1f66:	e1 f7       	brne	.-8      	; 0x1f60 <main+0x212>
    1f68:	00 c0       	rjmp	.+0      	; 0x1f6a <main+0x21c>
    1f6a:	00 00       	nop
		_delay_ms(20);
		PCICR = 0x02;
    1f6c:	08 83       	st	Y, r16
    1f6e:	9f ef       	ldi	r25, 0xFF	; 255
    1f70:	29 e6       	ldi	r18, 0x69	; 105
    1f72:	88 e1       	ldi	r24, 0x18	; 24
    1f74:	91 50       	subi	r25, 0x01	; 1
    1f76:	20 40       	sbci	r18, 0x00	; 0
    1f78:	80 40       	sbci	r24, 0x00	; 0
    1f7a:	e1 f7       	brne	.-8      	; 0x1f74 <main+0x226>
    1f7c:	00 c0       	rjmp	.+0      	; 0x1f7e <main+0x230>
    1f7e:	00 00       	nop
		
		_delay_ms(500);
		PCICR = 0x00;
    1f80:	18 82       	st	Y, r1
		bitClear(PORTC,3);
    1f82:	43 98       	cbi	0x08, 3	; 8
			
	}
    1f84:	a4 cf       	rjmp	.-184    	; 0x1ece <main+0x180>

00001f86 <malloc>:
    1f86:	0f 93       	push	r16
    1f88:	1f 93       	push	r17
    1f8a:	cf 93       	push	r28
    1f8c:	df 93       	push	r29
    1f8e:	82 30       	cpi	r24, 0x02	; 2
    1f90:	91 05       	cpc	r25, r1
    1f92:	10 f4       	brcc	.+4      	; 0x1f98 <malloc+0x12>
    1f94:	82 e0       	ldi	r24, 0x02	; 2
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	e0 91 20 05 	lds	r30, 0x0520	; 0x800520 <__flp>
    1f9c:	f0 91 21 05 	lds	r31, 0x0521	; 0x800521 <__flp+0x1>
    1fa0:	20 e0       	ldi	r18, 0x00	; 0
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	a0 e0       	ldi	r26, 0x00	; 0
    1fa6:	b0 e0       	ldi	r27, 0x00	; 0
    1fa8:	30 97       	sbiw	r30, 0x00	; 0
    1faa:	19 f1       	breq	.+70     	; 0x1ff2 <malloc+0x6c>
    1fac:	40 81       	ld	r20, Z
    1fae:	51 81       	ldd	r21, Z+1	; 0x01
    1fb0:	02 81       	ldd	r16, Z+2	; 0x02
    1fb2:	13 81       	ldd	r17, Z+3	; 0x03
    1fb4:	48 17       	cp	r20, r24
    1fb6:	59 07       	cpc	r21, r25
    1fb8:	c8 f0       	brcs	.+50     	; 0x1fec <malloc+0x66>
    1fba:	84 17       	cp	r24, r20
    1fbc:	95 07       	cpc	r25, r21
    1fbe:	69 f4       	brne	.+26     	; 0x1fda <malloc+0x54>
    1fc0:	10 97       	sbiw	r26, 0x00	; 0
    1fc2:	31 f0       	breq	.+12     	; 0x1fd0 <malloc+0x4a>
    1fc4:	12 96       	adiw	r26, 0x02	; 2
    1fc6:	0c 93       	st	X, r16
    1fc8:	12 97       	sbiw	r26, 0x02	; 2
    1fca:	13 96       	adiw	r26, 0x03	; 3
    1fcc:	1c 93       	st	X, r17
    1fce:	27 c0       	rjmp	.+78     	; 0x201e <malloc+0x98>
    1fd0:	00 93 20 05 	sts	0x0520, r16	; 0x800520 <__flp>
    1fd4:	10 93 21 05 	sts	0x0521, r17	; 0x800521 <__flp+0x1>
    1fd8:	22 c0       	rjmp	.+68     	; 0x201e <malloc+0x98>
    1fda:	21 15       	cp	r18, r1
    1fdc:	31 05       	cpc	r19, r1
    1fde:	19 f0       	breq	.+6      	; 0x1fe6 <malloc+0x60>
    1fe0:	42 17       	cp	r20, r18
    1fe2:	53 07       	cpc	r21, r19
    1fe4:	18 f4       	brcc	.+6      	; 0x1fec <malloc+0x66>
    1fe6:	9a 01       	movw	r18, r20
    1fe8:	bd 01       	movw	r22, r26
    1fea:	ef 01       	movw	r28, r30
    1fec:	df 01       	movw	r26, r30
    1fee:	f8 01       	movw	r30, r16
    1ff0:	db cf       	rjmp	.-74     	; 0x1fa8 <malloc+0x22>
    1ff2:	21 15       	cp	r18, r1
    1ff4:	31 05       	cpc	r19, r1
    1ff6:	f9 f0       	breq	.+62     	; 0x2036 <malloc+0xb0>
    1ff8:	28 1b       	sub	r18, r24
    1ffa:	39 0b       	sbc	r19, r25
    1ffc:	24 30       	cpi	r18, 0x04	; 4
    1ffe:	31 05       	cpc	r19, r1
    2000:	80 f4       	brcc	.+32     	; 0x2022 <malloc+0x9c>
    2002:	8a 81       	ldd	r24, Y+2	; 0x02
    2004:	9b 81       	ldd	r25, Y+3	; 0x03
    2006:	61 15       	cp	r22, r1
    2008:	71 05       	cpc	r23, r1
    200a:	21 f0       	breq	.+8      	; 0x2014 <malloc+0x8e>
    200c:	fb 01       	movw	r30, r22
    200e:	93 83       	std	Z+3, r25	; 0x03
    2010:	82 83       	std	Z+2, r24	; 0x02
    2012:	04 c0       	rjmp	.+8      	; 0x201c <malloc+0x96>
    2014:	90 93 21 05 	sts	0x0521, r25	; 0x800521 <__flp+0x1>
    2018:	80 93 20 05 	sts	0x0520, r24	; 0x800520 <__flp>
    201c:	fe 01       	movw	r30, r28
    201e:	32 96       	adiw	r30, 0x02	; 2
    2020:	44 c0       	rjmp	.+136    	; 0x20aa <malloc+0x124>
    2022:	fe 01       	movw	r30, r28
    2024:	e2 0f       	add	r30, r18
    2026:	f3 1f       	adc	r31, r19
    2028:	81 93       	st	Z+, r24
    202a:	91 93       	st	Z+, r25
    202c:	22 50       	subi	r18, 0x02	; 2
    202e:	31 09       	sbc	r19, r1
    2030:	39 83       	std	Y+1, r19	; 0x01
    2032:	28 83       	st	Y, r18
    2034:	3a c0       	rjmp	.+116    	; 0x20aa <malloc+0x124>
    2036:	20 91 1e 05 	lds	r18, 0x051E	; 0x80051e <__brkval>
    203a:	30 91 1f 05 	lds	r19, 0x051F	; 0x80051f <__brkval+0x1>
    203e:	23 2b       	or	r18, r19
    2040:	41 f4       	brne	.+16     	; 0x2052 <malloc+0xcc>
    2042:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2046:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    204a:	30 93 1f 05 	sts	0x051F, r19	; 0x80051f <__brkval+0x1>
    204e:	20 93 1e 05 	sts	0x051E, r18	; 0x80051e <__brkval>
    2052:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2056:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    205a:	21 15       	cp	r18, r1
    205c:	31 05       	cpc	r19, r1
    205e:	41 f4       	brne	.+16     	; 0x2070 <malloc+0xea>
    2060:	2d b7       	in	r18, 0x3d	; 61
    2062:	3e b7       	in	r19, 0x3e	; 62
    2064:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2068:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    206c:	24 1b       	sub	r18, r20
    206e:	35 0b       	sbc	r19, r21
    2070:	e0 91 1e 05 	lds	r30, 0x051E	; 0x80051e <__brkval>
    2074:	f0 91 1f 05 	lds	r31, 0x051F	; 0x80051f <__brkval+0x1>
    2078:	e2 17       	cp	r30, r18
    207a:	f3 07       	cpc	r31, r19
    207c:	a0 f4       	brcc	.+40     	; 0x20a6 <malloc+0x120>
    207e:	2e 1b       	sub	r18, r30
    2080:	3f 0b       	sbc	r19, r31
    2082:	28 17       	cp	r18, r24
    2084:	39 07       	cpc	r19, r25
    2086:	78 f0       	brcs	.+30     	; 0x20a6 <malloc+0x120>
    2088:	ac 01       	movw	r20, r24
    208a:	4e 5f       	subi	r20, 0xFE	; 254
    208c:	5f 4f       	sbci	r21, 0xFF	; 255
    208e:	24 17       	cp	r18, r20
    2090:	35 07       	cpc	r19, r21
    2092:	48 f0       	brcs	.+18     	; 0x20a6 <malloc+0x120>
    2094:	4e 0f       	add	r20, r30
    2096:	5f 1f       	adc	r21, r31
    2098:	50 93 1f 05 	sts	0x051F, r21	; 0x80051f <__brkval+0x1>
    209c:	40 93 1e 05 	sts	0x051E, r20	; 0x80051e <__brkval>
    20a0:	81 93       	st	Z+, r24
    20a2:	91 93       	st	Z+, r25
    20a4:	02 c0       	rjmp	.+4      	; 0x20aa <malloc+0x124>
    20a6:	e0 e0       	ldi	r30, 0x00	; 0
    20a8:	f0 e0       	ldi	r31, 0x00	; 0
    20aa:	cf 01       	movw	r24, r30
    20ac:	df 91       	pop	r29
    20ae:	cf 91       	pop	r28
    20b0:	1f 91       	pop	r17
    20b2:	0f 91       	pop	r16
    20b4:	08 95       	ret

000020b6 <free>:
    20b6:	cf 93       	push	r28
    20b8:	df 93       	push	r29
    20ba:	00 97       	sbiw	r24, 0x00	; 0
    20bc:	09 f4       	brne	.+2      	; 0x20c0 <free+0xa>
    20be:	81 c0       	rjmp	.+258    	; 0x21c2 <free+0x10c>
    20c0:	fc 01       	movw	r30, r24
    20c2:	32 97       	sbiw	r30, 0x02	; 2
    20c4:	13 82       	std	Z+3, r1	; 0x03
    20c6:	12 82       	std	Z+2, r1	; 0x02
    20c8:	a0 91 20 05 	lds	r26, 0x0520	; 0x800520 <__flp>
    20cc:	b0 91 21 05 	lds	r27, 0x0521	; 0x800521 <__flp+0x1>
    20d0:	10 97       	sbiw	r26, 0x00	; 0
    20d2:	81 f4       	brne	.+32     	; 0x20f4 <free+0x3e>
    20d4:	20 81       	ld	r18, Z
    20d6:	31 81       	ldd	r19, Z+1	; 0x01
    20d8:	82 0f       	add	r24, r18
    20da:	93 1f       	adc	r25, r19
    20dc:	20 91 1e 05 	lds	r18, 0x051E	; 0x80051e <__brkval>
    20e0:	30 91 1f 05 	lds	r19, 0x051F	; 0x80051f <__brkval+0x1>
    20e4:	28 17       	cp	r18, r24
    20e6:	39 07       	cpc	r19, r25
    20e8:	51 f5       	brne	.+84     	; 0x213e <free+0x88>
    20ea:	f0 93 1f 05 	sts	0x051F, r31	; 0x80051f <__brkval+0x1>
    20ee:	e0 93 1e 05 	sts	0x051E, r30	; 0x80051e <__brkval>
    20f2:	67 c0       	rjmp	.+206    	; 0x21c2 <free+0x10c>
    20f4:	ed 01       	movw	r28, r26
    20f6:	20 e0       	ldi	r18, 0x00	; 0
    20f8:	30 e0       	ldi	r19, 0x00	; 0
    20fa:	ce 17       	cp	r28, r30
    20fc:	df 07       	cpc	r29, r31
    20fe:	40 f4       	brcc	.+16     	; 0x2110 <free+0x5a>
    2100:	4a 81       	ldd	r20, Y+2	; 0x02
    2102:	5b 81       	ldd	r21, Y+3	; 0x03
    2104:	9e 01       	movw	r18, r28
    2106:	41 15       	cp	r20, r1
    2108:	51 05       	cpc	r21, r1
    210a:	f1 f0       	breq	.+60     	; 0x2148 <free+0x92>
    210c:	ea 01       	movw	r28, r20
    210e:	f5 cf       	rjmp	.-22     	; 0x20fa <free+0x44>
    2110:	d3 83       	std	Z+3, r29	; 0x03
    2112:	c2 83       	std	Z+2, r28	; 0x02
    2114:	40 81       	ld	r20, Z
    2116:	51 81       	ldd	r21, Z+1	; 0x01
    2118:	84 0f       	add	r24, r20
    211a:	95 1f       	adc	r25, r21
    211c:	c8 17       	cp	r28, r24
    211e:	d9 07       	cpc	r29, r25
    2120:	59 f4       	brne	.+22     	; 0x2138 <free+0x82>
    2122:	88 81       	ld	r24, Y
    2124:	99 81       	ldd	r25, Y+1	; 0x01
    2126:	84 0f       	add	r24, r20
    2128:	95 1f       	adc	r25, r21
    212a:	02 96       	adiw	r24, 0x02	; 2
    212c:	91 83       	std	Z+1, r25	; 0x01
    212e:	80 83       	st	Z, r24
    2130:	8a 81       	ldd	r24, Y+2	; 0x02
    2132:	9b 81       	ldd	r25, Y+3	; 0x03
    2134:	93 83       	std	Z+3, r25	; 0x03
    2136:	82 83       	std	Z+2, r24	; 0x02
    2138:	21 15       	cp	r18, r1
    213a:	31 05       	cpc	r19, r1
    213c:	29 f4       	brne	.+10     	; 0x2148 <free+0x92>
    213e:	f0 93 21 05 	sts	0x0521, r31	; 0x800521 <__flp+0x1>
    2142:	e0 93 20 05 	sts	0x0520, r30	; 0x800520 <__flp>
    2146:	3d c0       	rjmp	.+122    	; 0x21c2 <free+0x10c>
    2148:	e9 01       	movw	r28, r18
    214a:	fb 83       	std	Y+3, r31	; 0x03
    214c:	ea 83       	std	Y+2, r30	; 0x02
    214e:	49 91       	ld	r20, Y+
    2150:	59 91       	ld	r21, Y+
    2152:	c4 0f       	add	r28, r20
    2154:	d5 1f       	adc	r29, r21
    2156:	ec 17       	cp	r30, r28
    2158:	fd 07       	cpc	r31, r29
    215a:	61 f4       	brne	.+24     	; 0x2174 <free+0xbe>
    215c:	80 81       	ld	r24, Z
    215e:	91 81       	ldd	r25, Z+1	; 0x01
    2160:	84 0f       	add	r24, r20
    2162:	95 1f       	adc	r25, r21
    2164:	02 96       	adiw	r24, 0x02	; 2
    2166:	e9 01       	movw	r28, r18
    2168:	99 83       	std	Y+1, r25	; 0x01
    216a:	88 83       	st	Y, r24
    216c:	82 81       	ldd	r24, Z+2	; 0x02
    216e:	93 81       	ldd	r25, Z+3	; 0x03
    2170:	9b 83       	std	Y+3, r25	; 0x03
    2172:	8a 83       	std	Y+2, r24	; 0x02
    2174:	e0 e0       	ldi	r30, 0x00	; 0
    2176:	f0 e0       	ldi	r31, 0x00	; 0
    2178:	12 96       	adiw	r26, 0x02	; 2
    217a:	8d 91       	ld	r24, X+
    217c:	9c 91       	ld	r25, X
    217e:	13 97       	sbiw	r26, 0x03	; 3
    2180:	00 97       	sbiw	r24, 0x00	; 0
    2182:	19 f0       	breq	.+6      	; 0x218a <free+0xd4>
    2184:	fd 01       	movw	r30, r26
    2186:	dc 01       	movw	r26, r24
    2188:	f7 cf       	rjmp	.-18     	; 0x2178 <free+0xc2>
    218a:	8d 91       	ld	r24, X+
    218c:	9c 91       	ld	r25, X
    218e:	11 97       	sbiw	r26, 0x01	; 1
    2190:	9d 01       	movw	r18, r26
    2192:	2e 5f       	subi	r18, 0xFE	; 254
    2194:	3f 4f       	sbci	r19, 0xFF	; 255
    2196:	82 0f       	add	r24, r18
    2198:	93 1f       	adc	r25, r19
    219a:	20 91 1e 05 	lds	r18, 0x051E	; 0x80051e <__brkval>
    219e:	30 91 1f 05 	lds	r19, 0x051F	; 0x80051f <__brkval+0x1>
    21a2:	28 17       	cp	r18, r24
    21a4:	39 07       	cpc	r19, r25
    21a6:	69 f4       	brne	.+26     	; 0x21c2 <free+0x10c>
    21a8:	30 97       	sbiw	r30, 0x00	; 0
    21aa:	29 f4       	brne	.+10     	; 0x21b6 <free+0x100>
    21ac:	10 92 21 05 	sts	0x0521, r1	; 0x800521 <__flp+0x1>
    21b0:	10 92 20 05 	sts	0x0520, r1	; 0x800520 <__flp>
    21b4:	02 c0       	rjmp	.+4      	; 0x21ba <free+0x104>
    21b6:	13 82       	std	Z+3, r1	; 0x03
    21b8:	12 82       	std	Z+2, r1	; 0x02
    21ba:	b0 93 1f 05 	sts	0x051F, r27	; 0x80051f <__brkval+0x1>
    21be:	a0 93 1e 05 	sts	0x051E, r26	; 0x80051e <__brkval>
    21c2:	df 91       	pop	r29
    21c4:	cf 91       	pop	r28
    21c6:	08 95       	ret

000021c8 <printf>:
    21c8:	a0 e0       	ldi	r26, 0x00	; 0
    21ca:	b0 e0       	ldi	r27, 0x00	; 0
    21cc:	ea ee       	ldi	r30, 0xEA	; 234
    21ce:	f0 e1       	ldi	r31, 0x10	; 16
    21d0:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <__prologue_saves__+0x20>
    21d4:	ae 01       	movw	r20, r28
    21d6:	4b 5f       	subi	r20, 0xFB	; 251
    21d8:	5f 4f       	sbci	r21, 0xFF	; 255
    21da:	fa 01       	movw	r30, r20
    21dc:	61 91       	ld	r22, Z+
    21de:	71 91       	ld	r23, Z+
    21e0:	af 01       	movw	r20, r30
    21e2:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <__iob+0x2>
    21e6:	90 91 25 05 	lds	r25, 0x0525	; 0x800525 <__iob+0x3>
    21ea:	0e 94 31 11 	call	0x2262	; 0x2262 <vfprintf>
    21ee:	e2 e0       	ldi	r30, 0x02	; 2
    21f0:	0c 94 ee 13 	jmp	0x27dc	; 0x27dc <__epilogue_restores__+0x20>

000021f4 <putchar>:
    21f4:	60 91 24 05 	lds	r22, 0x0524	; 0x800524 <__iob+0x2>
    21f8:	70 91 25 05 	lds	r23, 0x0525	; 0x800525 <__iob+0x3>
    21fc:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    2200:	08 95       	ret

00002202 <puts>:
    2202:	0f 93       	push	r16
    2204:	1f 93       	push	r17
    2206:	cf 93       	push	r28
    2208:	df 93       	push	r29
    220a:	e0 91 24 05 	lds	r30, 0x0524	; 0x800524 <__iob+0x2>
    220e:	f0 91 25 05 	lds	r31, 0x0525	; 0x800525 <__iob+0x3>
    2212:	23 81       	ldd	r18, Z+3	; 0x03
    2214:	21 ff       	sbrs	r18, 1
    2216:	1b c0       	rjmp	.+54     	; 0x224e <puts+0x4c>
    2218:	8c 01       	movw	r16, r24
    221a:	d0 e0       	ldi	r29, 0x00	; 0
    221c:	c0 e0       	ldi	r28, 0x00	; 0
    221e:	f8 01       	movw	r30, r16
    2220:	81 91       	ld	r24, Z+
    2222:	8f 01       	movw	r16, r30
    2224:	60 91 24 05 	lds	r22, 0x0524	; 0x800524 <__iob+0x2>
    2228:	70 91 25 05 	lds	r23, 0x0525	; 0x800525 <__iob+0x3>
    222c:	db 01       	movw	r26, r22
    222e:	18 96       	adiw	r26, 0x08	; 8
    2230:	ed 91       	ld	r30, X+
    2232:	fc 91       	ld	r31, X
    2234:	19 97       	sbiw	r26, 0x09	; 9
    2236:	88 23       	and	r24, r24
    2238:	31 f0       	breq	.+12     	; 0x2246 <puts+0x44>
    223a:	09 95       	icall
    223c:	89 2b       	or	r24, r25
    223e:	79 f3       	breq	.-34     	; 0x221e <puts+0x1c>
    2240:	df ef       	ldi	r29, 0xFF	; 255
    2242:	cf ef       	ldi	r28, 0xFF	; 255
    2244:	ec cf       	rjmp	.-40     	; 0x221e <puts+0x1c>
    2246:	8a e0       	ldi	r24, 0x0A	; 10
    2248:	09 95       	icall
    224a:	89 2b       	or	r24, r25
    224c:	19 f0       	breq	.+6      	; 0x2254 <puts+0x52>
    224e:	8f ef       	ldi	r24, 0xFF	; 255
    2250:	9f ef       	ldi	r25, 0xFF	; 255
    2252:	02 c0       	rjmp	.+4      	; 0x2258 <puts+0x56>
    2254:	8d 2f       	mov	r24, r29
    2256:	9c 2f       	mov	r25, r28
    2258:	df 91       	pop	r29
    225a:	cf 91       	pop	r28
    225c:	1f 91       	pop	r17
    225e:	0f 91       	pop	r16
    2260:	08 95       	ret

00002262 <vfprintf>:
    2262:	ab e0       	ldi	r26, 0x0B	; 11
    2264:	b0 e0       	ldi	r27, 0x00	; 0
    2266:	e7 e3       	ldi	r30, 0x37	; 55
    2268:	f1 e1       	ldi	r31, 0x11	; 17
    226a:	0c 94 c2 13 	jmp	0x2784	; 0x2784 <__prologue_saves__>
    226e:	6c 01       	movw	r12, r24
    2270:	7b 01       	movw	r14, r22
    2272:	8a 01       	movw	r16, r20
    2274:	fc 01       	movw	r30, r24
    2276:	17 82       	std	Z+7, r1	; 0x07
    2278:	16 82       	std	Z+6, r1	; 0x06
    227a:	83 81       	ldd	r24, Z+3	; 0x03
    227c:	81 ff       	sbrs	r24, 1
    227e:	cc c1       	rjmp	.+920    	; 0x2618 <vfprintf+0x3b6>
    2280:	ce 01       	movw	r24, r28
    2282:	01 96       	adiw	r24, 0x01	; 1
    2284:	3c 01       	movw	r6, r24
    2286:	f6 01       	movw	r30, r12
    2288:	93 81       	ldd	r25, Z+3	; 0x03
    228a:	f7 01       	movw	r30, r14
    228c:	93 fd       	sbrc	r25, 3
    228e:	85 91       	lpm	r24, Z+
    2290:	93 ff       	sbrs	r25, 3
    2292:	81 91       	ld	r24, Z+
    2294:	7f 01       	movw	r14, r30
    2296:	88 23       	and	r24, r24
    2298:	09 f4       	brne	.+2      	; 0x229c <vfprintf+0x3a>
    229a:	ba c1       	rjmp	.+884    	; 0x2610 <vfprintf+0x3ae>
    229c:	85 32       	cpi	r24, 0x25	; 37
    229e:	39 f4       	brne	.+14     	; 0x22ae <vfprintf+0x4c>
    22a0:	93 fd       	sbrc	r25, 3
    22a2:	85 91       	lpm	r24, Z+
    22a4:	93 ff       	sbrs	r25, 3
    22a6:	81 91       	ld	r24, Z+
    22a8:	7f 01       	movw	r14, r30
    22aa:	85 32       	cpi	r24, 0x25	; 37
    22ac:	29 f4       	brne	.+10     	; 0x22b8 <vfprintf+0x56>
    22ae:	b6 01       	movw	r22, r12
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    22b6:	e7 cf       	rjmp	.-50     	; 0x2286 <vfprintf+0x24>
    22b8:	91 2c       	mov	r9, r1
    22ba:	21 2c       	mov	r2, r1
    22bc:	31 2c       	mov	r3, r1
    22be:	ff e1       	ldi	r31, 0x1F	; 31
    22c0:	f3 15       	cp	r31, r3
    22c2:	d8 f0       	brcs	.+54     	; 0x22fa <vfprintf+0x98>
    22c4:	8b 32       	cpi	r24, 0x2B	; 43
    22c6:	79 f0       	breq	.+30     	; 0x22e6 <vfprintf+0x84>
    22c8:	38 f4       	brcc	.+14     	; 0x22d8 <vfprintf+0x76>
    22ca:	80 32       	cpi	r24, 0x20	; 32
    22cc:	79 f0       	breq	.+30     	; 0x22ec <vfprintf+0x8a>
    22ce:	83 32       	cpi	r24, 0x23	; 35
    22d0:	a1 f4       	brne	.+40     	; 0x22fa <vfprintf+0x98>
    22d2:	23 2d       	mov	r18, r3
    22d4:	20 61       	ori	r18, 0x10	; 16
    22d6:	1d c0       	rjmp	.+58     	; 0x2312 <vfprintf+0xb0>
    22d8:	8d 32       	cpi	r24, 0x2D	; 45
    22da:	61 f0       	breq	.+24     	; 0x22f4 <vfprintf+0x92>
    22dc:	80 33       	cpi	r24, 0x30	; 48
    22de:	69 f4       	brne	.+26     	; 0x22fa <vfprintf+0x98>
    22e0:	23 2d       	mov	r18, r3
    22e2:	21 60       	ori	r18, 0x01	; 1
    22e4:	16 c0       	rjmp	.+44     	; 0x2312 <vfprintf+0xb0>
    22e6:	83 2d       	mov	r24, r3
    22e8:	82 60       	ori	r24, 0x02	; 2
    22ea:	38 2e       	mov	r3, r24
    22ec:	e3 2d       	mov	r30, r3
    22ee:	e4 60       	ori	r30, 0x04	; 4
    22f0:	3e 2e       	mov	r3, r30
    22f2:	2a c0       	rjmp	.+84     	; 0x2348 <vfprintf+0xe6>
    22f4:	f3 2d       	mov	r31, r3
    22f6:	f8 60       	ori	r31, 0x08	; 8
    22f8:	1d c0       	rjmp	.+58     	; 0x2334 <vfprintf+0xd2>
    22fa:	37 fc       	sbrc	r3, 7
    22fc:	2d c0       	rjmp	.+90     	; 0x2358 <vfprintf+0xf6>
    22fe:	20 ed       	ldi	r18, 0xD0	; 208
    2300:	28 0f       	add	r18, r24
    2302:	2a 30       	cpi	r18, 0x0A	; 10
    2304:	40 f0       	brcs	.+16     	; 0x2316 <vfprintf+0xb4>
    2306:	8e 32       	cpi	r24, 0x2E	; 46
    2308:	b9 f4       	brne	.+46     	; 0x2338 <vfprintf+0xd6>
    230a:	36 fc       	sbrc	r3, 6
    230c:	81 c1       	rjmp	.+770    	; 0x2610 <vfprintf+0x3ae>
    230e:	23 2d       	mov	r18, r3
    2310:	20 64       	ori	r18, 0x40	; 64
    2312:	32 2e       	mov	r3, r18
    2314:	19 c0       	rjmp	.+50     	; 0x2348 <vfprintf+0xe6>
    2316:	36 fe       	sbrs	r3, 6
    2318:	06 c0       	rjmp	.+12     	; 0x2326 <vfprintf+0xc4>
    231a:	8a e0       	ldi	r24, 0x0A	; 10
    231c:	98 9e       	mul	r9, r24
    231e:	20 0d       	add	r18, r0
    2320:	11 24       	eor	r1, r1
    2322:	92 2e       	mov	r9, r18
    2324:	11 c0       	rjmp	.+34     	; 0x2348 <vfprintf+0xe6>
    2326:	ea e0       	ldi	r30, 0x0A	; 10
    2328:	2e 9e       	mul	r2, r30
    232a:	20 0d       	add	r18, r0
    232c:	11 24       	eor	r1, r1
    232e:	22 2e       	mov	r2, r18
    2330:	f3 2d       	mov	r31, r3
    2332:	f0 62       	ori	r31, 0x20	; 32
    2334:	3f 2e       	mov	r3, r31
    2336:	08 c0       	rjmp	.+16     	; 0x2348 <vfprintf+0xe6>
    2338:	8c 36       	cpi	r24, 0x6C	; 108
    233a:	21 f4       	brne	.+8      	; 0x2344 <vfprintf+0xe2>
    233c:	83 2d       	mov	r24, r3
    233e:	80 68       	ori	r24, 0x80	; 128
    2340:	38 2e       	mov	r3, r24
    2342:	02 c0       	rjmp	.+4      	; 0x2348 <vfprintf+0xe6>
    2344:	88 36       	cpi	r24, 0x68	; 104
    2346:	41 f4       	brne	.+16     	; 0x2358 <vfprintf+0xf6>
    2348:	f7 01       	movw	r30, r14
    234a:	93 fd       	sbrc	r25, 3
    234c:	85 91       	lpm	r24, Z+
    234e:	93 ff       	sbrs	r25, 3
    2350:	81 91       	ld	r24, Z+
    2352:	7f 01       	movw	r14, r30
    2354:	81 11       	cpse	r24, r1
    2356:	b3 cf       	rjmp	.-154    	; 0x22be <vfprintf+0x5c>
    2358:	98 2f       	mov	r25, r24
    235a:	9f 7d       	andi	r25, 0xDF	; 223
    235c:	95 54       	subi	r25, 0x45	; 69
    235e:	93 30       	cpi	r25, 0x03	; 3
    2360:	28 f4       	brcc	.+10     	; 0x236c <vfprintf+0x10a>
    2362:	0c 5f       	subi	r16, 0xFC	; 252
    2364:	1f 4f       	sbci	r17, 0xFF	; 255
    2366:	9f e3       	ldi	r25, 0x3F	; 63
    2368:	99 83       	std	Y+1, r25	; 0x01
    236a:	0d c0       	rjmp	.+26     	; 0x2386 <vfprintf+0x124>
    236c:	83 36       	cpi	r24, 0x63	; 99
    236e:	31 f0       	breq	.+12     	; 0x237c <vfprintf+0x11a>
    2370:	83 37       	cpi	r24, 0x73	; 115
    2372:	71 f0       	breq	.+28     	; 0x2390 <vfprintf+0x12e>
    2374:	83 35       	cpi	r24, 0x53	; 83
    2376:	09 f0       	breq	.+2      	; 0x237a <vfprintf+0x118>
    2378:	59 c0       	rjmp	.+178    	; 0x242c <vfprintf+0x1ca>
    237a:	21 c0       	rjmp	.+66     	; 0x23be <vfprintf+0x15c>
    237c:	f8 01       	movw	r30, r16
    237e:	80 81       	ld	r24, Z
    2380:	89 83       	std	Y+1, r24	; 0x01
    2382:	0e 5f       	subi	r16, 0xFE	; 254
    2384:	1f 4f       	sbci	r17, 0xFF	; 255
    2386:	88 24       	eor	r8, r8
    2388:	83 94       	inc	r8
    238a:	91 2c       	mov	r9, r1
    238c:	53 01       	movw	r10, r6
    238e:	13 c0       	rjmp	.+38     	; 0x23b6 <vfprintf+0x154>
    2390:	28 01       	movw	r4, r16
    2392:	f2 e0       	ldi	r31, 0x02	; 2
    2394:	4f 0e       	add	r4, r31
    2396:	51 1c       	adc	r5, r1
    2398:	f8 01       	movw	r30, r16
    239a:	a0 80       	ld	r10, Z
    239c:	b1 80       	ldd	r11, Z+1	; 0x01
    239e:	36 fe       	sbrs	r3, 6
    23a0:	03 c0       	rjmp	.+6      	; 0x23a8 <vfprintf+0x146>
    23a2:	69 2d       	mov	r22, r9
    23a4:	70 e0       	ldi	r23, 0x00	; 0
    23a6:	02 c0       	rjmp	.+4      	; 0x23ac <vfprintf+0x14a>
    23a8:	6f ef       	ldi	r22, 0xFF	; 255
    23aa:	7f ef       	ldi	r23, 0xFF	; 255
    23ac:	c5 01       	movw	r24, r10
    23ae:	0e 94 1d 13 	call	0x263a	; 0x263a <strnlen>
    23b2:	4c 01       	movw	r8, r24
    23b4:	82 01       	movw	r16, r4
    23b6:	f3 2d       	mov	r31, r3
    23b8:	ff 77       	andi	r31, 0x7F	; 127
    23ba:	3f 2e       	mov	r3, r31
    23bc:	16 c0       	rjmp	.+44     	; 0x23ea <vfprintf+0x188>
    23be:	28 01       	movw	r4, r16
    23c0:	22 e0       	ldi	r18, 0x02	; 2
    23c2:	42 0e       	add	r4, r18
    23c4:	51 1c       	adc	r5, r1
    23c6:	f8 01       	movw	r30, r16
    23c8:	a0 80       	ld	r10, Z
    23ca:	b1 80       	ldd	r11, Z+1	; 0x01
    23cc:	36 fe       	sbrs	r3, 6
    23ce:	03 c0       	rjmp	.+6      	; 0x23d6 <vfprintf+0x174>
    23d0:	69 2d       	mov	r22, r9
    23d2:	70 e0       	ldi	r23, 0x00	; 0
    23d4:	02 c0       	rjmp	.+4      	; 0x23da <vfprintf+0x178>
    23d6:	6f ef       	ldi	r22, 0xFF	; 255
    23d8:	7f ef       	ldi	r23, 0xFF	; 255
    23da:	c5 01       	movw	r24, r10
    23dc:	0e 94 12 13 	call	0x2624	; 0x2624 <strnlen_P>
    23e0:	4c 01       	movw	r8, r24
    23e2:	f3 2d       	mov	r31, r3
    23e4:	f0 68       	ori	r31, 0x80	; 128
    23e6:	3f 2e       	mov	r3, r31
    23e8:	82 01       	movw	r16, r4
    23ea:	33 fc       	sbrc	r3, 3
    23ec:	1b c0       	rjmp	.+54     	; 0x2424 <vfprintf+0x1c2>
    23ee:	82 2d       	mov	r24, r2
    23f0:	90 e0       	ldi	r25, 0x00	; 0
    23f2:	88 16       	cp	r8, r24
    23f4:	99 06       	cpc	r9, r25
    23f6:	b0 f4       	brcc	.+44     	; 0x2424 <vfprintf+0x1c2>
    23f8:	b6 01       	movw	r22, r12
    23fa:	80 e2       	ldi	r24, 0x20	; 32
    23fc:	90 e0       	ldi	r25, 0x00	; 0
    23fe:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    2402:	2a 94       	dec	r2
    2404:	f4 cf       	rjmp	.-24     	; 0x23ee <vfprintf+0x18c>
    2406:	f5 01       	movw	r30, r10
    2408:	37 fc       	sbrc	r3, 7
    240a:	85 91       	lpm	r24, Z+
    240c:	37 fe       	sbrs	r3, 7
    240e:	81 91       	ld	r24, Z+
    2410:	5f 01       	movw	r10, r30
    2412:	b6 01       	movw	r22, r12
    2414:	90 e0       	ldi	r25, 0x00	; 0
    2416:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    241a:	21 10       	cpse	r2, r1
    241c:	2a 94       	dec	r2
    241e:	21 e0       	ldi	r18, 0x01	; 1
    2420:	82 1a       	sub	r8, r18
    2422:	91 08       	sbc	r9, r1
    2424:	81 14       	cp	r8, r1
    2426:	91 04       	cpc	r9, r1
    2428:	71 f7       	brne	.-36     	; 0x2406 <vfprintf+0x1a4>
    242a:	e8 c0       	rjmp	.+464    	; 0x25fc <vfprintf+0x39a>
    242c:	84 36       	cpi	r24, 0x64	; 100
    242e:	11 f0       	breq	.+4      	; 0x2434 <vfprintf+0x1d2>
    2430:	89 36       	cpi	r24, 0x69	; 105
    2432:	41 f5       	brne	.+80     	; 0x2484 <vfprintf+0x222>
    2434:	f8 01       	movw	r30, r16
    2436:	37 fe       	sbrs	r3, 7
    2438:	07 c0       	rjmp	.+14     	; 0x2448 <vfprintf+0x1e6>
    243a:	60 81       	ld	r22, Z
    243c:	71 81       	ldd	r23, Z+1	; 0x01
    243e:	82 81       	ldd	r24, Z+2	; 0x02
    2440:	93 81       	ldd	r25, Z+3	; 0x03
    2442:	0c 5f       	subi	r16, 0xFC	; 252
    2444:	1f 4f       	sbci	r17, 0xFF	; 255
    2446:	08 c0       	rjmp	.+16     	; 0x2458 <vfprintf+0x1f6>
    2448:	60 81       	ld	r22, Z
    244a:	71 81       	ldd	r23, Z+1	; 0x01
    244c:	07 2e       	mov	r0, r23
    244e:	00 0c       	add	r0, r0
    2450:	88 0b       	sbc	r24, r24
    2452:	99 0b       	sbc	r25, r25
    2454:	0e 5f       	subi	r16, 0xFE	; 254
    2456:	1f 4f       	sbci	r17, 0xFF	; 255
    2458:	f3 2d       	mov	r31, r3
    245a:	ff 76       	andi	r31, 0x6F	; 111
    245c:	3f 2e       	mov	r3, r31
    245e:	97 ff       	sbrs	r25, 7
    2460:	09 c0       	rjmp	.+18     	; 0x2474 <vfprintf+0x212>
    2462:	90 95       	com	r25
    2464:	80 95       	com	r24
    2466:	70 95       	com	r23
    2468:	61 95       	neg	r22
    246a:	7f 4f       	sbci	r23, 0xFF	; 255
    246c:	8f 4f       	sbci	r24, 0xFF	; 255
    246e:	9f 4f       	sbci	r25, 0xFF	; 255
    2470:	f0 68       	ori	r31, 0x80	; 128
    2472:	3f 2e       	mov	r3, r31
    2474:	2a e0       	ldi	r18, 0x0A	; 10
    2476:	30 e0       	ldi	r19, 0x00	; 0
    2478:	a3 01       	movw	r20, r6
    247a:	0e 94 64 13 	call	0x26c8	; 0x26c8 <__ultoa_invert>
    247e:	88 2e       	mov	r8, r24
    2480:	86 18       	sub	r8, r6
    2482:	45 c0       	rjmp	.+138    	; 0x250e <vfprintf+0x2ac>
    2484:	85 37       	cpi	r24, 0x75	; 117
    2486:	31 f4       	brne	.+12     	; 0x2494 <vfprintf+0x232>
    2488:	23 2d       	mov	r18, r3
    248a:	2f 7e       	andi	r18, 0xEF	; 239
    248c:	b2 2e       	mov	r11, r18
    248e:	2a e0       	ldi	r18, 0x0A	; 10
    2490:	30 e0       	ldi	r19, 0x00	; 0
    2492:	25 c0       	rjmp	.+74     	; 0x24de <vfprintf+0x27c>
    2494:	93 2d       	mov	r25, r3
    2496:	99 7f       	andi	r25, 0xF9	; 249
    2498:	b9 2e       	mov	r11, r25
    249a:	8f 36       	cpi	r24, 0x6F	; 111
    249c:	c1 f0       	breq	.+48     	; 0x24ce <vfprintf+0x26c>
    249e:	18 f4       	brcc	.+6      	; 0x24a6 <vfprintf+0x244>
    24a0:	88 35       	cpi	r24, 0x58	; 88
    24a2:	79 f0       	breq	.+30     	; 0x24c2 <vfprintf+0x260>
    24a4:	b5 c0       	rjmp	.+362    	; 0x2610 <vfprintf+0x3ae>
    24a6:	80 37       	cpi	r24, 0x70	; 112
    24a8:	19 f0       	breq	.+6      	; 0x24b0 <vfprintf+0x24e>
    24aa:	88 37       	cpi	r24, 0x78	; 120
    24ac:	21 f0       	breq	.+8      	; 0x24b6 <vfprintf+0x254>
    24ae:	b0 c0       	rjmp	.+352    	; 0x2610 <vfprintf+0x3ae>
    24b0:	e9 2f       	mov	r30, r25
    24b2:	e0 61       	ori	r30, 0x10	; 16
    24b4:	be 2e       	mov	r11, r30
    24b6:	b4 fe       	sbrs	r11, 4
    24b8:	0d c0       	rjmp	.+26     	; 0x24d4 <vfprintf+0x272>
    24ba:	fb 2d       	mov	r31, r11
    24bc:	f4 60       	ori	r31, 0x04	; 4
    24be:	bf 2e       	mov	r11, r31
    24c0:	09 c0       	rjmp	.+18     	; 0x24d4 <vfprintf+0x272>
    24c2:	34 fe       	sbrs	r3, 4
    24c4:	0a c0       	rjmp	.+20     	; 0x24da <vfprintf+0x278>
    24c6:	29 2f       	mov	r18, r25
    24c8:	26 60       	ori	r18, 0x06	; 6
    24ca:	b2 2e       	mov	r11, r18
    24cc:	06 c0       	rjmp	.+12     	; 0x24da <vfprintf+0x278>
    24ce:	28 e0       	ldi	r18, 0x08	; 8
    24d0:	30 e0       	ldi	r19, 0x00	; 0
    24d2:	05 c0       	rjmp	.+10     	; 0x24de <vfprintf+0x27c>
    24d4:	20 e1       	ldi	r18, 0x10	; 16
    24d6:	30 e0       	ldi	r19, 0x00	; 0
    24d8:	02 c0       	rjmp	.+4      	; 0x24de <vfprintf+0x27c>
    24da:	20 e1       	ldi	r18, 0x10	; 16
    24dc:	32 e0       	ldi	r19, 0x02	; 2
    24de:	f8 01       	movw	r30, r16
    24e0:	b7 fe       	sbrs	r11, 7
    24e2:	07 c0       	rjmp	.+14     	; 0x24f2 <vfprintf+0x290>
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	0c 5f       	subi	r16, 0xFC	; 252
    24ee:	1f 4f       	sbci	r17, 0xFF	; 255
    24f0:	06 c0       	rjmp	.+12     	; 0x24fe <vfprintf+0x29c>
    24f2:	60 81       	ld	r22, Z
    24f4:	71 81       	ldd	r23, Z+1	; 0x01
    24f6:	80 e0       	ldi	r24, 0x00	; 0
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	0e 5f       	subi	r16, 0xFE	; 254
    24fc:	1f 4f       	sbci	r17, 0xFF	; 255
    24fe:	a3 01       	movw	r20, r6
    2500:	0e 94 64 13 	call	0x26c8	; 0x26c8 <__ultoa_invert>
    2504:	88 2e       	mov	r8, r24
    2506:	86 18       	sub	r8, r6
    2508:	fb 2d       	mov	r31, r11
    250a:	ff 77       	andi	r31, 0x7F	; 127
    250c:	3f 2e       	mov	r3, r31
    250e:	36 fe       	sbrs	r3, 6
    2510:	0d c0       	rjmp	.+26     	; 0x252c <vfprintf+0x2ca>
    2512:	23 2d       	mov	r18, r3
    2514:	2e 7f       	andi	r18, 0xFE	; 254
    2516:	a2 2e       	mov	r10, r18
    2518:	89 14       	cp	r8, r9
    251a:	58 f4       	brcc	.+22     	; 0x2532 <vfprintf+0x2d0>
    251c:	34 fe       	sbrs	r3, 4
    251e:	0b c0       	rjmp	.+22     	; 0x2536 <vfprintf+0x2d4>
    2520:	32 fc       	sbrc	r3, 2
    2522:	09 c0       	rjmp	.+18     	; 0x2536 <vfprintf+0x2d4>
    2524:	83 2d       	mov	r24, r3
    2526:	8e 7e       	andi	r24, 0xEE	; 238
    2528:	a8 2e       	mov	r10, r24
    252a:	05 c0       	rjmp	.+10     	; 0x2536 <vfprintf+0x2d4>
    252c:	b8 2c       	mov	r11, r8
    252e:	a3 2c       	mov	r10, r3
    2530:	03 c0       	rjmp	.+6      	; 0x2538 <vfprintf+0x2d6>
    2532:	b8 2c       	mov	r11, r8
    2534:	01 c0       	rjmp	.+2      	; 0x2538 <vfprintf+0x2d6>
    2536:	b9 2c       	mov	r11, r9
    2538:	a4 fe       	sbrs	r10, 4
    253a:	0f c0       	rjmp	.+30     	; 0x255a <vfprintf+0x2f8>
    253c:	fe 01       	movw	r30, r28
    253e:	e8 0d       	add	r30, r8
    2540:	f1 1d       	adc	r31, r1
    2542:	80 81       	ld	r24, Z
    2544:	80 33       	cpi	r24, 0x30	; 48
    2546:	21 f4       	brne	.+8      	; 0x2550 <vfprintf+0x2ee>
    2548:	9a 2d       	mov	r25, r10
    254a:	99 7e       	andi	r25, 0xE9	; 233
    254c:	a9 2e       	mov	r10, r25
    254e:	09 c0       	rjmp	.+18     	; 0x2562 <vfprintf+0x300>
    2550:	a2 fe       	sbrs	r10, 2
    2552:	06 c0       	rjmp	.+12     	; 0x2560 <vfprintf+0x2fe>
    2554:	b3 94       	inc	r11
    2556:	b3 94       	inc	r11
    2558:	04 c0       	rjmp	.+8      	; 0x2562 <vfprintf+0x300>
    255a:	8a 2d       	mov	r24, r10
    255c:	86 78       	andi	r24, 0x86	; 134
    255e:	09 f0       	breq	.+2      	; 0x2562 <vfprintf+0x300>
    2560:	b3 94       	inc	r11
    2562:	a3 fc       	sbrc	r10, 3
    2564:	11 c0       	rjmp	.+34     	; 0x2588 <vfprintf+0x326>
    2566:	a0 fe       	sbrs	r10, 0
    2568:	06 c0       	rjmp	.+12     	; 0x2576 <vfprintf+0x314>
    256a:	b2 14       	cp	r11, r2
    256c:	88 f4       	brcc	.+34     	; 0x2590 <vfprintf+0x32e>
    256e:	28 0c       	add	r2, r8
    2570:	92 2c       	mov	r9, r2
    2572:	9b 18       	sub	r9, r11
    2574:	0e c0       	rjmp	.+28     	; 0x2592 <vfprintf+0x330>
    2576:	b2 14       	cp	r11, r2
    2578:	60 f4       	brcc	.+24     	; 0x2592 <vfprintf+0x330>
    257a:	b6 01       	movw	r22, r12
    257c:	80 e2       	ldi	r24, 0x20	; 32
    257e:	90 e0       	ldi	r25, 0x00	; 0
    2580:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    2584:	b3 94       	inc	r11
    2586:	f7 cf       	rjmp	.-18     	; 0x2576 <vfprintf+0x314>
    2588:	b2 14       	cp	r11, r2
    258a:	18 f4       	brcc	.+6      	; 0x2592 <vfprintf+0x330>
    258c:	2b 18       	sub	r2, r11
    258e:	02 c0       	rjmp	.+4      	; 0x2594 <vfprintf+0x332>
    2590:	98 2c       	mov	r9, r8
    2592:	21 2c       	mov	r2, r1
    2594:	a4 fe       	sbrs	r10, 4
    2596:	10 c0       	rjmp	.+32     	; 0x25b8 <vfprintf+0x356>
    2598:	b6 01       	movw	r22, r12
    259a:	80 e3       	ldi	r24, 0x30	; 48
    259c:	90 e0       	ldi	r25, 0x00	; 0
    259e:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    25a2:	a2 fe       	sbrs	r10, 2
    25a4:	17 c0       	rjmp	.+46     	; 0x25d4 <vfprintf+0x372>
    25a6:	a1 fc       	sbrc	r10, 1
    25a8:	03 c0       	rjmp	.+6      	; 0x25b0 <vfprintf+0x34e>
    25aa:	88 e7       	ldi	r24, 0x78	; 120
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	02 c0       	rjmp	.+4      	; 0x25b4 <vfprintf+0x352>
    25b0:	88 e5       	ldi	r24, 0x58	; 88
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	b6 01       	movw	r22, r12
    25b6:	0c c0       	rjmp	.+24     	; 0x25d0 <vfprintf+0x36e>
    25b8:	8a 2d       	mov	r24, r10
    25ba:	86 78       	andi	r24, 0x86	; 134
    25bc:	59 f0       	breq	.+22     	; 0x25d4 <vfprintf+0x372>
    25be:	a1 fe       	sbrs	r10, 1
    25c0:	02 c0       	rjmp	.+4      	; 0x25c6 <vfprintf+0x364>
    25c2:	8b e2       	ldi	r24, 0x2B	; 43
    25c4:	01 c0       	rjmp	.+2      	; 0x25c8 <vfprintf+0x366>
    25c6:	80 e2       	ldi	r24, 0x20	; 32
    25c8:	a7 fc       	sbrc	r10, 7
    25ca:	8d e2       	ldi	r24, 0x2D	; 45
    25cc:	b6 01       	movw	r22, r12
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    25d4:	89 14       	cp	r8, r9
    25d6:	38 f4       	brcc	.+14     	; 0x25e6 <vfprintf+0x384>
    25d8:	b6 01       	movw	r22, r12
    25da:	80 e3       	ldi	r24, 0x30	; 48
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    25e2:	9a 94       	dec	r9
    25e4:	f7 cf       	rjmp	.-18     	; 0x25d4 <vfprintf+0x372>
    25e6:	8a 94       	dec	r8
    25e8:	f3 01       	movw	r30, r6
    25ea:	e8 0d       	add	r30, r8
    25ec:	f1 1d       	adc	r31, r1
    25ee:	80 81       	ld	r24, Z
    25f0:	b6 01       	movw	r22, r12
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    25f8:	81 10       	cpse	r8, r1
    25fa:	f5 cf       	rjmp	.-22     	; 0x25e6 <vfprintf+0x384>
    25fc:	22 20       	and	r2, r2
    25fe:	09 f4       	brne	.+2      	; 0x2602 <vfprintf+0x3a0>
    2600:	42 ce       	rjmp	.-892    	; 0x2286 <vfprintf+0x24>
    2602:	b6 01       	movw	r22, r12
    2604:	80 e2       	ldi	r24, 0x20	; 32
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	0e 94 28 13 	call	0x2650	; 0x2650 <fputc>
    260c:	2a 94       	dec	r2
    260e:	f6 cf       	rjmp	.-20     	; 0x25fc <vfprintf+0x39a>
    2610:	f6 01       	movw	r30, r12
    2612:	86 81       	ldd	r24, Z+6	; 0x06
    2614:	97 81       	ldd	r25, Z+7	; 0x07
    2616:	02 c0       	rjmp	.+4      	; 0x261c <vfprintf+0x3ba>
    2618:	8f ef       	ldi	r24, 0xFF	; 255
    261a:	9f ef       	ldi	r25, 0xFF	; 255
    261c:	2b 96       	adiw	r28, 0x0b	; 11
    261e:	e2 e1       	ldi	r30, 0x12	; 18
    2620:	0c 94 de 13 	jmp	0x27bc	; 0x27bc <__epilogue_restores__>

00002624 <strnlen_P>:
    2624:	fc 01       	movw	r30, r24
    2626:	05 90       	lpm	r0, Z+
    2628:	61 50       	subi	r22, 0x01	; 1
    262a:	70 40       	sbci	r23, 0x00	; 0
    262c:	01 10       	cpse	r0, r1
    262e:	d8 f7       	brcc	.-10     	; 0x2626 <strnlen_P+0x2>
    2630:	80 95       	com	r24
    2632:	90 95       	com	r25
    2634:	8e 0f       	add	r24, r30
    2636:	9f 1f       	adc	r25, r31
    2638:	08 95       	ret

0000263a <strnlen>:
    263a:	fc 01       	movw	r30, r24
    263c:	61 50       	subi	r22, 0x01	; 1
    263e:	70 40       	sbci	r23, 0x00	; 0
    2640:	01 90       	ld	r0, Z+
    2642:	01 10       	cpse	r0, r1
    2644:	d8 f7       	brcc	.-10     	; 0x263c <strnlen+0x2>
    2646:	80 95       	com	r24
    2648:	90 95       	com	r25
    264a:	8e 0f       	add	r24, r30
    264c:	9f 1f       	adc	r25, r31
    264e:	08 95       	ret

00002650 <fputc>:
    2650:	0f 93       	push	r16
    2652:	1f 93       	push	r17
    2654:	cf 93       	push	r28
    2656:	df 93       	push	r29
    2658:	fb 01       	movw	r30, r22
    265a:	23 81       	ldd	r18, Z+3	; 0x03
    265c:	21 fd       	sbrc	r18, 1
    265e:	03 c0       	rjmp	.+6      	; 0x2666 <fputc+0x16>
    2660:	8f ef       	ldi	r24, 0xFF	; 255
    2662:	9f ef       	ldi	r25, 0xFF	; 255
    2664:	2c c0       	rjmp	.+88     	; 0x26be <fputc+0x6e>
    2666:	22 ff       	sbrs	r18, 2
    2668:	16 c0       	rjmp	.+44     	; 0x2696 <fputc+0x46>
    266a:	46 81       	ldd	r20, Z+6	; 0x06
    266c:	57 81       	ldd	r21, Z+7	; 0x07
    266e:	24 81       	ldd	r18, Z+4	; 0x04
    2670:	35 81       	ldd	r19, Z+5	; 0x05
    2672:	42 17       	cp	r20, r18
    2674:	53 07       	cpc	r21, r19
    2676:	44 f4       	brge	.+16     	; 0x2688 <fputc+0x38>
    2678:	a0 81       	ld	r26, Z
    267a:	b1 81       	ldd	r27, Z+1	; 0x01
    267c:	9d 01       	movw	r18, r26
    267e:	2f 5f       	subi	r18, 0xFF	; 255
    2680:	3f 4f       	sbci	r19, 0xFF	; 255
    2682:	31 83       	std	Z+1, r19	; 0x01
    2684:	20 83       	st	Z, r18
    2686:	8c 93       	st	X, r24
    2688:	26 81       	ldd	r18, Z+6	; 0x06
    268a:	37 81       	ldd	r19, Z+7	; 0x07
    268c:	2f 5f       	subi	r18, 0xFF	; 255
    268e:	3f 4f       	sbci	r19, 0xFF	; 255
    2690:	37 83       	std	Z+7, r19	; 0x07
    2692:	26 83       	std	Z+6, r18	; 0x06
    2694:	14 c0       	rjmp	.+40     	; 0x26be <fputc+0x6e>
    2696:	8b 01       	movw	r16, r22
    2698:	ec 01       	movw	r28, r24
    269a:	fb 01       	movw	r30, r22
    269c:	00 84       	ldd	r0, Z+8	; 0x08
    269e:	f1 85       	ldd	r31, Z+9	; 0x09
    26a0:	e0 2d       	mov	r30, r0
    26a2:	09 95       	icall
    26a4:	89 2b       	or	r24, r25
    26a6:	e1 f6       	brne	.-72     	; 0x2660 <fputc+0x10>
    26a8:	d8 01       	movw	r26, r16
    26aa:	16 96       	adiw	r26, 0x06	; 6
    26ac:	8d 91       	ld	r24, X+
    26ae:	9c 91       	ld	r25, X
    26b0:	17 97       	sbiw	r26, 0x07	; 7
    26b2:	01 96       	adiw	r24, 0x01	; 1
    26b4:	17 96       	adiw	r26, 0x07	; 7
    26b6:	9c 93       	st	X, r25
    26b8:	8e 93       	st	-X, r24
    26ba:	16 97       	sbiw	r26, 0x06	; 6
    26bc:	ce 01       	movw	r24, r28
    26be:	df 91       	pop	r29
    26c0:	cf 91       	pop	r28
    26c2:	1f 91       	pop	r17
    26c4:	0f 91       	pop	r16
    26c6:	08 95       	ret

000026c8 <__ultoa_invert>:
    26c8:	fa 01       	movw	r30, r20
    26ca:	aa 27       	eor	r26, r26
    26cc:	28 30       	cpi	r18, 0x08	; 8
    26ce:	51 f1       	breq	.+84     	; 0x2724 <__ultoa_invert+0x5c>
    26d0:	20 31       	cpi	r18, 0x10	; 16
    26d2:	81 f1       	breq	.+96     	; 0x2734 <__ultoa_invert+0x6c>
    26d4:	e8 94       	clt
    26d6:	6f 93       	push	r22
    26d8:	6e 7f       	andi	r22, 0xFE	; 254
    26da:	6e 5f       	subi	r22, 0xFE	; 254
    26dc:	7f 4f       	sbci	r23, 0xFF	; 255
    26de:	8f 4f       	sbci	r24, 0xFF	; 255
    26e0:	9f 4f       	sbci	r25, 0xFF	; 255
    26e2:	af 4f       	sbci	r26, 0xFF	; 255
    26e4:	b1 e0       	ldi	r27, 0x01	; 1
    26e6:	3e d0       	rcall	.+124    	; 0x2764 <__ultoa_invert+0x9c>
    26e8:	b4 e0       	ldi	r27, 0x04	; 4
    26ea:	3c d0       	rcall	.+120    	; 0x2764 <__ultoa_invert+0x9c>
    26ec:	67 0f       	add	r22, r23
    26ee:	78 1f       	adc	r23, r24
    26f0:	89 1f       	adc	r24, r25
    26f2:	9a 1f       	adc	r25, r26
    26f4:	a1 1d       	adc	r26, r1
    26f6:	68 0f       	add	r22, r24
    26f8:	79 1f       	adc	r23, r25
    26fa:	8a 1f       	adc	r24, r26
    26fc:	91 1d       	adc	r25, r1
    26fe:	a1 1d       	adc	r26, r1
    2700:	6a 0f       	add	r22, r26
    2702:	71 1d       	adc	r23, r1
    2704:	81 1d       	adc	r24, r1
    2706:	91 1d       	adc	r25, r1
    2708:	a1 1d       	adc	r26, r1
    270a:	20 d0       	rcall	.+64     	; 0x274c <__ultoa_invert+0x84>
    270c:	09 f4       	brne	.+2      	; 0x2710 <__ultoa_invert+0x48>
    270e:	68 94       	set
    2710:	3f 91       	pop	r19
    2712:	2a e0       	ldi	r18, 0x0A	; 10
    2714:	26 9f       	mul	r18, r22
    2716:	11 24       	eor	r1, r1
    2718:	30 19       	sub	r19, r0
    271a:	30 5d       	subi	r19, 0xD0	; 208
    271c:	31 93       	st	Z+, r19
    271e:	de f6       	brtc	.-74     	; 0x26d6 <__ultoa_invert+0xe>
    2720:	cf 01       	movw	r24, r30
    2722:	08 95       	ret
    2724:	46 2f       	mov	r20, r22
    2726:	47 70       	andi	r20, 0x07	; 7
    2728:	40 5d       	subi	r20, 0xD0	; 208
    272a:	41 93       	st	Z+, r20
    272c:	b3 e0       	ldi	r27, 0x03	; 3
    272e:	0f d0       	rcall	.+30     	; 0x274e <__ultoa_invert+0x86>
    2730:	c9 f7       	brne	.-14     	; 0x2724 <__ultoa_invert+0x5c>
    2732:	f6 cf       	rjmp	.-20     	; 0x2720 <__ultoa_invert+0x58>
    2734:	46 2f       	mov	r20, r22
    2736:	4f 70       	andi	r20, 0x0F	; 15
    2738:	40 5d       	subi	r20, 0xD0	; 208
    273a:	4a 33       	cpi	r20, 0x3A	; 58
    273c:	18 f0       	brcs	.+6      	; 0x2744 <__ultoa_invert+0x7c>
    273e:	49 5d       	subi	r20, 0xD9	; 217
    2740:	31 fd       	sbrc	r19, 1
    2742:	40 52       	subi	r20, 0x20	; 32
    2744:	41 93       	st	Z+, r20
    2746:	02 d0       	rcall	.+4      	; 0x274c <__ultoa_invert+0x84>
    2748:	a9 f7       	brne	.-22     	; 0x2734 <__ultoa_invert+0x6c>
    274a:	ea cf       	rjmp	.-44     	; 0x2720 <__ultoa_invert+0x58>
    274c:	b4 e0       	ldi	r27, 0x04	; 4
    274e:	a6 95       	lsr	r26
    2750:	97 95       	ror	r25
    2752:	87 95       	ror	r24
    2754:	77 95       	ror	r23
    2756:	67 95       	ror	r22
    2758:	ba 95       	dec	r27
    275a:	c9 f7       	brne	.-14     	; 0x274e <__ultoa_invert+0x86>
    275c:	00 97       	sbiw	r24, 0x00	; 0
    275e:	61 05       	cpc	r22, r1
    2760:	71 05       	cpc	r23, r1
    2762:	08 95       	ret
    2764:	9b 01       	movw	r18, r22
    2766:	ac 01       	movw	r20, r24
    2768:	0a 2e       	mov	r0, r26
    276a:	06 94       	lsr	r0
    276c:	57 95       	ror	r21
    276e:	47 95       	ror	r20
    2770:	37 95       	ror	r19
    2772:	27 95       	ror	r18
    2774:	ba 95       	dec	r27
    2776:	c9 f7       	brne	.-14     	; 0x276a <__ultoa_invert+0xa2>
    2778:	62 0f       	add	r22, r18
    277a:	73 1f       	adc	r23, r19
    277c:	84 1f       	adc	r24, r20
    277e:	95 1f       	adc	r25, r21
    2780:	a0 1d       	adc	r26, r0
    2782:	08 95       	ret

00002784 <__prologue_saves__>:
    2784:	2f 92       	push	r2
    2786:	3f 92       	push	r3
    2788:	4f 92       	push	r4
    278a:	5f 92       	push	r5
    278c:	6f 92       	push	r6
    278e:	7f 92       	push	r7
    2790:	8f 92       	push	r8
    2792:	9f 92       	push	r9
    2794:	af 92       	push	r10
    2796:	bf 92       	push	r11
    2798:	cf 92       	push	r12
    279a:	df 92       	push	r13
    279c:	ef 92       	push	r14
    279e:	ff 92       	push	r15
    27a0:	0f 93       	push	r16
    27a2:	1f 93       	push	r17
    27a4:	cf 93       	push	r28
    27a6:	df 93       	push	r29
    27a8:	cd b7       	in	r28, 0x3d	; 61
    27aa:	de b7       	in	r29, 0x3e	; 62
    27ac:	ca 1b       	sub	r28, r26
    27ae:	db 0b       	sbc	r29, r27
    27b0:	0f b6       	in	r0, 0x3f	; 63
    27b2:	f8 94       	cli
    27b4:	de bf       	out	0x3e, r29	; 62
    27b6:	0f be       	out	0x3f, r0	; 63
    27b8:	cd bf       	out	0x3d, r28	; 61
    27ba:	09 94       	ijmp

000027bc <__epilogue_restores__>:
    27bc:	2a 88       	ldd	r2, Y+18	; 0x12
    27be:	39 88       	ldd	r3, Y+17	; 0x11
    27c0:	48 88       	ldd	r4, Y+16	; 0x10
    27c2:	5f 84       	ldd	r5, Y+15	; 0x0f
    27c4:	6e 84       	ldd	r6, Y+14	; 0x0e
    27c6:	7d 84       	ldd	r7, Y+13	; 0x0d
    27c8:	8c 84       	ldd	r8, Y+12	; 0x0c
    27ca:	9b 84       	ldd	r9, Y+11	; 0x0b
    27cc:	aa 84       	ldd	r10, Y+10	; 0x0a
    27ce:	b9 84       	ldd	r11, Y+9	; 0x09
    27d0:	c8 84       	ldd	r12, Y+8	; 0x08
    27d2:	df 80       	ldd	r13, Y+7	; 0x07
    27d4:	ee 80       	ldd	r14, Y+6	; 0x06
    27d6:	fd 80       	ldd	r15, Y+5	; 0x05
    27d8:	0c 81       	ldd	r16, Y+4	; 0x04
    27da:	1b 81       	ldd	r17, Y+3	; 0x03
    27dc:	aa 81       	ldd	r26, Y+2	; 0x02
    27de:	b9 81       	ldd	r27, Y+1	; 0x01
    27e0:	ce 0f       	add	r28, r30
    27e2:	d1 1d       	adc	r29, r1
    27e4:	0f b6       	in	r0, 0x3f	; 63
    27e6:	f8 94       	cli
    27e8:	de bf       	out	0x3e, r29	; 62
    27ea:	0f be       	out	0x3f, r0	; 63
    27ec:	cd bf       	out	0x3d, r28	; 61
    27ee:	ed 01       	movw	r28, r26
    27f0:	08 95       	ret

000027f2 <_exit>:
    27f2:	f8 94       	cli

000027f4 <__stop_program>:
    27f4:	ff cf       	rjmp	.-2      	; 0x27f4 <__stop_program>
